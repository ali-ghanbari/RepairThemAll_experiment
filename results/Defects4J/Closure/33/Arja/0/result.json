{
  "repair_end": "2018-12-01 16:10:56.935043", 
  "repair_begin": "2018-12-01 15:44:17.715225", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_791/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:07.976132296 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1397/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:52.609683375 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1397/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:52.609683375 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_30/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:52.617710837 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2875/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:21.906004326 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2469/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:33.444679464 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2689/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:02.813378527 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_641/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:01.403650998 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2975/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:07.842370096 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2511/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:49.096801151 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_651/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:05.231678134 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1753/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:03.242629073 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_613/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:50.975577444 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_613/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:50.975577444 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2982/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:10.726393108 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2982/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:10.726393108 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2125/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:18.647649211 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_501/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:07.131274555 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_501/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:07.135274583 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_668/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:11.711724232 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3170/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:33.643056744 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_678/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:15.259749555 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2838/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:08.217895634 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2838/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:08.217895634 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2197/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:44.963847421 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2546/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:04.092918058 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2546/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:04.100918121 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1851/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:38.858894749 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3317/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:34.655547149 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1967/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:20.931212831 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2853/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:13.889940656 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2707/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:09.205428885 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_783/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:02.980095535 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_996/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:25.764693830 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3259/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:13.179374358 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3370/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:54.087705484 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3370/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:54.087705484 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2395/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:59.152414164 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2219/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:53.351910937 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2219/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:53.351910937 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_595/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:44.483531932 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3265/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:15.311391504 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_926/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:59.584517236 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_926/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:59.584517236 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3273/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:18.203414764 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2824/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:02.781852510 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2701/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:07.077412114 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2701/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:07.077412114 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2275/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:14.600072508 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2213/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:50.919892505 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_367/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:11.786850658 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_367/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:11.790850691 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3267/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:16.027397263 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1724/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:52.434549182 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2369/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:49.900342916 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_91/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:21.533945449 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_91/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:21.537945481 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1048/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:45.132816655 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1871/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:45.994948393 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1446/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:10.537811820 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2940/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:54.930267135 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2940/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:54.930267135 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1379/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:46.173637598 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_591/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:43.059521978 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_591/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:43.059521978 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2600/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:25.449085054 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2600/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:25.449085054 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2436/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:20.152576410 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3346/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:45.419633818 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3180/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:39.563104260 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1438/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:07.697791384 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_499/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:06.419269728 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2454/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:27.768635426 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_930/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:01.016528043 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_930/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:01.020528073 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3225/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:59.583265061 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2578/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:16.933018394 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2578/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:16.933018394 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1349/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:35.429561591 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1665/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:31.082392444 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_81/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:17.401911841 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_912/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:54.284477294 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2602/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:26.161090631 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2248/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:04.483995467 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2873/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:21.185998605 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1296/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:16.105426246 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2528/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:56.228856713 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2528/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:56.236856775 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1343/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:33.285546487 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1179/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:33.237132857 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1598/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:06.006210365 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2071/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:59.383505211 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_696/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:22.199799258 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2223/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:54.851922311 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_649/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:04.519673082 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1863/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:43.146926968 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1736/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:56.802581426 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_832/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:24.788256682 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2612/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:30.033120972 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3086/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:52.970730754 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2183/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:39.951809544 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2183/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:39.951809544 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_145/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:43.462124229 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_26/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:51.053698186 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3088/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:53.778737222 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1029/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:38.036771334 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_115/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:31.542026956 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1253/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:00.261316657 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1253/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:00.265316684 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3162/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:30.739033442 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_836/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:26.200267175 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1203/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:41.785190550 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3233/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:02.715290231 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_895/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:47.784428432 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1578/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:58.910159260 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1578/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:58.910159260 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_670/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:12.419729280 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_992/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:24.348684961 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1849/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:38.150889433 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_373/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:13.950868566 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_373/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:13.954868599 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2780/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:44.485707550 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2780/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:44.561708152 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1479/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:22.669899480 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2097/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:08.659574429 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2083/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:03.679537239 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2083/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:03.679537239 -0500\n@@ -109,12 +109,7 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1424/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:02.685755399 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1424/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:02.689755429 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2365/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:48.364331101 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1941/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:11.703142704 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2320/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:31.696203176 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1117/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:10.244979856 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_758/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:51.860014065 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1657/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:28.222371564 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2538/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:01.236895770 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2061/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:55.715477904 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3158/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:28.403014700 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_408/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:27.050977069 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2699/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:06.361406474 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_891/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:46.356417714 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2189/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:42.067825529 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1351/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:36.141566612 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1351/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:36.141566612 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_990/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:23.592680232 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_990/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:23.592680232 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2656/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:49.077270457 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2231/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:57.823944863 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1463/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:16.989858366 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2099/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:09.395579931 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2099/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:09.395579931 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1064/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:50.820853243 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2790/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:48.573739915 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_749/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:47.379981381 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_475/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:57.779211396 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_495/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:04.963259865 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3344/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:44.715628148 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2239/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:00.695966673 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2260/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:08.744027885 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2137/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:22.875680943 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2634/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:39.145192445 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_73/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:12.961875759 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_477/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:58.539216508 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3209/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:52.083204800 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3366/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:52.627692436 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2642/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:42.669220111 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2427/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:14.652533849 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1702/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:44.646491841 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1794/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:18.214740321 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1794/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:18.214740321 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1607/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:09.534235844 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2131/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:20.763665086 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2594/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:23.269067981 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2594/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:23.269067981 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_586/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:40.923507068 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1832/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:31.738841357 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2677/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:57.865339574 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_787/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:06.088118393 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2845/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:11.041918047 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3143/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:21.314957848 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_183/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:57.934242594 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1881/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:49.642975868 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2471/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:34.156684993 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2471/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:34.160685023 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_236/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:21.490435848 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_64/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:07.957835130 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_887/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:44.936407065 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_887/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:44.936407065 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2756/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:34.797630911 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2756/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:34.801630942 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2760/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:36.245642361 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1420/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:01.265745224 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2087/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:05.091547777 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1077/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:55.844885747 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2316/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:30.276192301 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1741/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:58.970597452 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_960/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:12.916613928 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_633/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:58.563630912 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_633/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:58.563630912 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3090/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:54.486742889 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1925/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:06.003099484 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1105/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:05.960951715 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_956/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:11.496605178 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2403/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:03.248445753 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2403/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:03.248445753 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_6/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:39.845607659 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2425/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:13.684526362 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2425/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:13.692526425 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2480/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:37.700712519 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2480/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:37.704712549 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2703/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:07.789417726 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_32/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:53.369716920 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_529/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:18.147349635 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1302/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:18.241441117 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2752/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:33.353619496 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2776/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:43.065696312 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1673/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:33.930413263 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1808/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:23.194777467 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_47/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:59.613767473 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_47/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:59.613767473 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_842/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:28.356283212 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_700/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:23.619809455 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_700/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:23.623809484 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1663/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:30.374387273 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1663/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:30.378387302 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1276/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:08.973376755 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1152/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:23.265066099 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3199/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:47.835170679 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3199/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:47.839170711 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_518/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:13.695319206 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1816/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:26.030798651 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1816/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:26.034798682 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3287/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:23.171454730 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2673/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:56.425328243 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_599/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:45.899541840 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2463/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:31.308662886 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_647/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:03.551666216 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2636/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:39.889198285 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2129/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:20.059659803 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2129/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:20.059659803 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_71/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:11.661865199 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1508/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:33.341976777 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1841/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:35.322868216 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_779/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:01.536084929 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1205/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:42.493195349 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_885/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:44.220401697 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_394/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:21.914934510 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2731/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:21.569526408 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1455/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:14.093837453 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1455/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:14.097837482 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2620/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:33.133145277 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3227/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:00.439271939 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1389/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:49.769663153 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_848/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:30.648300277 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3213/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:53.923219581 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3213/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:53.923219581 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1972/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:23.039228877 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1272/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:07.517366684 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_256/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:29.270499826 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1728/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:53.922560160 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2967/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:04.998347408 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1062/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:50.108848652 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2691/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:03.521384102 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1726/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:53.166554581 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1158/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:25.389080267 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1792/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:17.502735016 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1792/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:17.502735016 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2920/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:45.318190562 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1937/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:10.271131839 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1403/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:54.793698950 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1568/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:55.342133638 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1568/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:55.342133638 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_323/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:55.626717080 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3160/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:29.139020605 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1365/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:41.153602020 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1027/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:37.304766681 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3104/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:59.474782828 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3104/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:59.474782828 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1471/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:19.833878936 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3321/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:36.179559418 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3321/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:36.179559418 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1611/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:10.974246258 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2008/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:36.563332052 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_117/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:32.334033413 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2973/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:07.130364416 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2973/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:07.130364416 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2049/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:51.447446043 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2049/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:51.447446043 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n@@ -212,7 +209,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_525/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:16.715339835 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3237/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:04.643305728 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1704/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:45.354497046 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_653/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:05.971683388 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2784/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:46.337722211 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2348/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:41.936281706 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2575/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:15.525007380 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_244/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:24.854463502 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_244/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:24.854463502 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1494/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:28.337940630 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1083/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:58.148900713 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1461/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:16.249853020 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1461/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:16.253853049 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3187/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:42.443127381 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1895/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:54.627013458 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1895/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:54.631013488 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1625/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:15.938282211 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1625/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:15.938282211 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1274/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:08.229371608 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2851/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:13.177935003 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2695/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:04.949395350 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2695/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:04.949395350 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2207/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:48.763876176 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1853/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:39.562900035 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_353/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:06.754809035 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2305/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:26.028159790 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_359/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:08.898826767 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_558/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:29.679428986 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1383/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:47.609647797 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2614/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:31.001128560 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2614/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:31.005128591 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1228/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:50.997253191 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1228/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:50.997253191 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3122/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:09.194860692 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3062/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:44.166660300 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2997/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:16.398438381 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2997/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:16.398438381 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2256/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:07.304016923 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2375/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:52.060359536 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_371/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:13.230862607 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_371/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:13.234862640 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2059/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:55.007472637 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2059/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:55.011472666 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2622/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:33.893151237 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_212/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:10.674347026 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2225/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:55.559927682 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1011/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:31.600730547 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1011/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:31.600730547 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2340/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:39.092259876 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2340/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:39.092259876 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1353/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:36.849571606 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3114/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:05.566831627 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_467/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:54.035186263 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1619/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:13.810266787 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1619/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:13.814266816 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2832/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:06.085878718 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3352/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:47.635651665 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3352/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:47.639651697 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1550/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:48.970088001 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1017/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:33.748744125 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_817/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:19.080214335 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_817/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:19.080214335 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3023/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:26.942522594 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2521/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:52.656828877 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2521/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:52.656828877 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1777/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:11.794692538 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2203/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:47.347865457 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1632/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:18.766302735 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3263/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:14.595385745 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1347/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:34.717556574 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2077/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:01.559521427 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2077/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:01.559521427 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3221/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:57.183245774 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_771/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:57.400054593 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_727/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:35.567895606 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1773/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:10.374681985 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1773/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:10.374681985 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3315/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:33.943541419 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3315/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:33.947541451 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2532/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:58.376873462 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_639/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:00.695645987 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_79/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:16.605905370 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_216/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:12.566362553 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_216/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:12.566362553 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return false;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1947/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:13.827158828 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1947/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:13.827158828 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_854/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:32.784316197 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1679/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:36.114429247 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2912/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:41.498160147 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_347/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:04.478790217 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3176/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:37.711089394 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1951/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:15.243169583 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1951/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:15.243169583 -0500\n@@ -110,11 +110,8 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n@@ -212,7 +209,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_974/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:17.896644745 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3329/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:39.003582153 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1970/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:22.335223517 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1015/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:33.016739493 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1869/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:45.286943066 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_569/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:34.419461818 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2065/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:57.227489156 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2065/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:57.227489156 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_797/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:10.124148130 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_797/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:10.124148130 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n@@ -258,7 +253,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1710/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:47.478512669 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2881/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:24.442024480 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2191/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:42.827831272 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_507/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:09.359289682 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1749/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:01.798618378 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_918/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:56.664495220 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_918/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:56.676495310 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1286/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:12.525401371 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1286/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:12.525401371 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_897/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:48.488433718 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3243/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:07.399327884 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3003/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:18.518455308 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1475/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:21.249889189 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1475/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:21.253889218 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1129/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:14.557008299 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_101/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:25.605978594 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_101/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:25.605978594 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_902/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:50.616449704 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_902/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:50.616449704 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n@@ -212,7 +207,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_875/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:40.632374824 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_250/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:27.118482122 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_302/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:47.690651581 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2628/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:36.761173735 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1897/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:55.331018773 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_631/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:57.803625544 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_815/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:18.360209002 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_815/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:18.364209032 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return false;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2488/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:40.572734837 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2754/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:34.077625219 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2754/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:34.077625219 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1282/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:11.101391495 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2014/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:38.687348291 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2592/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:22.553062375 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2592/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:22.553062375 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3092/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:55.190748526 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1091/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:00.972919102 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2526/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:54.948846736 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2667/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:54.285311408 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2667/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:54.289311439 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1066/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:51.540857892 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2934/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:51.958243452 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1037/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:40.884789481 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1037/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:40.888789506 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2199/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:45.911854591 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2006/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:35.835326488 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2193/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:43.535836624 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2857/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:15.325952058 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2946/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:57.166284958 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1939/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:10.995137331 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1939/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:10.995137331 -0500\n@@ -110,11 +110,8 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_204/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:07.254318971 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2646/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:44.109231421 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1506/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:32.629971733 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1506/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:32.633971762 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3054/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:40.986634864 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3054/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:40.986634864 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_135/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:39.766094046 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2291/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:20.820119982 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3362/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:51.203680406 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1978/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:25.163245055 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2616/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:31.709134111 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_623/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:54.955605452 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3191/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:43.867138815 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2411/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:06.088467672 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2411/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:06.108467826 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n@@ -258,7 +253,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_527/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:17.431344733 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_527/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:17.431344733 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_426/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:33.803033058 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_426/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:33.803033058 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1013/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:32.308735019 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3289/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:23.879460427 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1955/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:16.691180586 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1955/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:16.695180616 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2660/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:51.293287878 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2660/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:51.301287941 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_522/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:15.243329772 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1700/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:43.938486637 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3275/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:18.907420427 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1913/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:01.003061635 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1913/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:01.003061635 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3140/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:19.334941972 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1720/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:51.026538800 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1488/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:26.217925224 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1488/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:26.217925224 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2879/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:23.718018725 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_908/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:52.744465706 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1453/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:13.361832173 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3168/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:32.891050710 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3168/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:32.895050742 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2558/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:09.060956855 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1496/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:29.045945778 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2608/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:28.313107492 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2914/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:42.634169191 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2133/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:21.471670401 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_988/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:22.876675757 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1335/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:30.365525951 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2671/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:55.717322673 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2671/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:55.717322673 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1451/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:12.653827067 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3147/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:22.730969204 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3147/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:22.730969204 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_713/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:29.827854139 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_400/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:24.090952538 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_43/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:58.021754577 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3149/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:23.450974979 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3149/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:23.450974979 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2229/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:57.091939306 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2229/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:57.099939367 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2517/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:51.228817753 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2517/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:51.228817753 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1426/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:03.393760476 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2177/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:37.787793209 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2379/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:53.476370436 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3350/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:46.899645738 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2494/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:42.692751320 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2358/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:45.476308900 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_708/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:27.311836009 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3153/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:25.714993137 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_980/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:20.024657972 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2127/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:19.347654462 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_635/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:59.275635944 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_711/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:29.111848977 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3096/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:56.630760055 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2826/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:03.577858824 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1909/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:59.587050928 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1586/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:01.758179748 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2144/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:25.731702403 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1789/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:16.090724499 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1648/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:24.478344275 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1648/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:24.478344275 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2289/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:20.088114392 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_505/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:08.575284356 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_49/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:00.481774506 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2293/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:21.524125361 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1250/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:58.853306981 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2515/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:50.512812177 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2169/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:34.951771817 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2169/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:34.951771817 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1747/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:01.094613166 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_745/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:44.091957446 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_444/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:42.787107619 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1920/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:03.863083278 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_351/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:06.014802916 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2456/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:28.480640946 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1887/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:51.798992121 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_864/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:36.332342677 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1818/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:26.734803914 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1183/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:34.657142412 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1177/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:32.529128098 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1207/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:43.201200148 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1207/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:43.205200175 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1331/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:28.945515979 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_189/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:00.290261891 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_936/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:03.144544114 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1877/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:48.118964386 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_111/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:29.718012090 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_111/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:29.718012090 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1510/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:34.053981821 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1510/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:34.057981850 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_838/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:26.936272647 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1244/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:56.725292378 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1244/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:56.729292405 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2624/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:35.053160336 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3041/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:35.286589284 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_173/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:54.246212403 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_157/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:47.798159662 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2235/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:59.255955735 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2235/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:59.255955735 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1101/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:04.516942257 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1899/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:56.047024179 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1210/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:44.613209730 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2393/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:58.440408676 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1566/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:54.630128530 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1566/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:54.630128530 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3084/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:52.214724702 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3037/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:33.254573039 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2385/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:55.596386762 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1025/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:36.588762132 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1025/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:36.588762132 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_375/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:14.662874459 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3311/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:32.455529441 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1444/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:09.829806722 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1444/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:09.829806722 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2524/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:54.092840066 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1261/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:03.137336453 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1734/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:56.094576195 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_345/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:03.754784232 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1044/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:43.716807584 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_107/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:28.137999216 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3112/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:04.330821722 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2022/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:41.511369897 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1562/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:53.218118408 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_950/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:09.336590956 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_950/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:09.340590986 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_603/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:47.323551815 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_806/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:14.768182422 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_806/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:14.772182452 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_867/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:37.748353256 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2855/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:14.605946341 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2855/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:14.609946372 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2167/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:34.243766480 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_390/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:20.454922416 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1300/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:17.533436186 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1147/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:21.081051558 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1681/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:36.818434403 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_491/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:03.539250232 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_491/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:03.543250260 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1097/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:03.100932996 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3056/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:41.738640879 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2279/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:16.508087063 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_424/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:33.071026986 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1079/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:56.560890394 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1079/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:56.560890394 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3072/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:47.950690577 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_163/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:50.102178501 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_163/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:50.134178764 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1775/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:11.086687275 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1775/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:11.086687275 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1855/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:40.286905473 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2179/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:38.511798673 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3271/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:17.495409070 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3271/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:17.495409070 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return false;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_684/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:17.503765603 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_823/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:21.220230198 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_823/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:21.220230198 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2123/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:17.943643931 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1133/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:15.973017666 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_131/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:38.274081867 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2330/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:35.312230885 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2330/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:35.312230885 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1492/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:27.633935511 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3257/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:12.467368633 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3257/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:12.467368633 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2686/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:01.401367409 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_133/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:39.014087907 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1959/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:18.103191319 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1242/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:56.005287442 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1242/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:56.005287442 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3217/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:55.359231118 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3217/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:55.363231150 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_36/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:54.949729706 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2841/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:09.625906807 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2490/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:41.280740342 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_719/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:32.227871460 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1843/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:36.030873526 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1843/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:36.034873556 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1005/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:29.316716146 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1109/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:07.380961029 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2227/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:56.275933114 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2227/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:56.279933144 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n@@ -258,7 +255,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1976/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:24.459239692 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1976/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:24.459239692 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_986/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:22.172671362 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1234/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:53.157267947 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1191/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:37.517161691 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1191/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:37.517161691 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_272/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:36.194556825 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1197/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:39.657176149 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1197/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:39.657176149 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2117/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:15.795627831 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1226/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:50.281248306 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1514/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:35.469991861 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_412/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:28.482988940 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3368/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:53.339698800 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3368/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:53.339698800 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1087/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:59.560909901 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1373/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:44.041622474 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1373/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:44.041622474 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1769/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:08.954671438 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2498/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:44.120762428 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_690/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:19.687781242 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1751/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:02.510623651 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1751/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:02.514623681 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1974/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:23.751234299 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1974/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:23.751234299 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1602/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:07.422220586 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2534/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:59.268880417 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2429/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:15.564540903 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2828/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:04.453865772 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_45/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:58.773760669 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2556/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:08.356951355 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2556/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:08.356951355 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_119/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:33.050039251 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1516/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:36.177996885 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_232/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:19.782421812 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1175/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:31.797123181 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1367/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:41.885607200 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2988/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:12.862410155 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_962/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:13.624618297 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1554/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:50.386098130 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1554/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:50.386098130 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3309/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:31.743523710 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3309/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:31.743523710 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_964/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:14.332622670 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1246/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:57.441297289 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1246/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:57.441297289 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2154/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:29.263728970 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_493/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:04.255255075 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1584/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:01.054174681 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1949/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:14.531164174 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3245/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:08.215334444 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_674/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:13.839739413 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2264/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:10.164038700 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1661/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:29.666382103 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1661/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:29.666382103 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1457/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:14.801842563 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1393/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:51.193673288 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1393/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:51.193673288 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_704/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:25.039819660 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2205/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:48.059870846 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2205/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:48.059870846 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1642/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:22.314328524 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1642/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:22.314328524 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1042/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:43.008803052 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_509/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:10.067294495 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3279/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:20.327431850 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1779/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:12.498697772 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_341/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:02.138770875 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1716/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:49.610528367 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1646/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:23.766339091 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3100/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:58.050771425 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3100/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:58.050771425 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2295/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:22.228130739 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2458/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:29.188646438 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1071/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:53.692871804 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1071/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:53.692871804 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1214/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:46.029219350 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2107/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:12.239601203 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1640/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:21.602323345 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_459/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:50.031159485 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1399/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:53.369688793 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_593/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:43.767526926 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1923/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:05.267093910 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3064/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:45.038667277 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3064/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:45.038667277 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_584/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:40.207502076 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_584/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:40.207502076 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n@@ -212,7 +207,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2955/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:00.722313307 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_676/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:14.547744469 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3138/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:18.398934467 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_432/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:36.231053202 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1218/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:47.445228983 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1218/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:47.445228983 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1308/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:20.405456207 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1308/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:20.409456235 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2297/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:22.972136425 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2297/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:22.976136456 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1627/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:16.646287348 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1708/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:46.770507460 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2806/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:54.845789599 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_179/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:56.486230739 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2165/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:33.535761143 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_548/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:25.359399172 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_819/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:19.788219582 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2711/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:10.633440140 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2711/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:10.637440172 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3118/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:07.258845180 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2243/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:02.315978984 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2322/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:32.400208568 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_729/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:36.283900789 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2764/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:38.381659253 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2750/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:32.593613488 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2816/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:59.853829293 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3033/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:31.446558588 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3219/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:56.295238639 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3219/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:56.299238671 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_682/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:16.747760194 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_682/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:16.747760194 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2201/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:46.623859978 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2201/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:46.623859978 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return false;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_349/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:05.194796136 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_982/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:20.748662482 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2566/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:11.904979078 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1375/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:44.753627523 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3364/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:51.911686112 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_191/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:01.054268150 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1442/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:09.121801626 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_369/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:12.506856616 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_369/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:12.510856649 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1290/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:13.945411229 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1290/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:13.945411229 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_702/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:24.327814542 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2383/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:54.892381339 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3203/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:49.675185457 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3203/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:49.679185489 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2969/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:05.702353024 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3098/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:57.338765724 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_471/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:56.051199785 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_455/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:48.259147668 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_455/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:48.263147694 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_601/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:46.611546827 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_274/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:36.910562722 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2387/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:56.300392185 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2564/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:11.200973576 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_282/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:39.790586449 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2916/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:43.486175974 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3296/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:26.723483310 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2444/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:24.184607642 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2632/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:38.241185349 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2654/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:48.361264830 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1327/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:27.537506100 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_539/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:21.795374654 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2648/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:44.905237674 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1594/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:04.586200124 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2423/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:12.928520516 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3151/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:24.474983192 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3151/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:24.490983320 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1588/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:02.470184875 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2893/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:30.330071290 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2936/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:52.750249763 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1929/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:07.415110184 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2308/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:27.432170532 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1236/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:53.869272817 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1524/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:39.006016971 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_694/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:21.487794149 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1323/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:26.109496090 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_785/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:04.592107387 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3285/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:22.463449034 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2719/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:14.549471018 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2719/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:14.573471207 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1800/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:20.346756215 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1800/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:20.346756215 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1337/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:31.073530927 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2158/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:30.715739900 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2163/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:32.823755778 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2342/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:39.800265309 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_751/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:48.263987824 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2984/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:11.434398758 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_12/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:43.953640813 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1377/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:45.465632574 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1377/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:45.469632602 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_295/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:44.822627928 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_295/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:44.822627928 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2743/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:27.653574452 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1019/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:34.456748609 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_377/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:15.378880385 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2187/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:41.363820210 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2863/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:17.541969657 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1500/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:30.497956342 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1500/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:30.497956342 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_565/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:32.683449779 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3078/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:50.078707606 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3078/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:50.082707638 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_402/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:24.846958803 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_970/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:16.464635863 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2438/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:21.456586509 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2438/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:21.476586663 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2002/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:34.423315700 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1149/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:21.797056322 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1149/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:21.797056322 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2598/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:24.689079101 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2802/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:53.353777777 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1467/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:18.405868604 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2618/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:32.425139725 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2618/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:32.425139725 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3174/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:36.727081496 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1216/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:46.733224138 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_10/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:42.361627962 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3193/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:44.615144821 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2033/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:45.779402581 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1414/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:59.085729617 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2156/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:30.011734600 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_998/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:26.480698322 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_998/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:26.480698322 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_396/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:22.642940541 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_396/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:22.642940541 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3172/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:35.775073854 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_304/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:48.418657587 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_304/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:48.422657620 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1615/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:12.398256562 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_737/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:39.167921686 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_75/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:14.057884662 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2314/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:29.568186879 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_446/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:43.583114229 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_446/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:43.587114263 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1407/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:56.209709058 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2509/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:48.388795639 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2509/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:48.388795639 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2705/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:08.497423304 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_900/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:49.904444353 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2004/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:35.127321078 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_306/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:49.134663494 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2091/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:06.523558470 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2091/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:06.523558470 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_95/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:23.385960520 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_121/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:33.786045253 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2281/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:17.236092618 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2281/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:17.236092618 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2150/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:27.843718285 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_799/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:10.832153353 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1259/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:02.425331547 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1259/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:02.429331576 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_242/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:24.126457516 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2861/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:16.809963843 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_297/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:45.538633832 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_89/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:20.601937866 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1528/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:40.442027183 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1528/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:40.442027183 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_754/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:50.300002675 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2431/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:16.340546906 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1998/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:33.011304915 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2990/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:13.566415774 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_672/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:13.127734331 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1185/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:35.361147153 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2354/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:44.060298020 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1783/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:13.910708273 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2986/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:12.142404408 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1685/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:38.266445012 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_230/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:19.014415501 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1189/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:36.777156698 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1166/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:28.253099417 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1638/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:20.894318197 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3323/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:36.883565085 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_946/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:07.552577448 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_946/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:07.552577448 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2440/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:22.580595215 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2877/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:22.862011923 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_473/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:56.895205454 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_976/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:18.608649167 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_976/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:18.608649167 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2328/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:34.540224966 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2328/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:34.544224997 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_920/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:57.452501159 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2141/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:24.299691641 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1828/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:30.318830725 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1828/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:30.322830754 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2897/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:32.566089073 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2897/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:32.614089456 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_276/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:37.646568784 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1003/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:28.596711615 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_479/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:59.255221328 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3183/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:41.015115916 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3183/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:41.015115916 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1418/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:00.533739981 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1418/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:00.533739981 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1859/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:41.722916263 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_513/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:11.491304185 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_406/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:26.282970704 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_406/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:26.294970803 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2766/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:39.365667037 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_856/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:33.492321478 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2501/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:45.536773443 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2501/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:45.536773443 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2963/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:03.570336019 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1345/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:33.993551472 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1531/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:41.858037260 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1111/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:08.112965836 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3005/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:19.234461026 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3005/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:19.242461089 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_789/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:07.052125490 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_99/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:24.869972601 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2093/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:07.235563788 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2442/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:23.468602095 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_16/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:45.893656481 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1143/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:19.637041960 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1143/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:19.637041960 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1802/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:21.078761675 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2113/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:14.363617104 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1669/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:32.510402880 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2503/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:46.244778952 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1145/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:20.369046824 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2334/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:36.832242539 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3235/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:03.479296372 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2948/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:57.882290665 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_731/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:36.991905915 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_365/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:11.046844535 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_365/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:11.046844535 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1125/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:13.136998919 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1125/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:13.136998919 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3120/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:07.974850917 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1440/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:08.409796505 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1313/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:22.557471236 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1339/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:31.785535932 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_554/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:28.227418953 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_554/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:28.227418953 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2344/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:40.504270713 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_24/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:50.297692073 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2640/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:41.881213923 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_97/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:24.141966674 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2252/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:05.896006208 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_928/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:00.300522639 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_928/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:00.300522639 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2552/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:06.940940295 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3306/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:30.327512313 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3066/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:45.806673421 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3066/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:45.806673421 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3106/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:00.186788530 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3106/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:00.422790421 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_769/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:56.652049114 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_497/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:05.679264714 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_497/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:05.683264741 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2381/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:54.188375918 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2381/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:54.188375918 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1540/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:45.414062605 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1469/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:19.121873783 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1469/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:19.125873812 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_821/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:20.508224919 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_821/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:20.508224919 -0500\n@@ -110,11 +110,8 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n@@ -212,7 +209,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_914/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:55.228484402 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_325/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:56.366723191 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_325/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:56.366723191 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1609/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:10.242240963 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2772/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:41.649685107 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3356/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:49.051663071 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2721/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:15.309477012 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2721/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:15.365477454 -0500\n@@ -109,12 +109,7 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1891/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:53.211002772 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1355/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:37.557576604 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2570/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:13.320990147 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2570/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:13.320990147 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_850/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:31.364305611 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_850/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:31.364305611 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2037/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:47.203413494 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_686/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:18.239770871 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2903/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:36.078117012 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_781/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:02.244090129 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_331/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:58.522740998 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_331/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:58.522740998 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2733/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:22.489533671 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_889/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:45.644412374 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_337/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:00.678758810 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1691/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:40.410460733 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_153/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:46.350147827 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_123/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:35.194056737 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_123/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:35.210056867 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return false;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3082/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:51.506719035 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1359/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:38.969586577 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1073/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:54.400876388 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1073/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:54.400876388 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2580/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:17.637023900 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1181/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:33.945137619 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1865/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:43.870932413 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:36.945584272 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2356/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:44.772303491 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2542/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:02.652906819 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_264/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:32.834529158 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2338/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:38.376254383 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2338/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:38.376254383 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_280/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:39.078580583 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2258/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:08.008022282 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2258/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:08.008022282 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_139/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:41.294106522 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2992/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:14.278421458 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2992/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:14.282421489 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2584/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:19.489038391 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1687/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:38.998450377 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_588/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:41.631512008 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3197/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:46.851162777 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_327/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:57.078729071 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2830/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:05.377873102 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1232/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:52.449263108 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1987/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:28.695271979 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1987/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:28.695271979 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_932/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:01.728533419 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2952/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:59.310302050 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2568/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:12.608984581 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2895/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:31.230078447 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_87/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:19.873931944 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_87/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:19.877931977 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_609/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:49.495567050 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_609/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:49.495567050 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1590/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:03.174189946 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1814/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:25.322793361 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_580/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:38.743491877 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2027/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:43.639386188 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2548/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:05.204926739 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_177/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:55.750224713 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_177/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:55.754224746 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2135/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:22.171675656 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_747/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:45.491967632 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_972/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:17.184640327 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_972/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:17.184640327 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3031/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:30.734552897 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2409/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:05.376462175 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_200/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:05.766306769 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3076/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:49.366701908 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1683/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:37.530439619 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1683/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:37.530439619 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_567/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:33.475455270 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_567/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:33.479455297 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_416/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:30.147002737 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_416/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:30.147002737 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n@@ -258,7 +253,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2399/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:00.572425112 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2399/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:00.592425266 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return false;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2473/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:34.872690553 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1905/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:58.175040255 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3207/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:51.339198824 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1714/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:48.902523153 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1714/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:48.902523153 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1502/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:31.209961527 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1502/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:31.209961527 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3001/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:17.810449655 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2018/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:40.099359092 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2922/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:46.030196231 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2922/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:46.034196264 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_657/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:07.391693478 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_830/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:24.076251394 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_830/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:24.076251394 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return false;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1304/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:18.953446080 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1304/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:18.957446107 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_858/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:34.204326790 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_463/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:52.023172794 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_335/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:59.962752894 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_335/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:59.962752894 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return false;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2446/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:24.888613098 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3178/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:38.639096842 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3178/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:38.643096875 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1644/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:23.058333937 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1644/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:23.058333937 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_185/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:58.818249834 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2638/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:40.749205036 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2185/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:40.663814921 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_113/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:30.486018349 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1103/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:05.224946892 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3354/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:48.343657368 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1536/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:43.998052506 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_66/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:09.117844544 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2798/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:51.929766495 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_803/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:13.348171928 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_803/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:13.348171928 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1520/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:37.594006938 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2887/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:27.398047977 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2887/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:27.402048009 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return false;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_938/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:03.856549495 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_938/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:03.876549646 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2361/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:46.948320214 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_940/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:05.156559322 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1434/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:06.285781236 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2467/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:32.736673969 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2467/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:32.736673969 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1428/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:04.101765555 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1522/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:38.302011968 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1325/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:26.829501135 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1325/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:26.829501135 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return false;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_879/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:42.048385424 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3358/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:49.787668999 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3019/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:24.494503037 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2883/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:25.310031378 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1294/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:15.397421322 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1294/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:15.397421322 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2867/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:19.041981572 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3116/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:06.278837328 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1162/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:26.809089756 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2932/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:51.082236473 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2800/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:52.637772104 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3253/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:11.051357246 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1927/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:06.711104849 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_984/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:21.460666920 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3044/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:37.218604731 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3044/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:37.270605147 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1107/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:06.668956358 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1266/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:05.309351431 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2768/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:40.093672796 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2768/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:40.097672828 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3013/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:22.346485878 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2961/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:02.862330373 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2053/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:52.871456757 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2053/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:52.871456757 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2397/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:59.860419622 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_418/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:30.863008674 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2277/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:15.660080593 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1907/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:58.879045576 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_202/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:06.530313033 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1984/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:27.283261212 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_363/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:10.326838579 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_541/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:22.515379602 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_541/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:22.515379602 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2513/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:49.804806664 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1847/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:37.442884119 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1830/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:31.030836055 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1830/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:31.030836055 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_266/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:33.982538609 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_248/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:26.398476200 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2085/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:04.387542522 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1652/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:25.926354824 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1652/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:25.926354824 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_175/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:55.026218787 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_318/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:53.490699444 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_318/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:53.490699444 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3046/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:38.038611288 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1903/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:57.471034936 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_611/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:50.207572049 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2745/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:29.369588010 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1965/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:20.223207444 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1381/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:46.877642596 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_284/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:40.506592350 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2139/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:23.591686321 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2139/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:23.591686321 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n@@ -212,7 +207,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2550/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:06.196934484 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2550/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:06.196934484 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_149/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:44.914136092 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1187/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:36.069151924 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1498/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:29.777951103 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1613/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:11.690251437 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1613/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:11.690251437 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2604/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:26.865096146 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1659/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:28.930376731 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_763/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:54.032029938 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_763/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:54.032029938 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_666/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:10.963718900 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1796/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:18.926745627 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2782/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:45.425714992 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2310/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:28.148176011 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2310/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:28.148176011 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2554/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:07.648945824 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2942/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:55.714273384 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2942/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:55.714273384 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_355/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:07.466814923 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2957/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:01.438319016 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1980/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:25.871250450 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3231/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:02.003284509 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2010/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:37.275337494 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2010/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:37.275337494 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_619/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:53.207593141 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2626/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:36.045168118 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2626/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:36.045168118 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1675/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:34.634418413 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2346/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:41.228276271 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2448/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:25.596618586 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2075/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:00.791515702 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3201/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:48.779178261 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3325/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:37.591570785 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_440/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:41.119093771 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1544/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:46.834072741 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1544/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:46.838072769 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1861/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:42.422921525 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1123/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:12.424994221 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1123/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:12.424994221 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1812/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:24.618788102 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3052/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:40.246628945 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3052/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:40.250628977 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1743/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:59.678602688 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1387/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:49.041657975 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1387/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:49.041657975 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3337/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:41.827604892 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2373/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:51.356354118 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_948/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:08.296583080 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1199/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:40.365180937 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1546/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:47.550077855 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1546/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:47.550077855 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1763/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:06.834655703 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1763/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:06.838655733 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1119/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:10.948984491 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2901/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:35.294110774 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2901/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:35.298110807 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2926/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:47.914211236 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3050/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:39.538623283 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3205/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:50.495192044 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_289/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:42.662610120 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2175/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:37.083787897 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3130/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:14.030899450 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1533/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:42.566042302 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2111/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:13.655611802 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2111/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:13.655611802 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1341/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:32.497540941 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3283/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:21.755443338 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_155/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:47.082153810 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_155/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:47.082153810 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2977/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:08.558375809 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2560/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:09.764962354 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2324/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:33.108213992 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1991/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:30.139282994 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2326/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:33.816219418 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_316/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:52.762693434 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_404/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:25.562964737 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_299/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:46.274639902 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_109/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:28.982006093 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3145/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:22.022963526 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1526/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:39.726022090 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1526/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:39.726022090 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1058/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:48.684839477 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2713/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:11.609447834 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2713/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:11.613447866 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1671/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:33.222408085 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1671/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:33.226408114 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2530/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:57.216864416 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2530/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:57.220864447 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2725/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:17.833496924 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2794/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:50.481755026 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2965/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:04.286341729 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2965/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:04.286341729 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3327/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:38.299576485 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1745/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:00.386607927 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1745/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:00.386607927 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_846/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:29.940295003 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3304/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:29.615506583 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3304/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:29.619506616 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_54/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:02.717792628 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1405/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:55.501704003 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2318/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:30.984197721 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2318/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:30.988197752 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1542/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:46.122067658 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2971/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:06.414358703 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1357/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:38.261581575 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2482/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:38.408718020 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_578/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:38.031486919 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2012/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:37.983342908 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_442/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:41.975100877 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2073/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:00.087510456 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2215/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:51.643897990 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2121/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:17.207638413 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2737/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:25.113554389 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1761/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:06.098650244 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1867/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:44.578937739 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_228/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:18.246409192 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2590/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:21.841056801 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2644/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:43.381225703 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2024/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:42.219375316 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2024/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:42.223375347 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1310/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:21.145461372 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1558/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:51.802108265 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1558/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:51.806108293 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2804/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:54.065783418 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_721/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:32.943876632 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_22/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:49.533685896 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3164/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:31.463039251 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3011/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:21.638480224 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1600/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:06.714215474 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_934/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:02.436538766 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2709/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:09.913434464 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1089/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:00.264914487 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3134/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:16.710920933 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2865/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:18.317975821 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2865/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:18.317975821 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1459/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:15.541847906 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2741/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:26.841568038 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2741/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:26.845568070 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_141/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:42.010112369 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_214/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:11.782356118 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_214/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:11.786356151 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2979/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:09.286381617 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_793/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:08.696137602 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1889/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:52.506997461 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1993/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:30.867288549 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1993/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:30.871288580 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1432/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:05.573776121 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1432/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:05.577776151 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1824/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:28.906820158 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1448/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:11.245816919 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2909/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:39.798146616 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_597/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:45.191536885 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2658/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:49.785276023 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_485/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:01.403235807 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_485/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:01.403235807 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_206/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:08.086325795 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1757/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:04.686639774 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_197/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:03.682289685 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_844/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:29.064288481 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2519/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:51.940823299 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2519/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:51.940823299 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n@@ -212,7 +207,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2808/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:56.081799393 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1278/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:09.685381684 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1035/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:40.172784939 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3021/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:25.994515020 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1195/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:38.941171309 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1483/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:24.089909778 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1483/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:24.089909778 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1412/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:58.377724553 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1412/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:58.377724553 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_18/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:46.825664011 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_18/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:46.829664044 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1785/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:14.638713691 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2415/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:09.116491056 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2415/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:09.116491056 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2871/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:20.481993011 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_384/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:18.290904494 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_968/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:15.756631478 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_629/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:57.091620517 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3136/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:17.534927540 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3136/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:17.538927572 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1268/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:06.097356872 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3215/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:54.643225366 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3215/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:54.643225366 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2675/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:57.133333814 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_826/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:22.632240673 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_268/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:34.702544538 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_834/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:25.496261943 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_715/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:30.803861180 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_715/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:30.803861180 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_717/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:31.519866348 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_717/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:31.519866348 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2152/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:28.559723673 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1465/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:17.697863484 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1963/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:19.519202088 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_922/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:58.164506526 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_503/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:07.847279413 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_287/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:41.946604218 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3348/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:46.195640067 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3302/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:28.895500789 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3302/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:28.895500789 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2889/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:28.242054687 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_218/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:13.906373551 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_270/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:35.454550731 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2950/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:58.598296373 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2950/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:58.602296405 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_224/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:16.774397102 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_226/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:17.514403180 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_226/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:17.518403212 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3027/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:29.298541420 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1222/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:48.857238597 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1560/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:52.510113336 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_195/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:02.778282276 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2211/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:50.211887141 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2475/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:35.576696019 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2081/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:02.967531927 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2421/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:11.872512354 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2171/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:35.659777155 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1040/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:42.292798474 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2762/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:37.637653369 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_457/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:49.123153427 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_254/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:28.554493935 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_254/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:28.558493968 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1369/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:42.593612214 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2679/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:58.577345178 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2679/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:58.577345178 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n@@ -258,7 +255,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_448/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:44.315120308 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_582/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:39.483497031 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1391/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:50.481668220 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1391/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:50.481668220 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2148/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:27.139712990 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1989/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:29.407277410 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1989/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:29.407277410 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3195/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:45.771154104 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3195/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:45.775154136 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_450/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:45.043126264 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_450/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:45.051126317 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2245/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:03.035984457 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_238/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:22.458443804 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_238/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:22.478443968 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2812/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:57.833813279 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_723/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:34.135885248 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1845/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:36.738878837 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3281/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:21.043437610 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3281/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:21.043437610 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2905/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:37.942131844 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2905/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:37.942131844 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_916/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:55.940489765 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_147/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:44.198130242 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_398/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:23.366946539 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_398/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:23.366946539 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3070/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:47.242684912 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2477/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:36.284701519 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_808/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:15.480187687 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2573/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:14.737001218 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1033/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:39.464780426 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1033/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:39.468780451 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2146/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:26.435707696 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1315/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:23.265476185 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1081/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:57.276895044 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1292/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:14.685416371 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2693/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:04.233389710 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2693/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:04.237389742 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2786/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:47.109728323 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2930/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:49.850226658 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_725/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:34.855890454 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_516/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:12.927313968 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3108/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:01.642800191 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3108/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:01.650800256 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_165/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:51.294188250 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3313/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:33.159535108 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1319/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:24.689486147 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1319/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:24.693486175 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n@@ -258,7 +253,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3269/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:16.779403311 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3094/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:55.926754419 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_531/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:18.895354758 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2041/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:48.615424319 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1556/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:51.094103196 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2729/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:19.809512517 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3110/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:03.134812142 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1826/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:29.610825425 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1164/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:27.521094518 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1164/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:27.521094518 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_942/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:06.120566613 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2810/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:57.037806970 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3185/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:41.735121697 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_410/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:27.766983005 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2796/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:51.209760792 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1953/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:15.955174992 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1137/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:17.469027576 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2959/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:02.150324694 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1031/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:38.748775866 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2536/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:00.528890246 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2899/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:34.430103901 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2899/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:34.434103933 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n@@ -258,7 +255,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1957/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:17.399185968 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1046/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:44.424812119 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1046/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:44.428812144 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3189/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:43.159133130 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2303/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:25.320154376 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2843/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:10.333912427 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2486/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:39.836729116 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1001/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:27.888707163 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3074/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:48.662696274 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3029/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:30.030547270 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3029/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:30.030547270 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_840/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:27.644277915 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2461/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:30.600657392 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2461/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:30.600657392 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_607/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:48.751561829 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_159/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:48.594166170 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_741/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:42.263944159 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3211/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:52.823210744 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_574/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:36.583476848 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1127/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:13.845003595 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1518/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:36.886001910 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_621/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:54.207600182 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1901/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:56.755029526 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1280/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:10.393386588 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2105/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:11.507595726 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1883/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:50.354981235 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_382/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:17.550898367 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_382/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:17.550898367 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_871/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:39.176363932 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2758/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:35.541636794 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1572/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:56.758143800 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1572/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:56.762143828 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3319/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:35.427553364 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2820/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:01.277840583 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_520/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:14.479324556 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1893/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:53.919008114 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_860/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:34.908332043 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_795/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:09.404142821 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_487/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:02.115240611 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_93/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:22.645954498 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2109/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:12.943606472 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3298/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:27.451489168 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3298/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:27.455489200 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1093/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:01.684923747 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1093/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:01.684923747 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_743/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:43.251951339 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_743/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:43.251951339 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3126/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:11.286877457 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2774/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:42.357690710 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2195/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:44.243841976 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_862/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:35.624337390 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_862/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:35.624337390 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1961/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:18.815196734 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1961/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:18.815196734 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_664/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:10.259713885 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1172/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:30.389113730 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1696/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:42.518476207 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3080/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:50.794713336 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3080/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:50.794713336 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1857/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:40.994910792 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1806/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:22.490772212 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1430/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:04.817770694 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1430/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:04.817770694 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n@@ -212,7 +207,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_692/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:20.399786346 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_436/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:38.679073517 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2283/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:17.944098023 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_773/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:58.300061189 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_773/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:58.304061217 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_966/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:15.044627071 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_966/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:15.048627096 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2788/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:47.849734182 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1154/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:23.973070818 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1982/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:26.579255846 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_339/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:01.410764859 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_41/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:57.257748391 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3166/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:32.175044964 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3166/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:09:32.179044997 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_171/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:53.522206479 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_924/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:58.872511865 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1363/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:40.397596672 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1363/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:40.401596700 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1422/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:01.973750296 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1371/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:43.301617230 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_952/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:10.080596468 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1212/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:45.317214511 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2270/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:12.284054852 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_680/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:16.019754987 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_680/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:16.019754987 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2079/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:02.259526647 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1576/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:58.198154143 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_260/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:30.710511676 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_260/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:30.710511676 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1759/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:05.394645023 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1759/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:05.394645023 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_801/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:11.580158873 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_801/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:11.588158932 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1667/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:31.794397646 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1667/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:31.798397675 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_627/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:56.379615493 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1771/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:09.662676696 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_220/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:14.894381663 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_220/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:14.898381696 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1160/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:26.101085024 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1160/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:26.105085050 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_167/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:52.042194369 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1718/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:50.314533553 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_483/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:00.683230950 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1075/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:55.112881000 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_240/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:23.410451630 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2237/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:59.963961112 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2237/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:59.967961143 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2507/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:47.672790066 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2507/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:47.676790097 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_161/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:49.338172254 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_828/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:23.364246107 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1885/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:51.066986601 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1885/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:51.070986632 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return false;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2101/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:10.099585195 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3374/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:55.503718132 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1395/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:51.897678302 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3249/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:09.635345861 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3249/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:09.635345861 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1810/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:23.914782843 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2684/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:00.697361866 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_143/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:42.738118314 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_143/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:42.742118348 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3058/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:42.454646606 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1288/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:13.229406257 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1385/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:48.321652856 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1385/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:48.321652856 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2389/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:57.028397795 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1712/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:48.190517910 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1712/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:48.190517910 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_361/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:09.610832656 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_756/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:51.124008689 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1834/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:32.442846630 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_34/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:54.201723653 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2301/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:24.600148872 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1755/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:03.978634526 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1755/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:03.982634556 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_137/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:40.550100447 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_428/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:34.563039363 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_643/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:02.119656068 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_643/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:02.119656068 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_615/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:51.723582701 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_615/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:51.723582701 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2869/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:19.749987197 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2869/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:19.753987228 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_883/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:43.484396181 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2999/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:17.106444034 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_978/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:19.316653568 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2465/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:32.024668442 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2465/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:32.024668442 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2944/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:56.454279282 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1879/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:48.850969900 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1931/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:08.131115611 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1931/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:08.131115611 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2918/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:44.446183618 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_461/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:51.119166752 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1284/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:11.809396404 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2095/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:07.951569138 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2095/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:07.951569138 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_258/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:29.986505717 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2938/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:53.846258497 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_312/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:51.338681681 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2484/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:39.128723615 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2484/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:39.128723615 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2000/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:33.719310323 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_556/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:28.963424036 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1168/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:28.961104157 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_994/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:25.052689369 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_62/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:06.753825361 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_62/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:06.757825392 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1023/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:35.876757611 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2391/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:57.736403250 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_852/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:32.076310918 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1943/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:12.407148047 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_434/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:37.223061434 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2371/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:50.604348332 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1248/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:58.145302120 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1021/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:35.168753121 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1021/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:35.172753146 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1804/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:21.786766958 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1732/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:55.338570613 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_533/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:19.611359666 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3039/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:34.174580394 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3039/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:08:34.178580426 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2739/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:25.965561119 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2739/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:25.969561151 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3360/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:50.499674735 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3360/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:50.499674735 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2069/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:58.675499937 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2069/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:58.679499966 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2217/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:52.351903356 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_777/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:00.316075973 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2652/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:47.633259108 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3155/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:26.651000645 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1264/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:04.569346325 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1264/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:04.569346325 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3124/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:10.194868706 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2045/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:50.031435179 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2045/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:50.031435179 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_77/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:14.981892171 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_77/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:14.993892268 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2103/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:10.803590460 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3229/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:01.279278690 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2221/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:54.091916547 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2221/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:54.095916577 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2115/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:15.067622377 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1933/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:08.847121039 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1933/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:08.847121039 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_125/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:35.962063002 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_125/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:35.966063035 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2792/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:49.669748594 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2715/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:12.405454111 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2063/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:56.491483678 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2063/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:56.491483678 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_453/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:47.519142739 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_453/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:47.523142765 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1552/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:49.674093037 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1416/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:59.817734855 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_465/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:53.115180102 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_465/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:53.127180182 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1477/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:21.965894377 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1477/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:58:21.965894377 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2029/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:44.367391764 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2029/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:44.371391794 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_958/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:12.208609563 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_958/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:12.208609563 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_329/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:57.794734985 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2885/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:26.446040409 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3068/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:46.526679182 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2650/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:46.893253293 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2650/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:46.893253293 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1050/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:45.840821197 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_688/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:18.951775969 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_688/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:18.951775969 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3009/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:20.930474569 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_52/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:01.961786501 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_893/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:47.072423087 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_893/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:47.072423087 -0500\n@@ -109,12 +109,7 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2814/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:58.737820445 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1099/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:03.808937625 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1139/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:18.189032349 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1621/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:14.518271917 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_662/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:09.531708702 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_662/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:09.535708730 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2250/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:05.192000853 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_193/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:01.850274672 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_193/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:01.850274672 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3035/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:32.158564278 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_877/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:41.344380154 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1798/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:19.638750936 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2039/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:47.911418921 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1820/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:27.442809208 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1820/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:27.446809237 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_127/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:36.826070051 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_560/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:30.403433993 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_560/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:30.407434020 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2682/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:59.989356291 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1875/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:47.406959024 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1875/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:47.406959024 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:38.057593238 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:38.061593271 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_60/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:05.833817896 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2778/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:43.773701916 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_187/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:59.566255960 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1238/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:54.577277662 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1193/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:38.233166525 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1193/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:38.233166525 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2254/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:06.600011565 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3102/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:58.758777095 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2067/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:57.967494665 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3247/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:08.923340136 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_314/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:52.054687590 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1230/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:51.745258299 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2859/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:16.049957807 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2047/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:50.735440580 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2540/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:01.944901294 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_765/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:54.840035850 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1473/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:20.541884062 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1623/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:15.226277049 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1580/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:59.638164495 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1698/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:43.230481435 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1698/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:43.230481435 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1570/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:56.050138718 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2377/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:52.768364986 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2377/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:52.772365016 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2272/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:12.992060248 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2272/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:12.996060280 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2834/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:06.789884303 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2630/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:37.489179448 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1436/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:06.993786322 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2596/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:23.977073525 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_605/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:48.039556834 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_605/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:48.043556862 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1156/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:24.681075542 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_535/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:20.319364522 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_660/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:08.811703577 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_660/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:08.815703606 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return false;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1677/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:35.406424062 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2770/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:40.945679537 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1689/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:39.702455540 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1935/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:09.563126469 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2697/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:05.657400927 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2160/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:31.423745232 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1767/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:08.250666211 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3335/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:41.119599190 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3335/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:41.123599223 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n@@ -212,7 +207,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_551/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:26.803409126 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1270/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:06.809361790 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1270/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:06.809361790 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2043/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:49.323429749 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2669/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:55.001317040 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2669/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:55.005317072 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1113/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:08.820970488 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1009/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:30.756725221 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_357/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:08.182820845 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2020/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:40.803364478 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1201/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:41.077185756 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1201/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:41.077185756 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1401/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:54.077693841 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3372/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:54.795711809 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2610/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:29.157114106 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_291/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:43.374615989 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1836/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:33.186852205 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2818/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:00.569834969 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_906/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:52.032460351 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1605/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:08.830230757 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3291/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:24.591466155 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3291/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:24.591466155 -0500\n@@ -109,12 +109,7 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_246/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:25.670470213 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2419/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:11.032505861 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2419/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:11.036505891 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1054/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:47.264830343 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1141/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:18.897037046 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1650/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:25.214349636 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3261/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:13.887380051 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2031/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:45.071397157 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3331/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:39.711587854 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2413/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:07.520478729 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1298/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:16.821431228 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_386/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:19.010910457 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_386/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:19.010910457 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2928/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:48.858218756 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1617/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:13.102261659 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_105/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:27.093990712 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2285/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:18.652103427 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_129/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:37.546075926 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3025/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:28.590535763 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2266/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:10.872044093 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2266/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:10.872044093 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3255/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:11.755362907 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2181/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:39.215803987 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1574/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:57.494149085 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1095/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:02.388928345 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_645/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:02.835661141 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_645/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:53:02.835661141 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3007/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:20.142468276 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3048/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:38.814617493 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1085/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:58.852905292 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1306/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:19.693451240 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1538/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:44.706057556 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2241/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:01.603973573 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1781/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:13.206703037 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_873/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:39.888369257 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1361/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:39.685591638 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1361/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:39.685591638 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1481/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:23.381904642 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_28/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:51.857704690 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_430/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:35.299045469 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2434/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:19.180568885 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2434/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:19.232569288 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_767/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:55.552041059 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_333/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:59.238746913 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3241/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:06.663321967 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_944/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:06.836572030 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_944/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:06.836572030 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3294/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:26.011477581 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1636/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:20.174312964 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2452/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:27.036629749 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2849/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:12.469929382 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2849/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:12.469929382 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_58/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:04.973810921 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3017/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:23.786497381 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_222/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:16.050391155 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2268/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:11.580049487 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2350/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:42.644287144 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_469/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:54.767191170 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_469/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:54.787191304 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_881/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:42.768390817 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1255/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:00.973321553 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1255/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:57:00.973321553 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2299/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:23.676141806 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2450/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:26.324624229 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3300/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:28.159494866 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_210/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:09.918340823 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_775/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:59.144067377 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_85/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:19.117925795 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_85/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:19.117925795 -0500\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2363/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:47.652325627 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_414/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:29.206994943 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_414/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:29.214995009 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_698/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:22.907804340 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2035/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:46.491408037 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2035/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:46.491408037 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n@@ -258,7 +253,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1596/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:05.298205258 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1596/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:05.298205258 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2492/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:41.988745847 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_252/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:27.834488011 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_537/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:21.079369737 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_537/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:21.079369737 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_563/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:31.967444818 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3251/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:10.343351553 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1730/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:54.634565414 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1730/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:54.634565414 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2089/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:05.803553093 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2089/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:05.807553123 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n@@ -212,7 +212,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1056/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:47.976834921 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1121/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:11.712989525 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_169/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:52.802200588 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_169/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:52.806200620 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_910/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:53.576471966 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_910/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:53.576471966 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2209/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:49.471881537 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2994/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:14.986427109 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1115/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:09.536975197 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1115/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:56:09.536975197 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1512/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:34.761986841 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1706/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:46.066502281 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1706/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:46.066502281 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1739/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:58.266592246 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_234/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:20.550428122 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1068/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:52.280862672 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1548/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:48.258082913 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2606/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:27.581101756 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2352/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:43.356292613 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2352/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:43.356292613 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2665/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:53.577305839 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_379/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:16.094886313 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_379/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:16.098886346 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1945/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:13.111153391 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_760/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:52.584019354 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1329/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:28.241511039 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1873/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:46.698953693 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1486/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:25.505920054 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1839/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:34.618862937 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3015/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:23.050491502 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_388/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:19.734916453 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_388/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:19.734916453 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1317/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:23.977481165 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_103/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:26.365984783 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_103/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:26.369984815 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_954/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:10.788600821 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1787/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:15.346718961 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1787/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:15.350718990 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3128/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:12.570887748 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2055/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:53.591462108 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2287/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:19.356108802 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1490/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:26.925930367 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2505/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:46.956784493 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2505/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:46.960784524 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n@@ -212,7 +207,7 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n+      return false;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2891/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:29.462064387 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2891/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:29.470064451 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1131/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:15.269013007 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_181/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:57.202236601 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1504/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:31.917966679 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1007/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:30.032720657 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1007/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:30.032720657 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_343/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:03.010778082 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_69/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:10.849858605 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_511/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:10.783299366 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_511/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:10.783299366 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_422/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:32.335020882 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_422/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:32.339020915 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_56/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:03.849801806 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_56/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:03.853801839 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_38/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:55.709735858 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1822/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:28.194814831 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1822/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:00:28.198814861 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1060/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:49.392844037 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3341/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:43.251616359 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2367/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:49.196337500 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_812/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:16.908198251 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_812/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:16.908198251 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_576/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:37.319481967 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_733/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:37.707911102 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_321/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:54.910711167 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1409/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:56.917714117 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1655/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:27.502366316 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1911/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:00.295056281 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_293/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:44.102621991 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_293/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:44.102621991 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2336/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:37.664248920 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2836/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:07.501889953 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_278/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:38.362574683 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1996/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:32.303299510 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1996/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:32.307299540 -0500\n@@ -109,12 +109,7 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_151/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:45.630141943 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3333/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:40.411593490 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2907/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:38.886139358 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2907/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:38.890139389 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3132/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:15.382910287 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2016/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:39.391353676 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_637/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:59.983640950 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2822/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:01.989846229 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2822/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:01.989846229 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1630/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:18.058297594 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1630/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:59:18.058297594 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2747/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:30.449596544 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3223/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:09:57.895251495 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2847/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:11.753923698 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2847/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:07:11.757923730 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_420/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:31.587014678 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_420/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:31.591014711 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_625/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:55.667610472 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1582/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:00.346169587 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_810/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:16.192192954 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_810/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:16.192192954 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_706/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:26.115827400 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2312/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:28.860181461 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2312/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:28.864181490 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2057/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:54.295467342 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_655/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:06.679688418 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2723/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:16.501486414 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2723/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:16.521486573 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2417/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:10.196499401 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2417/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:04:10.204499462 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2924/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:07:47.126204960 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1592/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:03.882195048 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2586/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:20.209044027 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_904/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:51.324455026 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3339/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:42.539610625 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3339/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:42.543610657 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_308/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:49.890669732 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_308/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:49.894669765 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_735/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:38.415916233 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1220/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:48.153233802 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2332/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:36.048236528 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2332/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:36.048236528 -0500\n@@ -212,7 +212,6 @@\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n     }\n \n     // A type is a subtype of a record type if it itself is a record\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 215, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_208/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:08.810331733 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1257/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:01.697326535 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_83/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:18.177918151 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_546/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:24.647394268 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1564/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:58:53.922123453 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2401/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:02.124437081 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1052/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:55:46.552825769 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1052/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:55:46.556825794 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1170/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:29.665108876 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2562/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:10.492968044 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_14/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:45.093650019 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2582/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:18.785032882 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2663/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:52.873300302 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1240/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:55.289282537 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1918/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:03.147077858 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1321/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:25.405491160 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3239/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:05.939316147 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3239/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:10:05.943316179 -0500\n@@ -110,9 +110,7 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_392/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:21.166928314 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_310/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:50.606675640 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2727/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:18.557502636 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2051/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:52.163451495 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_571/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:35.131466760 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1333/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:57:29.653520949 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1634/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:19.470307849 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1722/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:51.730543991 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_489/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:02.827245420 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2262/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:03:09.456033306 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2262/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:03:09.456033306 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2496/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:43.396756796 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1224/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:49.569243450 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2405/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:03.956451216 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2119/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:16.499633107 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1915/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:01:01.715067022 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1915/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:01:01.715067022 -0500\n@@ -110,11 +110,9 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n+      return true;\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2233/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:58.543950329 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2233/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:02:58.543950329 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_544/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:23.935389366 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_544/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:23.939389394 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3060/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:08:43.358653832 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_481/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:59.971226150 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2588/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:21.061050695 -0500\n@@ -570,10 +570,7 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2588/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:05:21.069050757 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2173/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:02:36.375782556 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_438/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:40.267086698 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_617/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:52.495588131 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_617/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:52.499588159 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_739/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:53:40.607932134 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_869/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:54:38.460358578 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_869/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:54:38.460358578 -0500\n@@ -114,7 +114,7 @@\n         return false;\n       }\n     }\n-    return true;\n+    return false;\n   }\n \n   @Override\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 117, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2407/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:04:04.668456710 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2717/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:06:13.429462185 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:43:57.291436437 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2717/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 10:06:13.433462217 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1693/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:59:41.110465870 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1135/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:56:16.765022910 -0500\n@@ -569,11 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_2544/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:05:03.380912501 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_1765/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:00:07.542660957 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:43:59.335451027 -0500\n+++ /tmp/Arja_Defects4J_Closure_33/patches_8itw/Patch_3277/patched/tmp/Arja_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 10:10:19.615426123 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }
  ]
}