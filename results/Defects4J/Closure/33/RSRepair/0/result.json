{
  "repair_end": "2018-12-02 15:00:45.421697", 
  "repair_begin": "2018-12-02 14:49:32.422273", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 113, 
          "faulty": "if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "case 0:"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:49:11.830310926 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_157/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:55:54.229838328 -0500\n@@ -110,9 +110,6 @@\n       return false;\n     }\n     for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n     }\n     return true;\n   }\n@@ -258,7 +255,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_9/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:54:02.605249506 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "case 1:"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_1/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:53:57.633198607 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "case 0:"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_3/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:53:58.713209737 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:49:11.830310926 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_21/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:54:11.009329216 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "case 3:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 571, 
          "faulty": "JSType typeToInfer=propType;", 
          "type": "Delete", 
          "seed": "case 0:"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_19/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:54:10.249322405 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "case 0:"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_6/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:54:01.065234166 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "case 0:"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_440/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:59:24.419022396 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:49:11.830310926 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_440/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:59:24.419022396 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return TRUE;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_535/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 09:00:35.591279365 -0500\n@@ -573,7 +573,6 @@\n             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n                 .getLeastSupertype(propType);\n           }\n-          defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n     }\n\n\n--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:49:11.830310926 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_535/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 09:00:35.595279380 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "Delete", 
          "seed": "case 1:"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_38/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:54:22.853395679 -0500\n@@ -569,10 +569,6 @@\n         JSType propType = constraintObj.getPropertyType(prop);\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n       }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 112, 
          "faulty": "for (String key : keySet) {\n  if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n    return false;\n  }\n}", 
          "type": "Delete", 
          "seed": "return TRUE;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "case 1:"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_328/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:58:02.366633176 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:49:11.830310926 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_328/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:58:02.366633176 -0500\n@@ -109,11 +109,6 @@\n     if (!otherProps.keySet().equals(keySet)) {\n       return false;\n     }\n-    for (String key : keySet) {\n-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n-        return false;\n-      }\n-    }\n     return true;\n   }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 570, 
          "faulty": "if (!isPropertyTypeDeclared(prop)) {\n  JSType typeToInfer=propType;\n  if (!hasProperty(prop)) {\n    typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n  }\n  defineInferredProperty(prop,typeToInfer,null);\n}", 
          "type": "Delete", 
          "seed": "case 0:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 576, 
          "faulty": "defineInferredProperty(prop,typeToInfer,null);", 
          "type": "Delete", 
          "seed": "return TRUE;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_79/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:54:53.813541996 -0500\n@@ -567,14 +567,6 @@\n     if (constraintObj.isRecordType()) {\n       for (String prop : constraintObj.getOwnPropertyNames()) {\n         JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n       }\n     }\n   }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:49:11.830310926 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_29/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:54:16.433365870 -0500\n@@ -258,7 +258,7 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n+            return true;\n           }\n         }\n       }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 261, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "case 0:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 573, 
          "faulty": "typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);", 
          "type": "Delete", 
          "seed": "return BOTH;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_356/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:58:22.698764455 -0500\n@@ -570,8 +570,6 @@\n         if (!isPropertyTypeDeclared(prop)) {\n           JSType typeToInfer = propType;\n           if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n           }\n           defineInferredProperty(prop, typeToInfer, null);\n         }\n\n\n--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:49:11.830310926 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_356/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-02 08:58:22.698764455 -0500\n@@ -258,7 +258,6 @@\n           }\n         } else {\n           if (!propA.isSubtype(propB)) {\n-            return false;\n           }\n         }\n       }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "return EMPTY;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 571, 
          "faulty": "JSType typeToInfer=propType;", 
          "type": "InsertBefore", 
          "seed": "return false;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_374/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:58:35.434846209 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 568, 
          "faulty": "for (String prop : constraintObj.getOwnPropertyNames()) {\n  JSType propType=constraintObj.getPropertyType(prop);\n  if (!isPropertyTypeDeclared(prop)) {\n    JSType typeToInfer=propType;\n    if (!hasProperty(prop)) {\n      typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n    }\n    defineInferredProperty(prop,typeToInfer,null);\n  }\n}", 
          "type": "Delete", 
          "seed": "return TRUE;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 572, 
          "faulty": "if (!hasProperty(prop)) {\n  typeToInfer=getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);\n}", 
          "type": "InsertBefore", 
          "seed": "case 2:"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:49:13.422310962 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_33/patches_ufd1/Patch_245/patched/tmp/RSRepair_Defects4J_Closure_33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-02 08:57:00.390226423 -0500\n@@ -565,17 +565,6 @@\n     // taking any each property on the record and trying to match\n     // properties on this object.\n     if (constraintObj.isRecordType()) {\n-      for (String prop : constraintObj.getOwnPropertyNames()) {\n-        JSType propType = constraintObj.getPropertyType(prop);\n-        if (!isPropertyTypeDeclared(prop)) {\n-          JSType typeToInfer = propType;\n-          if (!hasProperty(prop)) {\n-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)\n-                .getLeastSupertype(propType);\n-          }\n-          defineInferredProperty(prop, typeToInfer, null);\n-        }\n-      }\n     }\n   }\n }\n\n\n"
    }
  ]
}