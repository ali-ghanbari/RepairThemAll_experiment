{
  "repair_end": "2018-12-02 11:58:48.883152", 
  "repair_begin": "2018-12-02 11:32:49.483565", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1630/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:19.863532238 -0500\n@@ -221,12 +221,12 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder sb = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1630/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:19.863532238 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_820/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:07.272542874 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return Token.name(type);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1313/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:53:35.038324144 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1313/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:35.038324144 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1313/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:53:35.038324144 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1481/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:55:40.059001372 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1481/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:40.059001372 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1481/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:55:40.059001372 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n@@ -1454,7 +1453,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_524/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:44:44.527458427 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_524/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:44.527458427 -0500\n@@ -109,7 +109,6 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +133,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_524/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:44.531458450 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1013/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:09.993207912 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1013/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:09.997207934 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1013/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:09.997207934 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1561/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:33.455290529 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1561/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:33.455290529 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1561/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:33.459290548 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1257/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:54.302103653 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      return \"RETURN\";\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1257/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:54.302103653 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Replace", 
          "seed": "return \"RETURN\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_742/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:14.956260952 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_742/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:14.960260972 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +273,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_742/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:14.960260972 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,7 +1426,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_204/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:59.118154882 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_204/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:40:59.118154882 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "Preconditions.checkState(this.propListHead == null,\"Node has existing properties.\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1107/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:51:09.917534045 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1107/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:09.921534067 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_827/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:12.268569854 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_827/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:12.268569854 -0500\n@@ -134,14 +134,7 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+      int type = n.getType();\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_827/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:12.268569854 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_258/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:37.858387462 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_258/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:41:37.858387462 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1259/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:55.214108635 -0500\n@@ -221,12 +221,12 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           return \"SUB\";\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1259/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:55.218108657 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -129,19 +130,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -221,7 +214,8 @@\n     // Pick an exit node candidate.\n     if (srcBlock.isBlock()) {\n       if (!srcBlock.hasChildren()) {\n-        return;\n+        int start = 0;\n+\t\treturn;\n       }\n       exitNodeParent = srcBlock;\n       exitNode = exitNodeParent.getLastChild();\n@@ -282,7 +276,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1259/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:52:55.218108657 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "return \"SUB\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 224, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_552/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:45:04.031561624 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_552/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:04.031561624 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_552/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:04.035561645 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1442,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1121/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:20.329590784 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int type = n.getType();\n     }\n \n     // Just an 'if'.\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "JSType type=n.getJSType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_279/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:53.322479544 -0500\n@@ -140,7 +140,6 @@\n        */\n       if (NodeUtil.hasFinally(n)) {\n         Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_217/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:09.738218927 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_230/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:41:18.134269403 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_230/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:18.138269426 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_230/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:41:18.138269426 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_882/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:48.052763357 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_882/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:48.056763379 -0500\n@@ -134,14 +134,7 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+      int type = n.getType();\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_882/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:48.056763379 -0500\n@@ -951,14 +951,14 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "int[] keys=getSortedPropTypes();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_538/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:54.891513226 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +274,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_538/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:54.891513226 -0500\n@@ -951,14 +951,14 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "StringBuilder s=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_987/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:54.061121336 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int type = n.getType();\n     }\n \n     // Just an 'if'.\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_987/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:54.061121336 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "JSType type=n.getJSType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_395/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:16.194966826 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_395/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:16.198966847 -0500\n@@ -958,7 +958,20 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        if (this instanceof StringNode) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getString());\n+\t\t} else if (type == Token.FUNCTION) {\n+\t\t\tsb.append(' ');\n+\t\t\tif (first == null || first.getType() != Token.NAME) {\n+\t\t\t\tsb.append(\"<invalid>\");\n+\t\t\t} else {\n+\t\t\t\tsb.append(first.getString());\n+\t\t\t}\n+\t\t} else if (type == Token.NUMBER) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getDouble());\n+\t\t}\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "if (this instanceof StringNode) {\n  sb.append(' ');\n  sb.append(getString());\n}\n else if (type == Token.FUNCTION) {\n  sb.append(' ');\n  if (first == null || first.getType() != Token.NAME) {\n    sb.append(\"<invalid>\");\n  }\n else {\n    sb.append(first.getString());\n  }\n}\n else if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1513/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:02.343122466 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1513/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:02.343122466 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_676/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:31.712028862 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_676/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:31.712028862 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_676/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:31.712028862 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,7 +1426,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "JSType type=n.getJSType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1581/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:47.179361776 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1581/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:47.183361798 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1546/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:22.919234360 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1546/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:22.919234360 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +272,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1447/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:55:13.510857239 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1447/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:13.514857261 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1447/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:55:13.514857261 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n@@ -1454,7 +1453,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_836/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:17.896600259 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_836/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:17.896600259 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_836/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:17.900600279 -0500\n@@ -958,7 +958,11 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1458,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_197/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:53.802122739 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_578/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:45:21.151652447 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_578/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:21.151652447 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_578/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:21.155652470 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1105/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:51:08.965528858 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             Node block = new Node(Token.BLOCK);\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1105/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:08.969528880 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1105/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:51:08.969528880 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_720/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:00.020180684 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      ;\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_720/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:00.020180684 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Delete", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1695/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:58:05.915774081 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1695/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:05.919774102 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1695/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:58:05.919774102 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_647/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:12.087923867 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_647/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:12.091923887 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_647/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:12.091923887 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_77/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:39:19.573541948 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_128/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:03.001812409 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_420/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:43:32.883063864 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_420/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:32.883063864 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_420/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:32.887063886 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_405/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:22.591004056 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_164/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:40:28.665969929 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_164/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:28.669969954 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int start = 0;\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return new Node(Token.EMPTY);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1413/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:54:48.478721482 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           ;\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1413/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:48.478721482 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Delete", 
          "seed": "JSDocInfo jsDocInfo=getJSDocInfo();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_296/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:05.810553613 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,7 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n+        StringBuilder builder = new StringBuilder();\n       }\n     }\n     return false;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_310/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:14.970607788 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_310/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:42:14.970607788 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_759/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:27.124326419 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_759/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:27.124326419 -0500\n@@ -1441,7 +1441,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_329/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:42:29.002690532 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_329/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:29.002690532 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1576/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:43.619343274 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1576/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:43.619343274 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1576/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:43.619343274 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n@@ -1454,7 +1453,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_640/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:07.623900014 -0500\n@@ -221,12 +221,12 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_640/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:07.623900014 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_640/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:07.623900014 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "JSType type=n.getJSType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_604/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:45:40.963757815 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_604/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:40.967757838 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_604/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:40.967757838 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1442,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1515/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:03.247127380 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1515/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:03.247127380 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "return res;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return new FileLevelJsDocBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_891/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:52.636788176 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          StringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_891/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:52.636788176 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_298/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:42:06.738559108 -0500\n@@ -227,7 +227,10 @@\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n           case TRY:             return \"TRY\";\n-          case PARAM_LIST:      return \"PARAM_LIST\";\n+          case PARAM_LIST:      {\n+\t\t\t\tint c = 0;\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\t}\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n@@ -254,7 +257,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tint count = 0;\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_298/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:06.742559132 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_298/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:42:06.742559132 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "return \"PARAM_LIST\";", 
          "type": "InsertBefore", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1697/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:58:06.827778887 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1697/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:06.827778887 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1697/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:58:06.827778887 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_775/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:38.040385206 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_775/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:38.044385228 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_775/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:38.044385228 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_749/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:20.720291956 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_749/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:20.724291976 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_749/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:20.724291976 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,7 +1426,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1406/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:43.082692236 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1406/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:54:43.082692236 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_656/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:18.711959282 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_656/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:18.711959282 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_656/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:18.715959304 -0500\n@@ -958,7 +958,10 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1444,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_237/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:22.594296160 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        final String paramName = \"jscomp_throw_param\";\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1396/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:35.758652555 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -221,7 +213,8 @@\n     // Pick an exit node candidate.\n     if (srcBlock.isBlock()) {\n       if (!srcBlock.hasChildren()) {\n-        return;\n+        final String paramName = \"jscomp_throw_param\";\n+\t\treturn;\n       }\n       exitNodeParent = srcBlock;\n       exitNode = exitNodeParent.getLastChild();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 224, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1726/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:58:27.283886875 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1726/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:27.287886896 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -221,7 +214,8 @@\n     // Pick an exit node candidate.\n     if (srcBlock.isBlock()) {\n       if (!srcBlock.hasChildren()) {\n-        return;\n+        final String paramName = \"jscomp_throw_param\";\n+\t\treturn;\n       }\n       exitNodeParent = srcBlock;\n       exitNode = exitNodeParent.getLastChild();\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1726/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:58:27.287886896 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 224, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_546/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:00.299541854 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1194/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:14.581886716 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1194/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:14.585886738 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          StringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1651/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:35.163612384 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1651/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:35.167612405 -0500\n@@ -958,7 +958,7 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        int[] keys = getSortedPropTypes();\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "int[] keys=getSortedPropTypes();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return toDot(n,null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1483/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:55:40.979006369 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1483/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:40.983006391 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1483/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:55:40.983006391 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n@@ -1454,7 +1453,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1618/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:11.691489519 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1618/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:11.691489519 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n     }\n \n     // Just an 'if'.\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_366/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:56.602852472 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_366/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:42:56.602852472 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1636/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:23.579551684 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1636/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:23.583551705 -0500\n@@ -139,8 +139,8 @@\n        * block. See ECMA 262 Sections 8.9 & 12.14\n        */\n       if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n+        int type = n.getType();\n+        StringBuilder builder = new StringBuilder();\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_423/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:34.719074521 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_906/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:02.856843534 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_906/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:02.856843534 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_692/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:42.204085085 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_692/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:42.204085085 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_692/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:42.208085105 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1443,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_457/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:43:57.551206740 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_457/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:57.551206740 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -248,7 +240,8 @@\n         // Use the new block.\n         ifNode.replaceChild(destBlock, newDestBlock);\n       } else if (destBlock.isBlock()) {\n-        // Reuse the existing block.\n+        int index = -1;\n+\t\t// Reuse the existing block.\n         newDestBlock = destBlock;\n       } else {\n         // Add the existing statement to the new block.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_457/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:57.555206765 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 252, 
          "faulty": "newDestBlock=destBlock;", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1585/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:49.991376399 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1585/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:49.995376421 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1585/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:49.995376421 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1056/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:37.965360057 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      final String paramName = \"jscomp_throw_param\";\n     }\n \n     // Just an 'if'.\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1056/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:37.965360057 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1603/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:01.515436413 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1603/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:01.515436413 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1603/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:01.519436434 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_616/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:45:49.167801526 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_616/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:49.167801526 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_784/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:43.636415364 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +273,7 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n+          int index = -1;\n         }\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_784/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:43.636415364 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_583/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:24.923672487 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_583/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:24.923672487 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1391/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:32.130632902 -0500\n@@ -140,7 +140,7 @@\n        */\n       if (NodeUtil.hasFinally(n)) {\n         Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n+        StringBuilder builder = new StringBuilder();\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1490/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:55:46.731037620 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           ;\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1490/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:46.735037640 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1490/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:55:46.735037640 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,11 +1426,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"PARAM_LIST\";\n       }\n       return null;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Delete", 
          "seed": "JSDocInfo jsDocInfo=getJSDocInfo();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"PARAM_LIST\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_765/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:30.680345565 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_765/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:30.684345585 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_277/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:41:52.430474243 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_277/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:52.430474243 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int start = 0;\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_277/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:41:52.430474243 -0500\n@@ -958,7 +958,20 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        if (this instanceof StringNode) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getString());\n+\t\t} else if (type == Token.FUNCTION) {\n+\t\t\tsb.append(' ');\n+\t\t\tif (first == null || first.getType() != Token.NAME) {\n+\t\t\t\tsb.append(\"<invalid>\");\n+\t\t\t} else {\n+\t\t\t\tsb.append(first.getString());\n+\t\t\t}\n+\t\t} else if (type == Token.NUMBER) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getDouble());\n+\t\t}\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return new Node(Token.EMPTY);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "if (this instanceof StringNode) {\n  sb.append(' ');\n  sb.append(getString());\n}\n else if (type == Token.FUNCTION) {\n  sb.append(' ');\n  if (first == null || first.getType() != Token.NAME) {\n    sb.append(\"<invalid>\");\n  }\n else {\n    sb.append(first.getString());\n  }\n}\n else if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_841/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:20.752615691 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_841/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:20.752615691 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_841/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:20.752615691 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1040/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:26.009295005 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -261,7 +261,7 @@\n           case CATCH:           return \"CATCH\";\n           case EMPTY:           return \"EMPTY\";\n           case BLOCK:           return \"BLOCK\";\n-          case LABEL:           return \"LABEL\";\n+          case LABEL:           ;\n           case EXPR_RESULT:     return \"EXPR_RESULT\";\n           case SCRIPT:          return \"SCRIPT\";\n           case GETTER_DEF:      return \"GETTER_DEF\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1040/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:26.013295026 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1040/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:26.013295026 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 264, 
          "faulty": "return \"LABEL\";", 
          "type": "Delete", 
          "seed": "case PARAM_LIST:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_461/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:44:00.267222434 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_461/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:00.271222457 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_461/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:00.271222457 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,7 +1426,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1526/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:09.399160830 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1526/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:09.403160850 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1337/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:53:52.354417688 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +457,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1337/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:52.358417709 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1337/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:53:52.358417709 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_46/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:38:55.293388316 -0500\n@@ -261,7 +261,7 @@\n           case CATCH:           return \"CATCH\";\n           case EMPTY:           return \"EMPTY\";\n           case BLOCK:           return \"BLOCK\";\n-          case LABEL:           return \"LABEL\";\n+          case LABEL:           ;\n           case EXPR_RESULT:     return \"EXPR_RESULT\";\n           case SCRIPT:          return \"SCRIPT\";\n           case GETTER_DEF:      return \"GETTER_DEF\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_46/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:38:55.293388316 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_46/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:38:55.293388316 -0500\n@@ -958,7 +958,6 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 264, 
          "faulty": "return \"LABEL\";", 
          "type": "Delete", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "return extractLineno(sourcePosition);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1479/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:55:39.094996135 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1479/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:39.098996157 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1209/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:22.509929999 -0500\n@@ -221,12 +221,12 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           return \"SUB\";\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1209/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:22.513930021 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -221,7 +214,8 @@\n     // Pick an exit node candidate.\n     if (srcBlock.isBlock()) {\n       if (!srcBlock.hasChildren()) {\n-        return;\n+        int start = 0;\n+\t\treturn;\n       }\n       exitNodeParent = srcBlock;\n       exitNode = exitNodeParent.getLastChild();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "return \"SUB\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 224, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_442/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:47.591149131 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_442/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:47.595149154 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_417/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:43:30.987052854 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_417/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:30.991052879 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_417/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:30.991052879 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1531/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:13.295182014 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1531/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:13.295182014 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1531/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:13.299182036 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1135/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:51:29.737642069 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1135/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:29.741642090 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "case SCRIPT:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_652/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:15.875944115 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_652/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:15.879944138 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_652/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:15.879944138 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,7 +1426,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1671/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:48.127680454 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1671/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:48.127680454 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1671/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:48.127680454 -0500\n@@ -951,7 +951,7 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      int count = 0;\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Replace", 
          "seed": "int count=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1655/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:37.855626507 -0500\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1655/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:37.859626528 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1655/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:37.859626528 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_555/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:45:05.863571332 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_555/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:05.863571332 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_555/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:05.863571332 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_484/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:16.447310419 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_484/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:16.451310439 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_995/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:49:58.749146805 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_995/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:58.749146805 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_995/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:58.753146827 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "int post1=this.getIntProp(INCRDECR_PROP);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1099/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:05.325509028 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1099/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:51:05.325509028 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1436/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:55:04.630809063 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           ;\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1436/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:04.630809063 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1436/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:55:04.630809063 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,11 +1426,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"PARAM_LIST\";\n       }\n       return null;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Delete", 
          "seed": "JSDocInfo jsDocInfo=getJSDocInfo();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"PARAM_LIST\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1507/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:55:58.667102485 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1507/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:58.667102485 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1507/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:55:58.671102505 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_847/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:24.568636317 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_847/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:24.568636317 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_847/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:24.568636317 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,11 +1426,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"ADD\";\n       }\n       return null;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_814/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:03.696523569 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_814/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:03.700523590 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_814/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:03.700523590 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_969/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:49:43.649064789 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_969/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:43.649064789 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_969/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:43.649064789 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_411/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:27.315031523 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_411/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:27.315031523 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_673/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:29.812018685 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1008/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:07.157192497 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1008/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:07.157192497 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int type = n.getType();\n     }\n \n     // Just an 'if'.\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1008/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:07.157192497 -0500\n@@ -958,7 +958,10 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1444,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "JSType type=n.getJSType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_569/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:45:15.103620337 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_569/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:15.107620359 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_569/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:15.107620359 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1123/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:51:21.233595712 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1123/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:21.233595712 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -129,19 +130,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +275,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1123/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:51:21.237595734 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_866/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:38.304710602 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_866/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:38.308710624 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_668/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:25.899997742 -0500\n@@ -221,12 +221,12 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_668/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:25.899997742 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_668/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:25.903997764 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1002/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:03.441172300 -0500\n@@ -261,7 +261,7 @@\n           case CATCH:           return \"CATCH\";\n           case EMPTY:           return \"EMPTY\";\n           case BLOCK:           return \"BLOCK\";\n-          case LABEL:           return \"LABEL\";\n+          case LABEL:           ;\n           case EXPR_RESULT:     return \"EXPR_RESULT\";\n           case SCRIPT:          return \"SCRIPT\";\n           case GETTER_DEF:      return \"GETTER_DEF\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1002/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:03.441172300 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1002/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:03.441172300 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 264, 
          "faulty": "return \"LABEL\";", 
          "type": "Delete", 
          "seed": "case PARAM_LIST:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_771/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:35.312370510 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_771/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:35.316370533 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +274,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_771/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:35.316370533 -0500\n@@ -958,7 +958,10 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1600/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:59.607426468 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1600/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:59.607426468 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1024/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:17.341247862 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      final String paramName = \"jscomp_throw_param\";\n     }\n \n     // Just an 'if'.\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1340/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:54.246427914 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1278/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:08.390180384 -0500\n@@ -129,19 +129,12 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int type = n.getType();\n+\t\tPreconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1278/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:53:08.390180384 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_792/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:49.196445339 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           return \"BITOR\";\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_792/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:49.196445339 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_792/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:49.200445359 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_338/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:42:35.454728482 -0500\n@@ -226,8 +226,11 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n-          case PARAM_LIST:      return \"PARAM_LIST\";\n+          case TRY:             ;\n+          case PARAM_LIST:      {\n+\t\t\t\tint c = 0;\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\t}\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n@@ -254,7 +257,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tint count = 0;\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_338/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:35.454728482 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_338/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:42:35.454728482 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "return \"PARAM_LIST\";", 
          "type": "InsertBefore", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1073/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:48.205415794 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1073/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:48.205415794 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_233/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:41:19.902280014 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_233/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:19.906280039 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int index = -1;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1568/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:38.191315091 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      final String paramName = \"jscomp_throw_param\";\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1568/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:38.195315112 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n@@ -1454,7 +1453,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1678/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:52.899705547 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1678/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:52.899705547 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1678/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:52.903705568 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1215/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:26.109949657 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1215/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:26.109949657 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1215/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:52:26.113949679 -0500\n@@ -958,7 +958,6 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1453,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case PARAM_LIST:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_446/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:43:50.231164410 -0500\n@@ -227,7 +227,10 @@\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n           case TRY:             return \"TRY\";\n-          case PARAM_LIST:      return \"PARAM_LIST\";\n+          case PARAM_LIST:      {\n+\t\t\t\tint c = 0;\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\t}\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_446/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:50.235164435 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "return \"PARAM_LIST\";", 
          "type": "InsertBefore", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_528/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:47.079471914 -0500\n@@ -139,8 +139,7 @@\n        * block. See ECMA 262 Sections 8.9 & 12.14\n        */\n       if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n+        final String paramName = \"jscomp_throw_param\";\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1633/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:21.755542136 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +457,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1633/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:21.755542136 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_613/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:45:47.363791911 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_613/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:47.363791911 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +274,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_613/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:47.363791911 -0500\n@@ -951,14 +951,14 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "StringBuilder s=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1563/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:34.335295090 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1563/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:34.339295111 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1372/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:20.138567971 -0500\n@@ -109,7 +109,6 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +133,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1203/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:19.797915191 -0500\n@@ -261,7 +261,7 @@\n           case CATCH:           return \"CATCH\";\n           case EMPTY:           return \"EMPTY\";\n           case BLOCK:           return \"BLOCK\";\n-          case LABEL:           return \"LABEL\";\n+          case LABEL:           ;\n           case EXPR_RESULT:     return \"EXPR_RESULT\";\n           case SCRIPT:          return \"SCRIPT\";\n           case GETTER_DEF:      return \"GETTER_DEF\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1203/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:19.801915213 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 264, 
          "faulty": "return \"LABEL\";", 
          "type": "Delete", 
          "seed": "Node block=block();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return toDot(n,null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_336/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:42:34.538723098 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_336/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:34.542723121 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_336/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:42:34.542723121 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_999/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:01.593162258 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_999/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:01.593162258 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_999/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:01.597162280 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1443,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1454,7 +1457,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_142/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:40:13.201875206 -0500\n@@ -210,7 +210,10 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\t}\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_142/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:13.201875206 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "formatPreamble();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_983/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:49:51.281106236 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_983/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:51.281106236 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_983/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:51.285106258 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1467/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:30.986952102 -0500\n@@ -134,14 +134,7 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+      StringBuilder builder = new StringBuilder();\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_889/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:51.720783217 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_889/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:51.724783238 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_889/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:51.724783238 -0500\n@@ -958,7 +958,10 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1444,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1454,7 +1458,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "int lineno=getLineno();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1248/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:48.770073426 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1248/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:48.770073426 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      StringBuilder builder = new StringBuilder();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1248/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:52:48.770073426 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_920/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:49:11.140888428 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_920/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:11.140888428 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_920/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:11.144888450 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "case PARAM_LIST:", 
          "type": "Replace", 
          "seed": "case PARAM_LIST:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1067/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:44.621396284 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           ;\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1067/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:44.621396284 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          StringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1067/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:44.625396306 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        PropListItem x = propListHead;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "PropListItem x=propListHead;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Delete", 
          "seed": "int[] keys=getSortedPropTypes();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_356/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:49.282809624 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_323/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:42:25.410669378 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_323/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:25.414669402 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int start = 0;\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,7 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+      int start = 0;\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_323/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:42:25.414669402 -0500\n@@ -958,7 +958,20 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        if (this instanceof StringNode) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getString());\n+\t\t} else if (type == Token.FUNCTION) {\n+\t\t\tsb.append(' ');\n+\t\t\tif (first == null || first.getType() != Token.NAME) {\n+\t\t\t\tsb.append(\"<invalid>\");\n+\t\t\t} else {\n+\t\t\t\tsb.append(first.getString());\n+\t\t\t}\n+\t\t} else if (type == Token.NUMBER) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getDouble());\n+\t\t}\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return new Node(Token.EMPTY);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "if (this instanceof StringNode) {\n  sb.append(' ');\n  sb.append(getString());\n}\n else if (type == Token.FUNCTION) {\n  sb.append(' ');\n  if (first == null || first.getType() != Token.NAME) {\n    sb.append(\"<invalid>\");\n  }\n else {\n    sb.append(first.getString());\n  }\n}\n else if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Replace", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1556/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:29.999272620 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1556/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:29.999272620 -0500\n@@ -958,7 +958,7 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        int[] keys = getSortedPropTypes();\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "int[] keys=getSortedPropTypes();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1265/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:58.806128265 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1265/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:58.806128265 -0500\n@@ -125,23 +125,16 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +275,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1265/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:52:58.806128265 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_740/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:14.008255853 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_802/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:56.564485080 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_802/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:56.564485080 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_802/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:56.564485080 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_940/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:26.424971311 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_940/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:26.424971311 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1207/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:21.561924823 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1069/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:45.529401227 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             Node block = new Node(Token.BLOCK);\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1069/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:45.533401249 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1069/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:45.533401249 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1667/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:46.227670470 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1667/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:46.227670470 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_256/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:41:36.942381995 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_256/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:36.942381995 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_244/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:41:27.018322666 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -261,7 +261,7 @@\n           case CATCH:           return \"CATCH\";\n           case EMPTY:           return \"EMPTY\";\n           case BLOCK:           return \"BLOCK\";\n-          case LABEL:           return \"LABEL\";\n+          case LABEL:           ;\n           case EXPR_RESULT:     return \"EXPR_RESULT\";\n           case SCRIPT:          return \"SCRIPT\";\n           case GETTER_DEF:      return \"GETTER_DEF\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_244/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:27.018322666 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 264, 
          "faulty": "return \"LABEL\";", 
          "type": "Delete", 
          "seed": "NodeMismatch res=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "formatConclusion();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1205/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:20.681920018 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1205/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:20.685920040 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1288/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:53:15.622219374 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1288/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:15.626219396 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1288/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:53:15.626219396 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_560/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:08.583585752 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_560/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:08.583585752 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "return first;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_723/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:02.048191578 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_723/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:02.052191598 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_723/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:02.052191598 -0500\n@@ -958,7 +958,10 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1444,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_513/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:44:37.199419737 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_513/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:37.199419737 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_513/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:37.203419757 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_930/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:18.260927030 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1710/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:58:15.267823405 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1710/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:15.267823405 -0500\n@@ -125,23 +125,17 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n-      if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n+      int start = 0;\n+\tif (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1710/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:58:15.271823426 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 131, 
          "faulty": "if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n  Preconditions.checkState(allCatchNodes.hasOneChild());\n  Node catchNode=allCatchNodes.getFirstChild();\n  Node catchCodeBlock=catchNode.getLastChild();\n  tryMinimizeExits(catchCodeBlock,exitType,labelName);\n}", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1231/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:36.162004553 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1231/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:36.166004575 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1221/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:29.849970080 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1221/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:29.849970080 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1221/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:52:29.849970080 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_967/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:42.581058991 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,9 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\t\tStringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_967/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:42.581058991 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_683/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:36.816056204 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +273,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_698/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:45.844104602 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1031/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:21.069268136 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      final String paramName = \"jscomp_throw_param\";\n     }\n \n     // Just an 'if'.\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1031/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:21.073268158 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_953/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:34.053012700 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_953/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:34.053012700 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1363/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:54:12.834528441 -0500\n@@ -226,7 +226,10 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             {\n+\t\t\t\tStringBuilder s = new StringBuilder();\n+\t\t\t\treturn \"TRY\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1363/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:12.838528463 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1363/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:54:12.838528463 -0500\n@@ -958,7 +958,11 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1458,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "InsertBefore", 
          "seed": "StringBuilder s=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_754/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:23.432306548 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           return \"BITOR\";\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_754/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:23.436306570 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_754/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:23.436306570 -0500\n@@ -958,7 +958,10 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1444,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_470/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:44:06.403257651 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_470/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:06.403257651 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_470/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:06.407257672 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(Token.name(type));\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_130/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:03.981818454 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_130/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:40:03.985818479 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "sourcePosition=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_152/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:40:20.485919895 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_152/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:20.489919918 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_712/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:56.208160217 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_712/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:56.212160237 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1628/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:18.983527635 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +457,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1628/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:18.987527656 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1628/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:18.987527656 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_690/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:41.288080173 -0500\n@@ -221,12 +221,12 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_690/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:41.288080173 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_690/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:41.292080195 -0500\n@@ -951,14 +951,14 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "StringBuilder s=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_510/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:44:35.367410071 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_510/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:35.367410071 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_510/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:35.371410091 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1158/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:51:48.257743067 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1158/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:48.261743088 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_838/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:18.816605230 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             return \"SCRIPT\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           return \"BITOR\";\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_838/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:18.816605230 -0500\n@@ -108,7 +108,8 @@\n     // Just an 'exit'.\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n-      compiler.reportCodeChange();\n+      StringBuilder builder = new StringBuilder();\n+\tcompiler.reportCodeChange();\n       return;\n     }\n \n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_838/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:18.816605230 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1442,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "return \"SCRIPT\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 111, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1091/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:00.537482947 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1091/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:51:00.541482969 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1272/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:53:04.154157491 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1272/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:04.154157491 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1272/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:53:04.154157491 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1037/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:23.921283647 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      final String paramName = \"jscomp_throw_param\";\n     }\n \n     // Just an 'if'.\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1037/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:23.921283647 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_703/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:48.692119881 -0500\n@@ -221,12 +221,12 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_703/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:48.696119901 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_703/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:48.696119901 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_115/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:39:51.969744193 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "formatPreamble();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_351/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:46.538793542 -0500\n@@ -134,14 +134,7 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+      int start = 0;\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_351/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:42:46.542793566 -0500\n@@ -958,7 +958,20 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        if (this instanceof StringNode) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getString());\n+\t\t} else if (type == Token.FUNCTION) {\n+\t\t\tsb.append(' ');\n+\t\t\tif (first == null || first.getType() != Token.NAME) {\n+\t\t\t\tsb.append(\"<invalid>\");\n+\t\t\t} else {\n+\t\t\t\tsb.append(first.getString());\n+\t\t\t}\n+\t\t} else if (type == Token.NUMBER) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getDouble());\n+\t\t}\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "if (this instanceof StringNode) {\n  sb.append(' ');\n  sb.append(getString());\n}\n else if (type == Token.FUNCTION) {\n  sb.append(' ');\n  if (first == null || first.getType() != Token.NAME) {\n    sb.append(\"<invalid>\");\n  }\n else {\n    sb.append(first.getString());\n  }\n}\n else if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Replace", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1113/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:13.821555318 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1113/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:51:13.825555339 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1660/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:41.439645320 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      final String paramName = \"jscomp_throw_param\";\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1660/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:41.443645340 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_975/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:46.381079624 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      final String paramName = \"jscomp_throw_param\";\n     }\n \n     // Just an 'if'.\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1047/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:31.585325340 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1047/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:31.585325340 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1047/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:31.585325340 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1334/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:50.462407463 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1334/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:53:50.466407483 -0500\n@@ -1454,7 +1454,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        int c = 0;\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "formatConclusion();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1060/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:40.949376296 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1060/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:40.953376318 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_950/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:32.221002758 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_950/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:32.221002758 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "JSType type=n.getJSType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_502/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:44:29.051376769 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_502/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:29.051376769 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_502/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:29.055376789 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,7 +1426,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_591/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:45:31.115705407 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_591/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:31.115705407 -0500\n@@ -109,7 +109,6 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +133,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_591/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:31.115705407 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_628/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:45:57.735847221 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_628/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:57.735847221 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_628/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:57.739847243 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_989/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:55.121127094 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_989/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:55.121127094 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "JSType type=n.getJSType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1174/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:01.337814431 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1174/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:01.341814453 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -129,19 +130,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +275,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1174/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:52:01.341814453 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_382/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:06.850912346 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_382/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:06.854912371 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_878/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:46.236753527 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_878/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:46.240753549 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1016/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:11.941218503 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1016/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:11.941218503 -0500\n@@ -107,7 +107,8 @@\n \n     // Just an 'exit'.\n     if (matchingExitNode(n, exitType, labelName)) {\n-      NodeUtil.removeChild(n.getParent(), n);\n+      int type = n.getType();\n+\tNodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n       return;\n     }\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1016/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:11.945218523 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 110, 
          "faulty": "NodeUtil.removeChild(n.getParent(),n);", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_718/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:59.112175808 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +273,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_718/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:59.116175831 -0500\n@@ -951,14 +951,14 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "StringBuilder s=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1200/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:18.037905583 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1200/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:18.037905583 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "case SCRIPT:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_916/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:49:09.280878346 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_916/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:09.284878368 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_916/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:09.284878368 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return new DotFormatter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_688/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:40.376075284 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      ;\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_688/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:40.376075284 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_688/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:40.380075305 -0500\n@@ -951,14 +951,14 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "StringBuilder s=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Delete", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1689/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:58:02.327755176 -0500\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1689/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:02.331755197 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1689/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:58:02.331755197 -0500\n@@ -958,7 +958,7 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        int[] keys = getSortedPropTypes();\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "int[] keys=getSortedPropTypes();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return \"SUB\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_540/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:55.847518285 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1282/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:53:11.010194507 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1282/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:11.010194507 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1282/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:53:11.014194529 -0500\n@@ -951,14 +951,15 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_833/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:15.980589906 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_833/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:15.980589906 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +274,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_833/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:15.980589906 -0500\n@@ -951,14 +951,14 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "return \"SUB\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1497/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:55:52.139067004 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1497/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:52.139067004 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1497/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:55:52.143067026 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_413/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:28.259037008 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n-        Node catchNode = allCatchNodes.getFirstChild();\n+        int index = -1;\n+\t\tNode catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_413/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:28.259037008 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "NodeMismatch res=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_429/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:39.239100740 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_429/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:39.243100764 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n@@ -1425,7 +1424,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "return sb.toString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1306/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:28.490288797 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_948/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:49:31.312997831 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_948/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:31.312997831 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_468/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:05.487252571 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_95/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:39:34.833637586 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_432/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:43:41.207112149 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_432/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:41.207112149 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_432/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:41.211112173 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_993/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:57.849141915 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_993/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:57.853141937 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_374/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:43:01.306879973 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_374/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:01.310879995 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_805/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:58.392494944 -0500\n@@ -221,12 +221,12 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_805/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:58.392494944 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +274,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_805/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:58.392494944 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_960/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:38.825038601 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_960/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:38.825038601 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1184/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:07.617848704 -0500\n@@ -221,12 +221,12 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           return \"SUB\";\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1184/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:07.621848726 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "return \"SUB\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1708/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:58:14.171817621 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1708/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:14.171817621 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1708/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:58:14.171817621 -0500\n@@ -951,7 +951,7 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      int count = 0;\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Replace", 
          "seed": "int count=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1471/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:33.658966612 -0500\n@@ -134,14 +134,7 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+      StringBuilder builder = new StringBuilder();\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1471/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:55:33.658966612 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_716/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:58.024169967 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_716/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:58.024169967 -0500\n@@ -1441,7 +1441,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_136/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:40:08.545846573 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_136/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:08.549846598 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -221,7 +213,8 @@\n     // Pick an exit node candidate.\n     if (srcBlock.isBlock()) {\n       if (!srcBlock.hasChildren()) {\n-        return;\n+        StringBuilder builder = new StringBuilder();\n+\t\treturn;\n       }\n       exitNodeParent = srcBlock;\n       exitNode = exitNodeParent.getLastChild();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return new Node(Token.EMPTY);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 224, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_844/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:22.628625830 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_844/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:22.628625830 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_549/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:02.187551855 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_490/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:44:19.535326662 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_490/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:19.539326683 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_490/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:19.539326683 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,7 +1426,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_762/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:29.008336561 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return Token.name(type);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1386/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:54:29.058616265 -0500\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1386/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:29.062616287 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_660/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:20.695969894 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_660/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:20.695969894 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_660/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:20.699969916 -0500\n@@ -951,14 +951,14 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "StringBuilder s=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_10/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:38:24.157188417 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_183/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:40:43.630061066 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_183/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:43.634061089 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1605/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:02.431441190 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder sb = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1605/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:02.431441190 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1605/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:02.435441212 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_195/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:40:52.830116855 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_195/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:52.830116855 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int start = 0;\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return new Node(Token.EMPTY);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1126/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:23.129606046 -0500\n@@ -109,7 +109,6 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n     }\n \n     // Just an 'if'.\n@@ -129,19 +128,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1126/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:51:23.129606046 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1076/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:50.093426074 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          StringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1076/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:50.093426074 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_874/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:43.508738761 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_874/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:43.512738783 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_874/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:43.512738783 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1250/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:49.694078474 -0500\n@@ -221,12 +221,12 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           ;\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1250/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:49.694078474 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -129,19 +130,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Delete", 
          "seed": "return \"SCRIPT\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1355/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:54:06.570494554 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1355/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:06.574494576 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1355/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:54:06.574494576 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1019/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:13.801228614 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1019/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:13.801228614 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1019/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:13.801228614 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_700/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:46.732109366 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_700/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:46.732109366 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1226/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:32.549984825 -0500\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1226/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:32.549984825 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_914/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:49:08.368873403 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_914/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:08.372873425 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_914/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:08.372873425 -0500\n@@ -958,7 +958,10 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_856/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:31.060671419 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1610/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:06.331461534 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      final String paramName = \"jscomp_throw_param\";\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1610/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:06.335461555 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_146/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:15.849891467 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "formatPreamble();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_893/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:53.572793246 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_893/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:53.572793246 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_893/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:53.576793266 -0500\n@@ -958,7 +958,11 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1445,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1674/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:50.107690864 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder sb = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1674/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:50.111690885 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1674/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:50.111690885 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1588/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:51.819385910 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1588/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:51.823385931 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_242/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:41:26.126317325 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_242/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:26.126317325 -0500\n@@ -109,7 +109,6 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +133,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return new Node(Token.EMPTY);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_317/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:20.378639712 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return toDot(n,null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_275/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:41:51.514468799 -0500\n@@ -226,7 +226,10 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             {\n+\t\t\t\tint count = 0;\n+\t\t\t\treturn \"TRY\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_275/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:51.514468799 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_172/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:40:35.410011064 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_172/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:35.414011089 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return new Node(Token.EMPTY);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1524/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:08.515156022 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1524/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:08.515156022 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1524/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:08.515156022 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_455/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:56.627201401 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_455/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:56.631201423 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_595/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:34.203721832 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_595/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:34.203721832 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1442,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_180/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:41.706049375 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_733/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:09.268230371 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_733/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:09.272230394 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return Token.name(type);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_714/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:57.112165070 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_714/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:57.112165070 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_714/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:57.116165090 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_622/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:45:52.899821424 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           StringBuilder s = new StringBuilder();\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_622/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:52.903821444 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_622/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:52.903821444 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "StringBuilder s=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_945/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:29.356987218 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_945/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:29.360987240 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_643/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:09.411909566 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_818/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:06.392538124 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           return \"BITOR\";\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_818/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:06.392538124 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_818/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:06.396538144 -0500\n@@ -958,7 +958,10 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1444,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1062/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:41.865381281 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1062/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:41.865381281 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int type = n.getType();\n     }\n \n     // Just an 'if'.\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1062/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:41.865381281 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "JSType type=n.getJSType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1295/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:20.154243818 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1295/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:53:20.158243840 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1131/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:26.877626476 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,9 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\t\tStringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1131/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:51:26.881626498 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_809/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:00.932508650 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_809/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:00.932508650 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_809/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:00.936508671 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1297/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:53:21.074248780 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1297/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:21.074248780 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1297/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:53:21.078248802 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1517/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:04.147132273 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1517/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:04.147132273 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_3/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:38:18.913154404 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_52/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:38:58.949411570 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_52/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:38:58.949411570 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return new Node(Token.EMPTY);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_363/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:42:54.798841919 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             Node block = new Node(Token.BLOCK);\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_363/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:54.798841919 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_363/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:42:54.802841943 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1723/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:25.375876789 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1723/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:58:25.375876789 -0500\n@@ -958,7 +958,7 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        int[] keys = getSortedPropTypes();\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "int[] keys=getSortedPropTypes();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return \"SUB\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return toDot(n,null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1378/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:24.426591184 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1378/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:54:24.426591184 -0500\n@@ -958,7 +958,6 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "parent=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1093/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:01.453487937 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          StringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1093/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:51:01.457487959 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1010/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:08.077197498 -0500\n@@ -107,7 +107,8 @@\n \n     // Just an 'exit'.\n     if (matchingExitNode(n, exitType, labelName)) {\n-      NodeUtil.removeChild(n.getParent(), n);\n+      int type = n.getType();\n+\tNodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n       return;\n     }\n@@ -129,19 +130,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +275,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1010/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:08.081197520 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 110, 
          "faulty": "NodeUtil.removeChild(n.getParent(),n);", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_354/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:42:48.402804467 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_354/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:48.406804491 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_354/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:42:48.406804491 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1706/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:13.179812385 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      final String paramName = \"jscomp_throw_param\";\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1706/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:58:13.183812408 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_486/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:17.539316162 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_486/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:17.543316183 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1239/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:41.502033721 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1239/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:41.506033743 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_918/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:10.188883268 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_918/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:10.192883290 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_965/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:41.637053866 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_965/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:41.637053866 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "int post1=this.getIntProp(INCRDECR_PROP);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1212/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:24.325939914 -0500\n@@ -261,7 +261,7 @@\n           case CATCH:           return \"CATCH\";\n           case EMPTY:           return \"EMPTY\";\n           case BLOCK:           return \"BLOCK\";\n-          case LABEL:           return \"LABEL\";\n+          case LABEL:           ;\n           case EXPR_RESULT:     return \"EXPR_RESULT\";\n           case SCRIPT:          return \"SCRIPT\";\n           case GETTER_DEF:      return \"GETTER_DEF\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1212/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:24.329939936 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1212/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:52:24.329939936 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 264, 
          "faulty": "return \"LABEL\";", 
          "type": "Delete", 
          "seed": "Node block=block();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "return new Node(Token.EMPTY);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_962/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:49:39.741043573 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_962/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:39.741043573 -0500\n@@ -107,7 +107,8 @@\n \n     // Just an 'exit'.\n     if (matchingExitNode(n, exitType, labelName)) {\n-      NodeUtil.removeChild(n.getParent(), n);\n+      int type = n.getType();\n+\tNodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n       return;\n     }\n@@ -129,19 +130,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +275,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_962/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:39.745043595 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1443,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1454,7 +1457,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 110, 
          "faulty": "NodeUtil.removeChild(n.getParent(),n);", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1432/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:55:01.902794266 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1432/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:01.906794288 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1432/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:55:01.906794288 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_977/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:49:47.265084425 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_977/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:47.265084425 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1430/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:55:00.994789341 -0500\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1430/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:00.998789363 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -221,7 +213,8 @@\n     // Pick an exit node candidate.\n     if (srcBlock.isBlock()) {\n       if (!srcBlock.hasChildren()) {\n-        return;\n+        final String paramName = \"jscomp_throw_param\";\n+\t\treturn;\n       }\n       exitNodeParent = srcBlock;\n       exitNode = exitNodeParent.getLastChild();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 224, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_751/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:21.600296690 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +273,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1540/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:18.783211862 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1540/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:18.787211884 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1540/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:18.787211884 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1309/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:30.426299246 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_557/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:06.747576018 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_831/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:15.064584958 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_831/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:15.064584958 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_831/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:15.068584980 -0500\n@@ -958,7 +958,10 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1444,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1454,7 +1458,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_221/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:41:11.614230217 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_221/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:11.618230241 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_286/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:58.622511010 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_448/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:43:51.111169503 -0500\n@@ -227,7 +227,10 @@\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n           case TRY:             return \"TRY\";\n-          case PARAM_LIST:      return \"PARAM_LIST\";\n+          case PARAM_LIST:      {\n+\t\t\t\tint c = 0;\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\t}\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_448/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:51.111169503 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -248,7 +240,8 @@\n         // Use the new block.\n         ifNode.replaceChild(destBlock, newDestBlock);\n       } else if (destBlock.isBlock()) {\n-        // Reuse the existing block.\n+        final String paramName = \"jscomp_throw_param\";\n+\t\t// Reuse the existing block.\n         newDestBlock = destBlock;\n       } else {\n         // Add the existing statement to the new block.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "return \"PARAM_LIST\";", 
          "type": "InsertBefore", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 252, 
          "faulty": "newDestBlock=destBlock;", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_736/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:11.056239983 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_618/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:45:50.079806388 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_618/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:50.083806408 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_618/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:50.083806408 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,7 +1427,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n@@ -1441,7 +1444,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_981/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:49:50.337101109 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_981/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:50.337101109 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,7 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n+        StringBuilder builder = new StringBuilder();\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_981/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:50.337101109 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1290/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:16.494224077 -0500\n@@ -134,14 +134,7 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+      int start = 0;\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Replace", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_403/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:43:21.714998960 -0500\n@@ -226,8 +226,11 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n-          case PARAM_LIST:      return \"PARAM_LIST\";\n+          case TRY:             ;\n+          case PARAM_LIST:      {\n+\t\t\t\tint c = 0;\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\t}\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n@@ -254,7 +257,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tint count = 0;\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_403/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:21.718998981 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_403/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:21.718998981 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,7 +1426,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "return \"PARAM_LIST\";", 
          "type": "InsertBefore", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_49/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:38:57.137400051 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_49/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:38:57.137400051 -0500\n@@ -1441,7 +1441,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      int[] keys = getSortedPropTypes();\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "int[] keys=getSortedPropTypes();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1748/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:58:44.615978605 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1748/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:44.619978626 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1748/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:58:44.619978626 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1519/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:05.031137079 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1519/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:05.031137079 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_440/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:46.683143873 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1026/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:18.257252843 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1026/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:18.257252843 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1064/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:42.845386617 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          StringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1064/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:42.849386637 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_895/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:54.488798205 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_895/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:54.488798205 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1102/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:51:07.185519162 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1102/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:07.189519184 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_887/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:50.800778235 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_887/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:50.800778235 -0500\n@@ -134,14 +134,7 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n+      int type = n.getType();\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_887/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:50.804778257 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "JSDocInfo jsDocInfo=getJSDocInfo();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1669/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:47.143675283 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           ;\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1669/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:47.147675303 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1669/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:47.147675303 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n@@ -1454,7 +1453,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Delete", 
          "seed": "switch (getType()) {\ncase Token.NAME:\n  return getString().isEmpty() ? false : true;\ncase Token.THIS:\nreturn true;\ncase Token.GETPROP:\nreturn getFirstChild().isQualifiedName();\ndefault :\nreturn false;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1086/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:56.721462165 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1086/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:56.725462186 -0500\n@@ -107,7 +107,8 @@\n \n     // Just an 'exit'.\n     if (matchingExitNode(n, exitType, labelName)) {\n-      NodeUtil.removeChild(n.getParent(), n);\n+      int type = n.getType();\n+\tNodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n       return;\n     }\n@@ -128,20 +129,13 @@\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n-      if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n+      int index = -1;\n+\tif (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +276,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          StringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1086/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:56.725462186 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 110, 
          "faulty": "NodeUtil.removeChild(n.getParent(),n);", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 131, 
          "faulty": "if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n  Preconditions.checkState(allCatchNodes.hasOneChild());\n  Node catchNode=allCatchNodes.getFirstChild();\n  Node catchCodeBlock=catchNode.getLastChild();\n  tryMinimizeExits(catchCodeBlock,exitType,labelName);\n}", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1571/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:40.051324745 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1571/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:40.055324766 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_822/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:08.412549029 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_822/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:08.412549029 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +274,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_822/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:08.416549051 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,7 +1426,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_904/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:01.920838464 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_904/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:01.924838484 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return Token.name(type);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1317/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:37.470337276 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "formatConclusion();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1692/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:58:04.107764553 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1692/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:04.107764553 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_475/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:44:10.191277541 -0500\n@@ -210,7 +210,10 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\t}\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_475/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:10.191277541 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_475/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:10.195277562 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1033/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:22.029273357 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      final String paramName = \"jscomp_throw_param\";\n     }\n \n     // Just an 'if'.\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -244,17 +236,17 @@\n       if (destBlock == null) {\n         // Only possible if this is the false block.\n         ifNode.addChildToBack(newDestBlock);\n-      } else if (destBlock.isEmpty()) {\n-        // Use the new block.\n-        ifNode.replaceChild(destBlock, newDestBlock);\n-      } else if (destBlock.isBlock()) {\n-        // Reuse the existing block.\n-        newDestBlock = destBlock;\n       } else {\n-        // Add the existing statement to the new block.\n-        ifNode.replaceChild(destBlock, newDestBlock);\n-        newDestBlock.addChildToBack(destBlock);\n-      }\n+\t\tint index = -1;\n+\t\tif (destBlock.isEmpty()) {\n+\t\t\tifNode.replaceChild(destBlock, newDestBlock);\n+\t\t} else if (destBlock.isBlock()) {\n+\t\t\tnewDestBlock = destBlock;\n+\t\t} else {\n+\t\t\tifNode.replaceChild(destBlock, newDestBlock);\n+\t\t\tnewDestBlock.addChildToBack(destBlock);\n+\t\t}\n+\t}\n \n       // Move all the if node's following siblings.\n       moveAllFollowing(ifNode, ifNode.getParent(), newDestBlock);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 247, 
          "faulty": "if (destBlock.isEmpty()) {\n  ifNode.replaceChild(destBlock,newDestBlock);\n}\n else if (destBlock.isBlock()) {\n  newDestBlock=destBlock;\n}\n else {\n  ifNode.replaceChild(destBlock,newDestBlock);\n  newDestBlock.addChildToBack(destBlock);\n}", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1080/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:52.853441102 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             Node block = new Node(Token.BLOCK);\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1080/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:52.857441124 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1080/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:52.857441124 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n@@ -1454,7 +1446,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1223/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:30.757975039 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1223/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:52:30.757975039 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        NodeMismatch res = null;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "NodeMismatch res=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1422/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:54:54.862756089 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1422/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:54.862756089 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1422/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:54:54.866756111 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return toDot(n,null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_208/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:01.798171066 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "formatPreamble();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1196/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:15.461891520 -0500\n@@ -261,7 +261,7 @@\n           case CATCH:           return \"CATCH\";\n           case EMPTY:           return \"EMPTY\";\n           case BLOCK:           return \"BLOCK\";\n-          case LABEL:           return \"LABEL\";\n+          case LABEL:           ;\n           case EXPR_RESULT:     return \"EXPR_RESULT\";\n           case SCRIPT:          return \"SCRIPT\";\n           case GETTER_DEF:      return \"GETTER_DEF\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1196/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:15.465891541 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 264, 
          "faulty": "return \"LABEL\";", 
          "type": "Delete", 
          "seed": "Node block=block();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_658/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:19.787965037 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +274,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_779/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:40.896400595 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_779/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:40.896400595 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_779/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:40.896400595 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "return (JSDocInfo)getProp(JSDOC_INFO_PROP);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1165/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:51:54.061774730 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1165/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:54.061774730 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,9 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\t\tStringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1165/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:51:54.065774751 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_861/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:34.576690434 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           return \"BITOR\";\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_861/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:34.576690434 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_861/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:34.576690434 -0500\n@@ -958,7 +958,10 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1444,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1454,7 +1458,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_515/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:44:38.119424591 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_515/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:38.119424591 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_515/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:38.119424591 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_794/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:50.116450299 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_794/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:50.120450321 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +274,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_794/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:50.120450321 -0500\n@@ -951,14 +951,16 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1443,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "return \"SUB\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_488/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:44:18.447320938 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_488/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:18.451320959 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_488/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:18.451320959 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1380/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:25.298595906 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_378/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:43:04.086896212 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_378/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:04.090896234 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "lazyInitInfo();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_154/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:40:21.373925334 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_154/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:21.377925357 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int start = 0;\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return new Node(Token.EMPTY);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1473/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:34.530971347 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +272,7 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n+        int start = 0;\n       }\n     }\n     return false;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "formatConclusion();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "formatPreamble();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Replace", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_600/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:38.051742311 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1154/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:51:45.493727990 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1154/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:45.493727990 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_399/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:18.958982919 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1735/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:58:33.675920681 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1735/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:33.675920681 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1735/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:58:33.679920702 -0500\n@@ -958,7 +958,7 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        int[] keys = getSortedPropTypes();\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "int[] keys=getSortedPropTypes();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return \"SUB\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1147/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:51:40.001698036 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1147/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:40.005698057 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1147/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:51:40.005698057 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1552/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:27.295258167 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1552/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:27.299258189 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n@@ -1454,7 +1453,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_973/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:49:45.493074802 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      ;\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_973/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:45.497074824 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_973/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:45.497074824 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1178/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:04.085829427 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1178/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:04.089829449 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_369/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:42:58.554863888 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_369/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:58.558863910 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_369/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:42:58.558863910 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1538/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:17.879206945 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1538/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:17.883206967 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1538/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:17.883206967 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "switch (getType()) {\ncase Token.NAME:\n  return getString().isEmpty() ? false : true;\ncase Token.THIS:\nreturn true;\ncase Token.GETPROP:\nreturn getFirstChild().isQualifiedName();\ndefault :\nreturn false;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_854/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:30.184666681 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_854/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:30.184666681 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_854/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:30.188666702 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_219/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:41:10.734224922 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_219/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:10.734224922 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int start = 0;\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return new Node(Token.EMPTY);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_971/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:44.565069764 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          StringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_971/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:44.569069785 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        PropListItem x = propListHead;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "PropListItem x=propListHead;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_880/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:47.148758464 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_880/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:47.148758464 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1263/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:57.886123236 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1263/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:57.886123236 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1263/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:52:57.890123258 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1622/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:14.323503271 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1622/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:14.327503292 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1416/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:54:50.338731564 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           ;\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1416/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:50.342731585 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1416/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:54:50.342731585 -0500\n@@ -1425,11 +1425,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"PARAM_LIST\";\n       }\n       return null;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Delete", 
          "seed": "JSDocInfo jsDocInfo=getJSDocInfo();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"PARAM_LIST\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1701/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:09.523793103 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_478/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:44:12.051287312 -0500\n@@ -210,7 +210,10 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\t}\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_478/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:12.051287312 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_478/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:12.055287333 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1664/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:44.311660403 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1664/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:44.311660403 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1664/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:44.311660403 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1082/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:50:53.777446133 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1082/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:53.777446133 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int type = n.getType();\n     }\n \n     // Just an 'if'.\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1082/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:53.781446155 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "JSType type=n.getJSType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_23/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:38:35.933264425 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_23/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:38:35.933264425 -0500\n@@ -958,7 +958,6 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "return extractLineno(sourcePosition);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1384/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:54:28.162611413 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1384/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:28.162611413 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1384/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:54:28.166611435 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1004/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:04.353177257 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1004/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:04.357177280 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_385/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:43:08.674922989 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_385/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:08.674922989 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_385/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:08.678923013 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_562/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:45:09.467590438 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_562/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:09.471590461 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1535/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:15.939196394 -0500\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1535/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:15.943196415 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_325/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:42:26.302674633 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_325/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:26.302674633 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int start = 0;\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return new Node(Token.EMPTY);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1593/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:54.563400193 -0500\n@@ -221,12 +221,15 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"THROW\";\n+\t\t\t}\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +257,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1593/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:54.567400213 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_372/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:43:00.422874808 -0500\n@@ -227,7 +227,10 @@\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n           case TRY:             return \"TRY\";\n-          case PARAM_LIST:      return \"PARAM_LIST\";\n+          case PARAM_LIST:      {\n+\t\t\t\tint c = 0;\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\t}\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_372/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:00.422874808 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "return \"PARAM_LIST\";", 
          "type": "InsertBefore", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_191/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:40:50.114100403 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_191/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:50.118100427 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1399/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:54:37.578662414 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1399/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:54:37.578662414 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1399/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:54:37.582662435 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_159/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:40:24.857946656 -0500\n@@ -261,7 +261,7 @@\n           case CATCH:           return \"CATCH\";\n           case EMPTY:           return \"EMPTY\";\n           case BLOCK:           return \"BLOCK\";\n-          case LABEL:           return \"LABEL\";\n+          case LABEL:           ;\n           case EXPR_RESULT:     return \"EXPR_RESULT\";\n           case SCRIPT:          return \"SCRIPT\";\n           case GETTER_DEF:      return \"GETTER_DEF\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_159/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:40:24.857946656 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 264, 
          "faulty": "return \"LABEL\";", 
          "type": "Delete", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1029/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:20.129263023 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          StringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1029/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:20.129263023 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1504/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:55:56.603091265 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1504/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:56.603091265 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "switch (getType()) {\ncase Token.NAME:\n  return getString().isEmpty() ? false : true;\ncase Token.THIS:\nreturn true;\ncase Token.GETPROP:\nreturn getFirstChild().isQualifiedName();\ndefault :\nreturn false;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_885/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:49.892773319 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_885/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:49.892773319 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_885/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:49.892773319 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_679/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:33.712039573 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_679/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:33.712039573 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_923/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:12.992898467 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          StringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_923/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:12.996898489 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1192/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:13.713881978 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1192/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:13.713881978 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1192/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:52:13.713881978 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "case SCRIPT:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_387/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:09.586928310 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_387/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:43:09.586928310 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_787/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:47:45.480425303 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_787/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:45.484425324 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_787/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:45.484425324 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1254/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:52.390093205 -0500\n@@ -221,12 +221,12 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           return \"SUB\";\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1254/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:52.394093227 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -221,7 +214,8 @@\n     // Pick an exit node candidate.\n     if (srcBlock.isBlock()) {\n       if (!srcBlock.hasChildren()) {\n-        return;\n+        int start = 0;\n+\t\treturn;\n       }\n       exitNodeParent = srcBlock;\n       exitNode = exitNodeParent.getLastChild();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Replace", 
          "seed": "return \"SUB\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 224, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_436/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:43:43.983128235 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_436/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:43:43.983128235 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_665/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:23.979987466 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_665/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:23.983987488 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1511/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:56:01.467117704 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1511/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:01.467117704 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1511/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:01.467117704 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "switch (getType()) {\ncase Token.NAME:\n  return getString().isEmpty() ? false : true;\ncase Token.THIS:\nreturn true;\ncase Token.GETPROP:\nreturn getFirstChild().isQualifiedName();\ndefault :\nreturn false;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1217/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:27.009954571 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1217/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:52:27.009954571 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_782/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:42.728410470 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_301/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:08.570569951 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_301/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:42:08.574569975 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_307/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:13.170597153 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        final String paramName = \"jscomp_throw_param\";\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_88/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:39:29.169602168 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1733/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:58:32.739915727 -0500\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1733/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:32.739915727 -0500\n@@ -125,23 +125,17 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n-      if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n+      int start = 0;\n+\tif (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 131, 
          "faulty": "if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n  Preconditions.checkState(allCatchNodes.hasOneChild());\n  Node catchNode=allCatchNodes.getFirstChild();\n  Node catchCodeBlock=catchNode.getLastChild();\n  tryMinimizeExits(catchCodeBlock,exitType,labelName);\n}", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1615/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:09.887480096 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1615/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:09.891480117 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1615/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:09.891480117 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_576/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:20.239647603 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_912/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:07.456868460 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_912/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:07.456868460 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1455,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_520/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:44:41.799444019 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_520/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:44:41.799444019 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_226/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:41:15.146251455 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_226/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:15.146251455 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int index = -1;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1049/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:32.489330258 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1049/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:32.493330280 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1109/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:10.817538949 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1109/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:51:10.821538971 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_872/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:42.600733847 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_872/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:42.600733847 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_872/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:42.600733847 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_956/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:36.021023382 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          StringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_956/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:36.025023402 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1641/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:57:27.199570640 -0500\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1641/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:57:27.203570661 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1641/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:57:27.203570661 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1095/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:51:02.505493667 -0500\n@@ -109,7 +109,7 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      int type = n.getType();\n     }\n \n     // Just an 'if'.\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -279,12 +271,6 @@\n         // only returns without expressions.\n         return !n.hasChildren();\n       } else {\n-        if (labelName == null) {\n-          return !n.hasChildren();\n-        } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n-        }\n       }\n     }\n     return false;\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1095/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:51:02.509493689 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 282, 
          "faulty": "if (labelName == null) {\n  return !n.hasChildren();\n}\n else {\n  return n.hasChildren() && labelName.equals(n.getFirstChild().getString());\n}", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "JSType type=n.getJSType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_943/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:49:28.336981683 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_943/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:49:28.340981705 -0500\n@@ -107,7 +107,8 @@\n \n     // Just an 'exit'.\n     if (matchingExitNode(n, exitType, labelName)) {\n-      NodeUtil.removeChild(n.getParent(), n);\n+      int type = n.getType();\n+\tNodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n       return;\n     }\n@@ -129,19 +130,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +275,8 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_943/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:49:28.340981705 -0500\n@@ -958,7 +958,10 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1441,7 +1444,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      parent = null;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1454,7 +1458,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "int lineno=getLineno();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 110, 
          "faulty": "NodeUtil.removeChild(n.getParent(),n);", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1180/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:52:04.989834360 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +254,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1180/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:04.989834360 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1180/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:52:04.989834360 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_264/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:41:42.430414729 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_611/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:45:46.447787029 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_611/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:45:46.447787029 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1322/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:53:40.934355985 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1322/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:53:40.938356006 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1322/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:53:40.938356006 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_294/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:42:04.926548378 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_294/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:42:04.926548378 -0500\n@@ -129,19 +129,10 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_294/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:42:04.930548402 -0500\n@@ -1425,7 +1425,8 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n+        this.sourcePosition = sourcePosition;\n+\t\treturn \"Node tree inequality:\" +\n             \"\\nTree1:\\n\" + toStringTree() +\n             \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n             \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Delete", 
          "seed": "return new DotFormatter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1590/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:56:52.715390573 -0500\n@@ -125,7 +125,8 @@\n \n     // Just a 'try/catch/finally'.\n     if (n.isTry()) {\n-      Node tryBlock = n.getFirstChild();\n+      int type = n.getType();\n+\tNode tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1590/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:56:52.719390594 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 128, 
          "faulty": "Node tryBlock=n.getFirstChild();", 
          "type": "InsertBefore", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1233/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:52:37.046009381 -0500\n@@ -109,7 +109,8 @@\n     if (matchingExitNode(n, exitType, labelName)) {\n       NodeUtil.removeChild(n.getParent(), n);\n       compiler.reportCodeChange();\n-      return;\n+      StringBuilder builder = new StringBuilder();\n+\treturn;\n     }\n \n     // Just an 'if'.\n@@ -134,14 +135,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 112, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1035/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:50:22.941278317 -0500\n@@ -129,19 +129,11 @@\n       tryMinimizeExits(tryBlock, exitType, labelName);\n       Node allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n-        Preconditions.checkState(allCatchNodes.hasOneChild());\n+        int index = -1;\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,7 +274,9 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n+          int index = -1;\n+\t\t\tStringBuilder builder = new StringBuilder();\n+\t\treturn n.hasChildren()\n             && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1035/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:50:22.945278339 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1454,7 +1456,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 132, 
          "faulty": "Preconditions.checkState(allCatchNodes.hasOneChild());", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return getString().isEmpty() ? false : true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1721/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:58:24.459871949 -0500\n@@ -226,7 +226,210 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -254,7 +457,10 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           {\n+\t\t\t\tNode block = new Node(Token.BLOCK);\n+\t\t\t\treturn \"BREAK\";\n+\t\t\t}\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1721/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:58:24.459871949 -0500\n@@ -127,21 +127,14 @@\n     if (n.isTry()) {\n       Node tryBlock = n.getFirstChild();\n       tryMinimizeExits(tryBlock, exitType, labelName);\n-      Node allCatchNodes = NodeUtil.getCatchBlock(n);\n+      int start = 0;\n+\tNode allCatchNodes = NodeUtil.getCatchBlock(n);\n       if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n         Preconditions.checkState(allCatchNodes.hasOneChild());\n         Node catchNode = allCatchNodes.getFirstChild();\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1721/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:58:24.459871949 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        String name = getString();\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "InsertBefore", 
          "seed": "Node block=new Node(Token.BLOCK);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "String name=getString();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 130, 
          "faulty": "Node allCatchNodes=NodeUtil.getCatchBlock(n);", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_730/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:47:07.424220460 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +274,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_730/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:47:07.428220482 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_696/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:46:44.892099498 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_696/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:46:44.892099498 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n@@ -282,8 +274,6 @@\n         if (labelName == null) {\n           return !n.hasChildren();\n         } else {\n-          return n.hasChildren()\n-            && labelName.equals(n.getFirstChild().getString());\n         }\n       }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_696/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:46:44.896099518 -0500\n@@ -958,7 +958,9 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\ttoString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "Node block=script();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "return this;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return new DefaultCodingConvention();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "InsertBefore", 
          "seed": "return toDot(n,null);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 285, 
          "faulty": "return n.hasChildren() && labelName.equals(n.getFirstChild().getString());", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_812/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:48:02.760518516 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_812/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:48:02.760518516 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_812/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:48:02.760518516 -0500\n@@ -1454,7 +1454,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "int c=0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "return this.getType() == Token.BLOCK;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 142, 
          "faulty": "Node finallyBlock=n.getLastChild();", 
          "type": "Replace", 
          "seed": "int type=n.getType();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1500/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java\t2018-12-02 05:55:54.019077221 -0500\n@@ -221,7 +221,7 @@\n           case SHEQ:            return \"SHEQ\";\n           case SHNE:            return \"SHNE\";\n           case REGEXP:          return \"REGEXP\";\n-          case THROW:           return \"THROW\";\n+          case THROW:           ;\n           case IN:              return \"IN\";\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:32:30.886962148 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1500/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java\t2018-12-02 05:55:54.019077221 -0500\n@@ -134,14 +134,6 @@\n         Node catchCodeBlock = catchNode.getLastChild();\n         tryMinimizeExits(catchCodeBlock, exitType, labelName);\n       }\n-      /* Don't try to minimize the exits of finally blocks, as this\n-       * can cause problems if it changes the completion type of the finally\n-       * block. See ECMA 262 Sections 8.9 & 12.14\n-       */\n-      if (NodeUtil.hasFinally(n)) {\n-        Node finallyBlock = n.getLastChild();\n-        tryMinimizeExits(finallyBlock, exitType, labelName);\n-      }\n     }\n \n     // Just a 'label'.\n\n\n--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:32:27.906962217 -0500\n+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1500/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java\t2018-12-02 05:55:54.019077221 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        toString(sb, printSource, printAnnotations, printType);\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n@@ -1425,11 +1426,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"PARAM_LIST\";\n       }\n       return null;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 141, 
          "faulty": "if (NodeUtil.hasFinally(n)) {\n  Node finallyBlock=n.getLastChild();\n  tryMinimizeExits(finallyBlock,exitType,labelName);\n}", 
          "type": "Delete", 
          "seed": "traverseNodes(n);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "toString(sb,printSource,printAnnotations,printType);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 224, 
          "faulty": "return \"THROW\";", 
          "type": "Delete", 
          "seed": "JSDocInfo jsDocInfo=getJSDocInfo();"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"PARAM_LIST\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MinimizeExitPoints.java", 
          "line": 143, 
          "faulty": "tryMinimizeExits(finallyBlock,exitType,labelName);", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }
  ]
}