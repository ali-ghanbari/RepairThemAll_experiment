{
  "repair_end": "2018-12-02 14:41:51.086160", 
  "repair_begin": "2018-12-02 14:29:39.283525", 
  "patches": [
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java\t2018-12-02 08:29:25.201275956 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_59/patches_swi5/Patch_176/patched/tmp/RSRepair_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java\t2018-12-02 08:35:57.047714837 -0500\n@@ -39,7 +39,7 @@\n         addDefaultWarnings(options);\n         break;\n       case VERBOSE:\n-        addVerboseWarnings(options);\n+        StringBuilder builder = new StringBuilder();\n         break;\n       default:\n         throw new RuntimeException(\"Unknown warning level.\");\n\n\n--- /tmp/RSRepair_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java\t2018-12-02 08:29:25.185275956 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_59/patches_swi5/Patch_176/patched/tmp/RSRepair_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java\t2018-12-02 08:35:57.055714879 -0500\n@@ -285,12 +285,6 @@\n             // Treat all assignments to arguments as redefining the\n             // parameters itself.\n             Node obj = n.getFirstChild().getFirstChild();\n-            if (NodeUtil.isName(obj) && \"arguments\".equals(obj.getString())) {\n-              // TODO(user): More accuracy can be introduced\n-              // ie: We know exactly what arguments[x] is if x is a constant\n-              // number.\n-              escapeParameters(output);\n-            }\n           }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/WarningLevel.java", 
          "line": 42, 
          "faulty": "addVerboseWarnings(options);", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java", 
          "line": 288, 
          "faulty": "if (NodeUtil.isName(obj) && \"arguments\".equals(obj.getString())) {\n  escapeParameters(output);\n}", 
          "type": "Delete", 
          "seed": "int index=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java\t2018-12-02 08:29:25.201275956 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_59/patches_swi5/Patch_200/patched/tmp/RSRepair_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java\t2018-12-02 08:36:12.955799491 -0500\n@@ -39,7 +39,7 @@\n         addDefaultWarnings(options);\n         break;\n       case VERBOSE:\n-        addVerboseWarnings(options);\n+        ;\n         break;\n       default:\n         throw new RuntimeException(\"Unknown warning level.\");\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/WarningLevel.java", 
          "line": 42, 
          "faulty": "addVerboseWarnings(options);", 
          "type": "Delete", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java\t2018-12-02 08:29:25.201275956 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_59/patches_swi5/Patch_406/patched/tmp/RSRepair_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java\t2018-12-02 08:38:39.364635573 -0500\n@@ -39,7 +39,7 @@\n         addDefaultWarnings(options);\n         break;\n       case VERBOSE:\n-        addVerboseWarnings(options);\n+        boolean valid = false;\n         break;\n       default:\n         throw new RuntimeException(\"Unknown warning level.\");\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/WarningLevel.java", 
          "line": 42, 
          "faulty": "addVerboseWarnings(options);", 
          "type": "Replace", 
          "seed": "boolean valid=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_59/src/com/google/javascript/jscomp/CheckGlobalThis.java\t2018-12-02 08:29:25.169275955 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_59/patches_swi5/Patch_378/patched/tmp/RSRepair_Defects4J_Closure_59/src/com/google/javascript/jscomp/CheckGlobalThis.java\t2018-12-02 08:38:19.928524057 -0500\n@@ -161,8 +161,7 @@\n \n   private boolean shouldReportThis(Node n, Node parent) {\n     if (assignLhsChild != null) {\n-      // Always report a THIS on the left side of an assign.\n-      return true;\n+      return false;\n     }\n \n     // Also report a THIS with a property access.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalThis.java", 
          "line": 165, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_59/src/com/google/javascript/jscomp/DefaultPassConfig.java\t2018-12-02 08:29:25.177275955 -0500\n+++ /tmp/RSRepair_Defects4J_Closure_59/patches_swi5/Patch_453/patched/tmp/RSRepair_Defects4J_Closure_59/src/com/google/javascript/jscomp/DefaultPassConfig.java\t2018-12-02 08:39:12.720824895 -0500\n@@ -260,7 +260,7 @@\n     if (options.checkTypes &&\n         (options.enables(DiagnosticGroups.ACCESS_CONTROLS)\n          || options.enables(DiagnosticGroups.CONSTANT_PROPERTY))) {\n-      checks.add(checkAccessControls);\n+      return null;\n     }\n \n     if (options.checkGlobalNamesLevel.isOn()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/DefaultPassConfig.java", 
          "line": 263, 
          "faulty": "checks.add(checkAccessControls);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }
  ]
}