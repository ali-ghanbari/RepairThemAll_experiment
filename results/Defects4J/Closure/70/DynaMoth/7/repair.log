cd /tmp/DynaMoth_Defects4J_Closure_70;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -d64 -Xmx4g -Xms1g -XX:MaxPermSize=1024m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSClassUnloadingEnabled -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 6 \
	--source src/ \
	--classpath "build/classes/:build/test/:/tmp/DynaMoth_Defects4J_Closure_70/build/classes:/tmp/DynaMoth_Defects4J_Closure_70/build/test:/tmp/DynaMoth_Defects4J_Closure_70/lib/guava.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/ant-launcher.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/protobuf-java.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/libtrunk_rhino_parser_jarjared.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/json.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/args4j.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/junit.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/caja-r4314.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/ant.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/jsr305.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1024m; support was removed in 8.0
18:35:05.069 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src]
18:35:05.072 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Defects4J_Closure_70/build/classes/, file:/tmp/DynaMoth_Defects4J_Closure_70/build/test/, file:/tmp/DynaMoth_Defects4J_Closure_70/build/classes/, file:/tmp/DynaMoth_Defects4J_Closure_70/build/test/, file:/tmp/DynaMoth_Defects4J_Closure_70/lib/guava.jar, file:/tmp/DynaMoth_Defects4J_Closure_70/lib/ant-launcher.jar, file:/tmp/DynaMoth_Defects4J_Closure_70/lib/protobuf-java.jar, file:/tmp/DynaMoth_Defects4J_Closure_70/lib/libtrunk_rhino_parser_jarjared.jar, file:/tmp/DynaMoth_Defects4J_Closure_70/lib/json.jar, file:/tmp/DynaMoth_Defects4J_Closure_70/lib/args4j.jar, file:/tmp/DynaMoth_Defects4J_Closure_70/lib/junit.jar, file:/tmp/DynaMoth_Defects4J_Closure_70/lib/caja-r4314.jar, file:/tmp/DynaMoth_Defects4J_Closure_70/lib/ant.jar, file:/tmp/DynaMoth_Defects4J_Closure_70/lib/jsr305.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
18:35:05.072 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
18:35:05.072 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccidentalSemicolonTest, com.google.javascript.jscomp.CheckAccidentalSemicolonTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPropertyOrderTest, com.google.javascript.jscomp.CheckPropertyOrderTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.OperaCompoundAssignFixTest, com.google.javascript.jscomp.OperaCompoundAssignFixTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeSimplifyRegExpTest, com.google.javascript.jscomp.PeepholeSimplifyRegExpTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.SuspiciousPropertiesCheckTest, com.google.javascript.jscomp.SuspiciousPropertiesCheckTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.UnfoldCompoundAssignmentsTest, com.google.javascript.jscomp.UnfoldCompoundAssignmentsTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableShadowDeclarationCheckTest, com.google.javascript.jscomp.VariableShadowDeclarationCheckTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphPrunerTest, com.google.javascript.jscomp.graph.GraphPrunerTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.regex.CharRangesTest, com.google.javascript.jscomp.regex.CharRangesTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.ParserTest, com.google.javascript.rhino.ParserTest, com.google.javascript.rhino.TokenStreamTest, com.google.javascript.rhino.TokenStreamTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeTest, com.google.javascript.rhino.jstype.UnionTypeTest]
18:35:05.074 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src], projectClasspath='[Ljava.net.URL;@2ff4f00f', projectTests=[com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccidentalSemicolonTest, com.google.javascript.jscomp.CheckAccidentalSemicolonTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPropertyOrderTest, com.google.javascript.jscomp.CheckPropertyOrderTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.OperaCompoundAssignFixTest, com.google.javascript.jscomp.OperaCompoundAssignFixTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeSimplifyRegExpTest, com.google.javascript.jscomp.PeepholeSimplifyRegExpTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.SuspiciousPropertiesCheckTest, com.google.javascript.jscomp.SuspiciousPropertiesCheckTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.UnfoldCompoundAssignmentsTest, com.google.javascript.jscomp.UnfoldCompoundAssignmentsTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableShadowDeclarationCheckTest, com.google.javascript.jscomp.VariableShadowDeclarationCheckTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphPrunerTest, com.google.javascript.jscomp.graph.GraphPrunerTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.regex.CharRangesTest, com.google.javascript.jscomp.regex.CharRangesTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.ParserTest, com.google.javascript.rhino.ParserTest, com.google.javascript.rhino.TokenStreamTest, com.google.javascript.rhino.TokenStreamTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeTest, com.google.javascript.rhino.jstype.UnionTypeTest], complianceLevel=6, outputFolder=., json=true}
18:35:05.075 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 32
18:35:05.079 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 886 MB
18:35:05.079 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
18:35:05.079 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
18:35:05.079 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
18:35:05.080 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
18:35:05.080 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
18:36:03.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
18:36:03.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.google.javascript.rhino.Node:1427 which is executed by 10 tests
2433571
18:36:04.352 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
18:36:05.070 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (665 ms)
<> Total tests run: 155
<> Ignored tests: 0
<> Failed tests: 53
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)

18:36:07.057 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
18:36:07.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.google.javascript.rhino.Node:1385 which is executed by 10 tests
2433571
18:36:07.255 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
18:36:07.805 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (536 ms)
<> Total tests run: 155
<> Ignored tests: 0
<> Failed tests: 53
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)

java -cp /tmp/DynaMoth_Defects4J_Closure_70/build/classes:/tmp/DynaMoth_Defects4J_Closure_70/build/test:/tmp/DynaMoth_Defects4J_Closure_70/build/classes:/tmp/DynaMoth_Defects4J_Closure_70/build/test:/tmp/DynaMoth_Defects4J_Closure_70/lib/guava.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/ant-launcher.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/protobuf-java.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/libtrunk_rhino_parser_jarjared.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/json.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/args4j.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/junit.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/caja-r4314.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/ant.jar:/tmp/DynaMoth_Defects4J_Closure_70/lib/jsr305.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/home/tdurieux/defects4j4repair/repair_tools/nopol.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar: fr.inria.lille.repair.MethodTestRunner com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject7 com.google.javascript.rhino.NodeTest#testCheckTreeEqualsStringDifferent com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject8 com.google.javascript.jscomp.CrossModuleMethodMotionTest#testClosureVariableReads3 com.google.javascript.jscomp.CrossModuleMethodMotionTest#testTwoMethods com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject1 com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject2 com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject12 com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject10 com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject9 
18:36:09.208 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - ClassPrepareEvent
18:36:09.259 [pool-23-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] com.google.javascript.rhino.Node
18:36:09.280 [pool-23-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] com.google.javascript.rhino.Node$NodeMismatch
18:36:09.308 [pool-23-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.lang.String
18:36:09.943 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:09.947 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject7 iteration 0
18:36:09.950 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:09.951 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:09.952 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=703)
18:36:09.955 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:09.955 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:09.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:09.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:09.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:09.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:09.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:09.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:09.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:09.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:09.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:09.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:09.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:09.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:09.968 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:09.968 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:09.968 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:09.968 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:09.968 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:09.968 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:09.968 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:09.968 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:09.968 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:09.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:09.972 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:09.972 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:09.972 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:09.972 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:09.972 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:09.972 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:10.003 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:10.004 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:10.012 [pool-56-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=703)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.014 [pool-57-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=705)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.016 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:10.021 [pool-62-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=703)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.023 [pool-63-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=705)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:10.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:10.029 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:10.031 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:10.034 [pool-70-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.036 [pool-71-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.037 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:10.039 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:10.040 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:10.040 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:10.042 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:10.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:10.049 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:10.053 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:10.055 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:10.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:10.069 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:10.071 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:10.074 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:10.077 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:10.078 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:10.079 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:10.080 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:10.081 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:10.082 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:10.085 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:10.086 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:10.087 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:10.087 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:10.089 [pool-100-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.090 [pool-101-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.091 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:10.093 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:10.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:10.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:10.096 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:10.097 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:10.099 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:10.100 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:10.101 [pool-112-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.102 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:10.103 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:10.105 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:10.106 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:10.108 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:10.108 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:10.110 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:10.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:10.113 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:10.114 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:10.115 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:10.117 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:10.117 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:10.131 [pool-127-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=703)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.132 [pool-128-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=705)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.134 [pool-129-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=710)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.136 [pool-130-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=710)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.137 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:10.139 [pool-133-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:10.141 [pool-135-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.142 [pool-136-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [37]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.145 [pool-138-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=703)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.147 [pool-139-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=705)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.148 [pool-140-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=710)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.150 [pool-141-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=710)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.154 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:10.155 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:10.156 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:10.156 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:10.157 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:10.158 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:10.158 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:10.159 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:10.160 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:10.161 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:10.161 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:10.162 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:10.163 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:10.163 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:10.164 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:10.165 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:10.166 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:10.166 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:10.167 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:10.168 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:10.168 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:10.169 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:10.170 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:10.170 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:10.171 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:10.172 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:10.173 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:10.174 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:10.175 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:10.175 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:10.176 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:10.177 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:10.178 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:10.179 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:10.180 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:10.181 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:10.181 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:10.182 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:10.183 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:10.183 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:10.184 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:10.185 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:10.186 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:10.186 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:10.187 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:10.188 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:10.188 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:10.189 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:10.190 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:10.190 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:10.191 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:10.192 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:10.193 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:10.194 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:10.195 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:10.196 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:10.197 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:10.198 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:10.199 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:10.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:10.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:10.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:10.202 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:10.203 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:10.203 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:10.204 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:10.205 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:10.205 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:10.206 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:10.207 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:10.208 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:10.209 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:10.209 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:10.210 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:10.211 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:10.212 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:10.213 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:10.213 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:10.214 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:10.215 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:10.216 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:10.217 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:10.218 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:10.219 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:10.220 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:10.221 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:10.222 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:10.223 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:10.224 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:10.225 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:10.225 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:10.226 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:10.227 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:10.228 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:10.229 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:10.230 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:10.230 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:10.231 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:10.233 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:10.234 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:10.235 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:10.236 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:10.237 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:10.238 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:10.239 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:10.240 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:10.241 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:10.242 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:10.243 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:10.244 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:10.245 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:10.246 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:10.247 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:10.248 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:10.249 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:10.250 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:10.251 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:10.252 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:10.253 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:10.254 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:10.255 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:10.255 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:10.256 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:10.257 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:10.258 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:10.258 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:10.259 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:10.260 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:10.260 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:10.261 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:10.262 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:10.262 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:10.263 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:10.264 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:10.264 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:10.265 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:10.266 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:10.266 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:10.267 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:10.268 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:10.269 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:10.270 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:10.271 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:10.272 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:10.273 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:10.274 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:10.274 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:10.275 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:10.276 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:10.276 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:10.277 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:10.278 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:10.279 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:10.280 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:10.280 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:10.281 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:10.282 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:10.283 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:10.283 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:10.284 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:10.285 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:10.286 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:10.288 [pool-309-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.291 [pool-310-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.292 [pool-311-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.294 [pool-312-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.296 [pool-313-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:10.299 [pool-317-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.302 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:10.305 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:10.307 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:10.309 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:10.311 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:10.322 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:10.324 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:10.326 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:10.328 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:10.331 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:10.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:10.335 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:10.337 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:10.338 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:10.338 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:10.339 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:10.340 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:10.342 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:10.343 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:10.343 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:10.344 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:10.345 [pool-343-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.346 [pool-344-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.347 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:10.347 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:10.348 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:10.349 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:10.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:10.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:10.352 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:10.353 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:10.354 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:10.355 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:10.355 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:10.356 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:10.358 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:10.359 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:10.360 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:10.361 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:10.363 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:10.364 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:10.365 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:10.366 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:10.367 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:10.392 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:10.393 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.rhino.NodeTest#testCheckTreeEqualsStringDifferent iteration 0
18:36:10.393 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:10.393 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:10.393 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1175)
18:36:10.394 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:10.394 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:10.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:10.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:10.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:10.405 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:10.405 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:10.409 [pool-372-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1175)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.410 [pool-373-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1177)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.412 [pool-375-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.417 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.clonePropsFrom((com.google.javascript.rhino.Node) this)
18:36:10.419 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.clonePropsFrom((com.google.javascript.rhino.Node) node2)
18:36:10.422 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:10.423 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:10.423 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:10.424 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:10.425 [pool-386-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.427 [pool-387-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.427 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:10.428 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:10.428 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:10.429 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:10.430 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:10.433 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:10.435 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:10.437 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:10.438 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:10.442 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:10.445 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:10.448 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:10.449 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:10.452 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:10.453 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:10.454 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:10.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:10.457 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:10.458 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:10.459 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:10.460 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:10.460 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:10.461 [pool-416-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.462 [pool-417-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.463 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:10.464 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:10.465 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:10.465 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:10.466 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:10.467 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:10.468 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:10.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:10.470 [pool-428-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:10.471 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:10.472 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:10.474 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:10.475 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:10.475 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:10.477 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:10.477 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:10.478 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:10.479 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:10.480 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:10.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:10.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:10.493 [pool-443-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1175)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.495 [pool-444-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1177)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.497 [pool-446-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.498 [pool-447-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.499 [pool-449-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.502 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.clonePropsFrom((com.google.javascript.rhino.Node) this)
18:36:10.504 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.clonePropsFrom((com.google.javascript.rhino.Node) node2)
18:36:10.509 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:10.510 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:10.511 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:10.511 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:10.512 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:10.513 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:10.513 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:10.514 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:10.515 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:10.515 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:10.516 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:10.516 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:10.517 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:10.518 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:10.518 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:10.519 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:10.520 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:10.520 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:10.521 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:10.522 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:10.523 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:10.523 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:10.524 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:10.525 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:10.525 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:10.526 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:10.526 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:10.527 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:10.528 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:10.528 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:10.529 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:10.530 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:10.531 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:10.531 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:10.532 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:10.533 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:10.533 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:10.534 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:10.535 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:10.536 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:10.536 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:10.537 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:10.538 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:10.538 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:10.539 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:10.539 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:10.540 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:10.541 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:10.542 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:10.542 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:10.543 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:10.544 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:10.545 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:10.545 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:10.546 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:10.547 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:10.548 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:10.548 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:10.549 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:10.550 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:10.550 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:10.551 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:10.552 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:10.552 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:10.553 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:10.554 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:10.554 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:10.555 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:10.556 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:10.556 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:10.557 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:10.558 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:10.559 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:10.559 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:10.560 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:10.561 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:10.561 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:10.562 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:10.563 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:10.563 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:10.564 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:10.565 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:10.566 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:10.566 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:10.567 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:10.567 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:10.568 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:10.569 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:10.569 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:10.570 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:10.571 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:10.571 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:10.572 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:10.573 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:10.573 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:10.574 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:10.575 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:10.575 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:10.576 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:10.577 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:10.577 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:10.578 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:10.579 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:10.579 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:10.580 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:10.581 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:10.581 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:10.582 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:10.583 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:10.583 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:10.584 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:10.585 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:10.586 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:10.586 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:10.587 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:10.588 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:10.588 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:10.589 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:10.590 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:10.590 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:10.591 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:10.592 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:10.593 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:10.594 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:10.594 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:10.595 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:10.596 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:10.597 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:10.597 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:10.598 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:10.599 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:10.600 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:10.601 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:10.602 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:10.602 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:10.603 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:10.604 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:10.604 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:10.605 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:10.606 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:10.606 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:10.607 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:10.608 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:10.608 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:10.609 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:10.610 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:10.611 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:10.611 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:10.612 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:10.613 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:10.614 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:10.615 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:10.616 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:10.616 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:10.617 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:10.618 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:10.618 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:10.619 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:10.619 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:10.620 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:10.621 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:10.621 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:10.623 [pool-619-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.624 [pool-620-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.626 [pool-621-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.627 [pool-622-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.628 [pool-623-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.629 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:10.632 [pool-627-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.635 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:10.637 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:10.640 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:10.642 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:10.644 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:10.646 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:10.647 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:10.647 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:10.649 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:10.650 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:10.651 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:10.651 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:10.652 [pool-645-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.653 [pool-646-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.654 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:10.655 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:10.656 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:10.656 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:10.657 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:10.657 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:10.658 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:10.659 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:10.660 [pool-657-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:10.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:10.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:10.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:10.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:10.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:10.666 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:10.667 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:10.668 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:10.668 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:10.669 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:10.695 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:10.696 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject8 iteration 0
18:36:10.696 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:10.696 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:10.697 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1227)
18:36:10.697 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:10.697 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:10.700 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:10.707 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:10.708 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:10.711 [pool-674-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1227)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.712 [pool-675-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1229)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.713 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:10.727 [pool-680-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1227)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.729 [pool-681-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1229)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:10.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:10.733 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:10.733 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:10.735 [pool-688-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.736 [pool-689-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.736 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:10.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:10.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:10.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:10.739 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:10.742 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:10.744 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:10.746 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:10.748 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:10.753 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:10.756 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:10.759 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:10.761 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:10.763 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:10.765 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:10.766 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:10.766 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:10.767 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:10.768 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:10.769 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:10.770 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:10.771 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:10.771 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:10.772 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:10.773 [pool-718-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.774 [pool-719-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.775 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:10.777 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:10.777 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:10.778 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:10.779 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:10.779 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:10.781 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:10.781 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:10.782 [pool-730-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.783 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:10.784 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:10.785 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:10.786 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:10.787 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:10.787 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:10.789 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:10.789 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:10.790 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:10.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:10.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:10.804 [pool-745-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1227)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.806 [pool-746-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1229)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.808 [pool-747-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1231)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.809 [pool-748-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1231)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:10.812 [pool-751-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.813 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:10.813 [pool-753-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.814 [pool-754-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [37]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.817 [pool-756-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1227)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.819 [pool-757-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1229)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.821 [pool-758-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1231)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.823 [pool-759-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1231)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.827 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:10.827 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:10.828 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:10.829 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:10.829 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:10.830 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:10.831 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:10.831 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:10.832 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:10.832 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:10.833 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:10.834 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:10.834 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:10.835 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:10.836 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:10.836 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:10.837 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:10.837 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:10.838 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:10.839 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:10.839 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:10.840 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:10.841 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:10.841 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:10.842 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:10.842 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:10.843 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:10.844 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:10.844 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:10.845 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:10.846 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:10.846 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:10.847 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:10.847 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:10.848 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:10.849 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:10.849 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:10.850 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:10.851 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:10.851 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:10.852 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:10.852 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:10.853 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:10.854 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:10.854 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:10.855 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:10.856 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:10.856 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:10.857 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:10.858 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:10.858 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:10.859 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:10.859 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:10.860 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:10.861 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:10.861 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:10.862 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:10.863 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:10.863 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:10.864 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:10.865 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:10.865 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:10.866 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:10.867 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:10.867 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:10.868 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:10.869 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:10.869 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:10.870 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:10.871 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:10.871 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:10.872 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:10.873 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:10.873 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:10.874 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:10.875 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:10.875 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:10.876 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:10.877 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:10.877 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:10.878 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:10.879 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:10.879 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:10.880 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:10.881 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:10.881 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:10.882 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:10.883 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:10.883 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:10.884 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:10.885 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:10.885 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:10.886 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:10.886 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:10.887 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:10.888 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:10.888 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:10.889 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:10.890 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:10.890 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:10.891 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:10.891 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:10.892 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:10.893 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:10.894 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:10.894 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:10.895 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:10.896 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:10.896 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:10.897 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:10.898 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:10.898 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:10.899 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:10.899 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:10.900 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:10.901 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:10.901 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:10.902 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:10.903 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:10.903 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:10.904 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:10.905 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:10.905 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:10.906 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:10.907 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:10.907 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:10.908 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:10.908 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:10.909 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:10.910 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:10.910 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:10.911 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:10.912 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:10.912 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:10.913 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:10.914 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:10.914 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:10.915 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:10.916 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:10.916 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:10.917 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:10.917 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:10.918 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:10.919 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:10.919 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:10.920 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:10.921 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:10.921 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:10.922 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:10.923 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:10.923 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:10.924 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:10.925 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:10.925 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:10.926 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:10.926 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:10.927 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:10.928 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:10.928 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:10.929 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:10.930 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:10.930 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:10.932 [pool-927-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.933 [pool-928-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.934 [pool-929-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.936 [pool-930-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.937 [pool-931-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.938 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:10.938 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:10.940 [pool-935-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.942 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:10.946 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:10.947 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:10.949 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:10.951 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:10.953 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:10.955 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:10.956 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:10.958 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:10.960 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:10.962 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:10.963 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:10.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:10.966 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:10.966 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:10.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:10.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:10.968 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:10.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:10.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:10.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:10.971 [pool-961-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.972 [pool-962-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.972 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:10.973 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:10.974 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:10.974 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:10.975 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:10.975 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:10.976 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:10.977 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:10.978 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:10.978 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:10.979 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:10.980 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:10.981 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:10.982 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:10.982 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:10.983 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:10.984 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:10.985 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:10.985 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:10.986 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:10.986 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:11.021 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:11.023 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.CrossModuleMethodMotionTest#testClosureVariableReads3 iteration 0
18:36:11.023 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:11.023 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:11.023 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1318)
18:36:11.023 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:11.024 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:11.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:11.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:11.029 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:11.029 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:11.029 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:11.029 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:11.029 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:11.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:11.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:11.037 [pool-990-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1318)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.038 [pool-991-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1320)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.039 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:11.040 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 1)
18:36:11.043 [pool-996-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1318)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.044 [pool-997-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1320)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.046 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:11.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:11.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:11.048 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:11.049 [pool-1004-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.050 [pool-1005-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.051 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:11.051 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:11.052 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:11.052 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:11.053 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:11.056 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:11.057 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:11.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:11.077 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:11.081 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:11.085 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:11.087 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:11.089 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:11.092 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:11.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:11.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:11.096 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:11.096 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:11.097 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:11.099 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:11.100 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:11.101 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:11.102 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:11.102 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:11.103 [pool-1034-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.104 [pool-1035-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.105 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:11.107 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:11.108 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:11.109 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:11.109 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:11.110 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:11.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:11.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:11.113 [pool-1046-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.114 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:11.115 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:11.116 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:11.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:11.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:11.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:11.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:11.121 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:11.122 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:11.123 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:11.123 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:11.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:11.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:11.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:11.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:11.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:11.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:11.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:11.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:11.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:11.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:11.136 [pool-1061-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1318)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.138 [pool-1062-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1320)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.140 [pool-1063-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1322)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.141 [pool-1064-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1323)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.142 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:11.143 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 1)
18:36:11.144 [pool-1067-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.145 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:11.146 [pool-1069-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.146 [pool-1070-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [37]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.147 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.TARGET_PROP)
18:36:11.148 [pool-1072-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [5]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.149 [pool-1073-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.152 [pool-1074-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1318)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.153 [pool-1075-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1320)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.155 [pool-1076-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1322)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.156 [pool-1077-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1323)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.161 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:11.162 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:11.162 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:11.163 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:11.164 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:11.164 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:11.165 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:11.166 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:11.166 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:11.167 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:11.168 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:11.168 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:11.169 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:11.170 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:11.170 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:11.171 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:11.172 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:11.172 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:11.173 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:11.173 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:11.174 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:11.175 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:11.175 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:11.176 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:11.177 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:11.178 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:11.178 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:11.179 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:11.180 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:11.181 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:11.181 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:11.182 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:11.183 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:11.183 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:11.184 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:11.185 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:11.185 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:11.186 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:11.187 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:11.187 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:11.188 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:11.188 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:11.189 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:11.190 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:11.190 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:11.191 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:11.192 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:11.192 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:11.193 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:11.194 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:11.194 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:11.195 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:11.196 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:11.196 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:11.197 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:11.198 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:11.198 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:11.199 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:11.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:11.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:11.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:11.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:11.202 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:11.203 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:11.203 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:11.204 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:11.205 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:11.206 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:11.206 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:11.207 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:11.207 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:11.208 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:11.209 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:11.210 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:11.210 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:11.211 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:11.211 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:11.212 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:11.213 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:11.213 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:11.214 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:11.215 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:11.215 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:11.216 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:11.217 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:11.217 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:11.218 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:11.219 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:11.219 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:11.220 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:11.221 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:11.222 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:11.222 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:11.223 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:11.224 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:11.224 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:11.225 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:11.226 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:11.226 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:11.227 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:11.228 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:11.228 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:11.229 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:11.229 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:11.230 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:11.231 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:11.231 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:11.232 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:11.233 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:11.233 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:11.234 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:11.235 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:11.235 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:11.236 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:11.237 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:11.237 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:11.238 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:11.239 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:11.239 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:11.240 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:11.241 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:11.242 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:11.242 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:11.243 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:11.243 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:11.244 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:11.245 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:11.245 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:11.246 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:11.247 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:11.247 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:11.248 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:11.249 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:11.249 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:11.250 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:11.251 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:11.251 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:11.252 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:11.253 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:11.253 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:11.254 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:11.255 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:11.255 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:11.256 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:11.257 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:11.258 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:11.258 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:11.259 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:11.259 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:11.260 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:11.261 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:11.262 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:11.262 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:11.263 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:11.263 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:11.264 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:11.265 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:11.265 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:11.266 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:11.267 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:11.267 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:11.268 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:11.269 [pool-1245-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.271 [pool-1246-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.272 [pool-1247-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.273 [pool-1248-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.274 [pool-1249-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.275 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:11.275 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:11.277 [pool-1253-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.279 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:11.282 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:11.284 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:11.286 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:11.288 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:11.290 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:11.292 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:11.294 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:11.296 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:11.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:11.300 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:11.303 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:11.304 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:11.305 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:11.306 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:11.306 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:11.307 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:11.308 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:11.309 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:11.310 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:11.310 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:11.311 [pool-1279-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.312 [pool-1280-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.313 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:11.314 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:11.314 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:11.315 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:11.315 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:11.316 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:11.317 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:11.318 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:11.319 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:11.320 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:11.320 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:11.321 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:11.322 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:11.323 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:11.324 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:11.324 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:11.325 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:11.326 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:11.327 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:11.327 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:11.328 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:11.345 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:11.346 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.CrossModuleMethodMotionTest#testTwoMethods iteration 0
18:36:11.347 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:11.347 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:11.347 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1386)
18:36:11.347 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:11.347 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:11.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:11.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:11.356 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:11.356 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:11.359 [pool-1308-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1386)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.360 [pool-1309-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1388)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.361 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:11.362 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 1)
18:36:11.366 [pool-1314-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1386)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.368 [pool-1315-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1388)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.370 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:11.370 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:11.371 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:11.372 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:11.373 [pool-1322-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.374 [pool-1323-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.375 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:11.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:11.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:11.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:11.378 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:11.381 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:11.383 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:11.385 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:11.386 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:11.390 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:11.394 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:11.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:11.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:11.402 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:11.404 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:11.404 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:11.405 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:11.406 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:11.407 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:11.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:11.410 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:11.447 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:11.448 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:11.449 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:11.450 [pool-1352-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.451 [pool-1353-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.452 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:11.453 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:11.454 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:11.454 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:11.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:11.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:11.457 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:11.457 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:11.458 [pool-1364-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.459 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:11.459 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:11.461 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:11.462 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:11.462 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:11.463 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:11.464 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:11.465 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:11.466 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:11.466 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:11.467 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:11.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:11.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:11.480 [pool-1379-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1386)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.481 [pool-1380-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1388)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.483 [pool-1381-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1390)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.485 [pool-1382-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1391)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.486 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:11.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 1)
18:36:11.488 [pool-1385-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.489 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:11.490 [pool-1387-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.491 [pool-1388-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [37]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.492 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.TARGET_PROP)
18:36:11.493 [pool-1390-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [5]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.494 [pool-1391-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.496 [pool-1392-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1386)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.498 [pool-1393-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1388)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.499 [pool-1394-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1390)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.501 [pool-1395-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1391)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.506 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:11.506 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:11.507 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:11.507 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:11.508 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:11.509 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:11.509 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:11.510 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:11.511 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:11.512 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:11.512 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:11.513 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:11.514 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:11.514 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:11.515 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:11.516 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:11.517 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:11.517 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:11.518 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:11.519 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:11.520 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:11.520 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:11.521 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:11.522 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:11.523 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:11.523 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:11.524 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:11.525 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:11.526 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:11.527 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:11.527 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:11.528 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:11.529 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:11.530 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:11.530 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:11.531 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:11.532 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:11.533 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:11.533 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:11.534 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:11.535 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:11.536 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:11.536 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:11.537 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:11.538 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:11.539 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:11.539 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:11.540 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:11.541 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:11.542 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:11.543 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:11.543 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:11.544 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:11.545 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:11.546 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:11.546 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:11.547 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:11.548 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:11.549 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:11.550 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:11.550 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:11.551 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:11.552 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:11.552 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:11.553 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:11.554 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:11.554 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:11.555 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:11.556 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:11.557 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:11.557 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:11.558 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:11.559 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:11.560 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:11.560 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:11.561 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:11.562 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:11.562 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:11.563 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:11.564 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:11.565 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:11.566 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:11.566 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:11.567 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:11.568 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:11.568 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:11.569 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:11.570 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:11.570 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:11.571 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:11.572 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:11.572 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:11.573 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:11.574 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:11.575 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:11.575 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:11.576 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:11.577 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:11.577 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:11.578 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:11.579 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:11.579 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:11.580 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:11.581 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:11.581 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:11.582 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:11.583 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:11.583 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:11.584 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:11.585 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:11.586 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:11.586 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:11.587 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:11.588 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:11.588 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:11.589 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:11.590 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:11.590 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:11.591 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:11.592 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:11.592 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:11.593 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:11.594 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:11.594 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:11.595 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:11.596 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:11.596 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:11.597 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:11.598 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:11.599 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:11.599 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:11.600 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:11.601 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:11.601 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:11.602 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:11.603 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:11.603 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:11.604 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:11.605 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:11.605 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:11.606 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:11.607 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:11.607 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:11.608 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:11.609 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:11.609 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:11.610 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:11.611 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:11.612 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:11.612 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:11.613 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:11.614 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:11.614 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:11.615 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:11.616 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:11.616 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:11.617 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:11.618 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:11.618 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:11.619 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:11.620 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:11.620 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:11.622 [pool-1563-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.623 [pool-1564-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.624 [pool-1565-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.625 [pool-1566-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.626 [pool-1567-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.627 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:11.628 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:11.630 [pool-1571-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.632 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:11.635 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:11.637 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:11.639 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:11.641 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:11.643 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:11.645 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:11.647 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:11.649 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:11.652 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:11.653 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:11.655 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:11.657 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:11.658 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:11.659 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:11.659 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:11.660 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:11.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:11.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:11.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:11.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:11.664 [pool-1597-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.665 [pool-1598-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.666 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:11.666 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:11.667 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:11.668 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:11.668 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:11.669 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:11.670 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:11.671 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:11.672 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:11.673 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:11.674 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:11.674 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:11.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:11.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:11.678 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:11.678 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:11.680 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:11.680 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:11.681 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:11.682 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:11.683 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:11.698 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:11.699 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject1 iteration 0
18:36:11.699 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:11.699 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:11.699 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1443)
18:36:11.699 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:11.699 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:11.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:11.703 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:11.707 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:11.708 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:11.711 [pool-1626-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1443)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.712 [pool-1627-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1445)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.713 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:11.716 [pool-1632-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1443)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.718 [pool-1633-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1445)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.720 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:11.720 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:11.721 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:11.721 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:11.738 [pool-1640-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.739 [pool-1641-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.740 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:11.741 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:11.741 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:11.742 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:11.743 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:11.746 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:11.748 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:11.750 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:11.752 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:11.755 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:11.758 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:11.760 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:11.762 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:11.764 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:11.766 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:11.767 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:11.767 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:11.768 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:11.768 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:11.770 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:11.770 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:11.771 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:11.772 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:11.772 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:11.773 [pool-1670-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.774 [pool-1671-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.774 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:11.776 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:11.776 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:11.777 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:11.777 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:11.778 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:11.779 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:11.780 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:11.781 [pool-1682-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.782 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:11.782 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:11.783 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:11.784 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:11.785 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:11.786 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:11.787 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:11.788 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:11.788 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:11.789 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:11.790 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:11.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:11.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:11.800 [pool-1697-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1443)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.801 [pool-1698-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1445)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.803 [pool-1699-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1447)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.804 [pool-1700-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1447)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:11.806 [pool-1703-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.807 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:11.808 [pool-1705-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.808 [pool-1706-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [37]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.811 [pool-1708-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1443)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.812 [pool-1709-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1445)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.814 [pool-1710-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1447)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.815 [pool-1711-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1447)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.819 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:11.820 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:11.820 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:11.821 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:11.821 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:11.822 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:11.823 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:11.823 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:11.824 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:11.824 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:11.825 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:11.826 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:11.827 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:11.827 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:11.828 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:11.829 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:11.829 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:11.830 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:11.831 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:11.831 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:11.832 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:11.833 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:11.834 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:11.834 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:11.835 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:11.835 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:11.836 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:11.837 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:11.837 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:11.838 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:11.839 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:11.839 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:11.840 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:11.841 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:11.841 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:11.842 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:11.842 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:11.843 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:11.844 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:11.844 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:11.845 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:11.845 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:11.846 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:11.847 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:11.847 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:11.848 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:11.849 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:11.850 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:11.851 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:11.852 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:11.852 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:11.853 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:11.854 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:11.855 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:11.855 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:11.856 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:11.857 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:11.858 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:11.858 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:11.859 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:11.860 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:11.861 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:11.862 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:11.862 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:11.863 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:11.864 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:11.865 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:11.865 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:11.866 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:11.867 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:11.868 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:11.869 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:11.869 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:11.870 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:11.871 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:11.872 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:11.872 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:11.873 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:11.874 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:11.875 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:11.875 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:11.876 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:11.877 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:11.878 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:11.879 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:11.879 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:11.880 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:11.881 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:11.881 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:11.882 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:11.883 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:11.884 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:11.884 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:11.885 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:11.886 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:11.886 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:11.887 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:11.888 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:11.889 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:11.889 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:11.890 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:11.891 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:11.892 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:11.892 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:11.893 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:11.894 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:11.895 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:11.895 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:11.896 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:11.897 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:11.897 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:11.898 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:11.899 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:11.900 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:11.900 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:11.901 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:11.902 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:11.903 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:11.903 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:11.904 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:11.905 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:11.905 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:11.906 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:11.907 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:11.908 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:11.908 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:11.909 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:11.910 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:11.911 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:11.911 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:11.912 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:11.913 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:11.914 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:11.914 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:11.915 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:11.916 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:11.916 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:11.917 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:11.918 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:11.918 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:11.919 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:11.920 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:11.921 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:11.922 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:11.922 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:11.923 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:11.924 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:11.925 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:11.926 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:11.926 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:11.927 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:11.928 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:11.929 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:11.929 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:11.930 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:11.932 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:11.933 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:11.934 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:11.934 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:11.935 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:11.936 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:11.937 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:11.938 [pool-1879-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.939 [pool-1880-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.940 [pool-1881-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.941 [pool-1882-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.943 [pool-1883-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.944 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:11.945 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:11.946 [pool-1887-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.948 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:11.951 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:11.953 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:11.954 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:11.956 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:11.959 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:11.961 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:11.963 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:11.964 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:11.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:11.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:11.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:11.973 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:11.974 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:11.974 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:11.975 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:11.976 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:11.977 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:11.978 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:11.979 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:11.980 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:11.981 [pool-1913-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.982 [pool-1914-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:11.982 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:11.983 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:11.984 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:11.985 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:11.985 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:11.986 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:11.987 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:11.989 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:11.989 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:11.990 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:11.991 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:11.992 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:11.993 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:11.994 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:11.995 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:12.013 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:12.015 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:12.016 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:12.016 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:12.017 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:12.018 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:12.028 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:12.029 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject2 iteration 0
18:36:12.030 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:12.030 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:12.030 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1494)
18:36:12.030 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:12.030 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:12.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:12.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:12.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:12.041 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:12.042 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:12.045 [pool-1942-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1494)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.046 [pool-1943-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1496)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:12.051 [pool-1948-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1494)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.052 [pool-1949-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1496)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.055 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:12.055 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:12.056 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:12.057 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:12.058 [pool-1956-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.059 [pool-1957-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:12.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:12.061 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:12.062 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:12.062 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:12.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:12.067 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:12.069 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:12.070 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:12.074 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:12.077 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:12.079 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:12.081 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:12.083 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:12.085 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:12.086 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:12.086 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:12.087 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:12.087 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:12.089 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:12.090 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:12.090 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:12.091 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:12.091 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:12.092 [pool-1986-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.093 [pool-1987-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:12.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:12.096 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:12.096 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:12.097 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:12.098 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:12.099 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:12.099 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:12.100 [pool-1998-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.101 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:12.102 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:12.103 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:12.104 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:12.105 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:12.105 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:12.107 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:12.107 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:12.108 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:12.109 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:12.109 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:12.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:12.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:12.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:12.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:12.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:12.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:12.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:12.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:12.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:12.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:12.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:12.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:12.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:12.120 [pool-2013-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1494)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.121 [pool-2014-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1496)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.122 [pool-2015-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1498)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.124 [pool-2016-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1498)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:12.126 [pool-2019-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.127 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:12.128 [pool-2021-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.129 [pool-2022-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [37]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.131 [pool-2024-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1494)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.133 [pool-2025-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1496)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.134 [pool-2026-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1498)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.136 [pool-2027-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1498)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:12.141 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:12.141 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:12.142 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:12.143 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:12.143 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:12.144 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:12.145 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:12.145 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:12.146 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:12.147 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:12.148 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:12.149 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:12.149 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:12.150 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:12.151 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:12.152 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:12.152 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:12.153 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:12.154 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:12.155 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:12.156 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:12.156 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:12.157 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:12.158 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:12.159 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:12.160 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:12.160 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:12.161 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:12.162 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:12.162 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:12.163 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:12.164 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:12.164 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:12.165 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:12.166 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:12.166 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:12.167 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:12.167 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:12.168 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:12.169 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:12.170 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:12.170 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:12.171 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:12.171 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:12.172 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:12.173 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:12.174 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:12.174 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:12.175 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:12.176 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:12.176 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:12.177 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:12.178 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:12.178 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:12.179 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:12.180 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:12.180 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:12.181 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:12.181 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:12.182 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:12.183 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:12.183 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:12.184 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:12.185 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:12.185 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:12.186 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:12.187 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:12.187 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:12.188 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:12.189 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:12.189 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:12.190 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:12.191 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:12.191 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:12.192 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:12.193 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:12.193 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:12.194 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:12.195 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:12.196 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:12.196 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:12.197 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:12.198 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:12.199 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:12.199 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:12.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:12.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:12.202 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:12.202 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:12.203 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:12.204 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:12.204 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:12.205 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:12.206 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:12.207 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:12.207 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:12.208 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:12.209 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:12.209 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:12.210 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:12.211 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:12.211 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:12.212 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:12.213 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:12.213 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:12.214 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:12.215 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:12.215 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:12.216 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:12.217 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:12.218 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:12.218 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:12.219 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:12.220 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:12.220 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:12.221 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:12.222 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:12.222 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:12.223 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:12.224 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:12.224 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:12.225 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:12.226 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:12.226 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:12.227 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:12.228 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:12.228 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:12.229 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:12.230 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:12.230 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:12.231 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:12.232 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:12.232 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:12.233 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:12.234 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:12.234 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:12.235 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:12.235 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:12.236 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:12.237 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:12.238 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:12.238 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:12.246 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:12.246 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:12.247 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:12.248 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:12.248 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:12.249 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:12.249 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:12.250 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:12.251 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:12.251 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:12.252 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:12.252 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:12.253 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:12.254 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:12.254 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:12.255 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:12.256 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:12.256 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:12.257 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:12.258 [pool-2195-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.259 [pool-2196-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.261 [pool-2197-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.262 [pool-2198-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.263 [pool-2199-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.264 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:12.264 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:12.266 [pool-2203-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.268 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:12.271 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:12.273 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:12.275 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:12.277 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:12.279 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:12.281 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:12.283 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:12.284 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:12.287 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:12.288 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:12.290 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:12.292 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:12.293 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:12.294 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:12.294 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:12.295 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:12.296 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:12.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:12.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:12.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:12.299 [pool-2229-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.300 [pool-2230-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.301 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:12.302 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:12.303 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:12.303 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:12.304 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:12.305 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:12.305 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:12.307 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:12.307 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:12.308 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:12.308 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:12.309 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:12.310 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:12.312 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:12.312 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:12.313 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:12.314 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:12.315 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:12.316 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:12.317 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:12.317 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:12.328 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:12.329 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject12 iteration 0
18:36:12.329 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:12.329 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:12.329 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1545)
18:36:12.330 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:12.330 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:12.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:12.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:12.339 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:12.339 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:12.342 [pool-2258-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1545)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.343 [pool-2259-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1547)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.344 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:12.348 [pool-2264-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1545)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.350 [pool-2265-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1547)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.352 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:12.353 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:12.353 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:12.354 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:12.355 [pool-2272-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.356 [pool-2273-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.357 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:12.357 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:12.358 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:12.359 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:12.359 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:12.362 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:12.364 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:12.367 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:12.368 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:12.372 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:12.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:12.378 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:12.380 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:12.382 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:12.384 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:12.385 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:12.386 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:12.386 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:12.387 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:12.388 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:12.389 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:12.390 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:12.390 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:12.391 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:12.392 [pool-2302-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.393 [pool-2303-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.394 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:12.395 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:12.395 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:12.396 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:12.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:12.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:12.398 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:12.399 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:12.400 [pool-2314-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.400 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:12.401 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:12.402 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:12.404 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:12.404 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:12.405 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:12.406 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:12.407 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:12.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:12.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:12.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:12.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:12.419 [pool-2329-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1545)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.420 [pool-2330-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1547)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.422 [pool-2331-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1549)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.423 [pool-2332-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1549)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.424 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:12.426 [pool-2335-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.427 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:12.427 [pool-2337-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.428 [pool-2338-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [37]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.431 [pool-2340-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1545)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.433 [pool-2341-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1547)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.434 [pool-2342-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1549)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.436 [pool-2343-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1549)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.440 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:12.441 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:12.441 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:12.442 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:12.443 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:12.444 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:12.444 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:12.445 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:12.446 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:12.446 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:12.447 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:12.448 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:12.449 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:12.449 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:12.450 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:12.451 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:12.451 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:12.452 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:12.453 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:12.453 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:12.454 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:12.463 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:12.464 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:12.465 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:12.465 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:12.466 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:12.467 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:12.468 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:12.468 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:12.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:12.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:12.471 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:12.472 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:12.472 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:12.473 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:12.474 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:12.475 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:12.475 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:12.476 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:12.477 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:12.478 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:12.478 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:12.479 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:12.480 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:12.480 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:12.481 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:12.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:12.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:12.484 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:12.485 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:12.485 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:12.486 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:12.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:12.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:12.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:12.489 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:12.490 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:12.491 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:12.492 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:12.492 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:12.493 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:12.494 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:12.495 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:12.495 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:12.496 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:12.497 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:12.498 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:12.499 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:12.499 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:12.500 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:12.501 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:12.502 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:12.502 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:12.503 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:12.504 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:12.505 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:12.505 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:12.506 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:12.507 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:12.507 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:12.508 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:12.509 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:12.510 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:12.511 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:12.511 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:12.512 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:12.513 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:12.514 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:12.515 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:12.515 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:12.516 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:12.517 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:12.518 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:12.519 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:12.519 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:12.520 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:12.521 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:12.522 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:12.522 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:12.523 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:12.524 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:12.525 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:12.525 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:12.526 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:12.527 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:12.528 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:12.528 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:12.529 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:12.530 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:12.531 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:12.532 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:12.532 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:12.533 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:12.534 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:12.535 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:12.535 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:12.536 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:12.537 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:12.538 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:12.539 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:12.539 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:12.540 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:12.541 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:12.542 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:12.542 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:12.543 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:12.544 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:12.545 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:12.545 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:12.546 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:12.547 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:12.548 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:12.549 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:12.549 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:12.550 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:12.551 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:12.551 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:12.552 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:12.553 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:12.554 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:12.554 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:12.555 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:12.556 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:12.557 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:12.557 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:12.558 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:12.559 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:12.560 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:12.561 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:12.561 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:12.562 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:12.563 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:12.564 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:12.564 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:12.565 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:12.566 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:12.567 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:12.567 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:12.568 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:12.569 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:12.570 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:12.571 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:12.572 [pool-2511-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.573 [pool-2512-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.575 [pool-2513-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.576 [pool-2514-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.577 [pool-2515-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.578 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:12.579 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:12.581 [pool-2519-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.583 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:12.587 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:12.588 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:12.590 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:12.592 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:12.594 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:12.596 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:12.597 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:12.599 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:12.602 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:12.604 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:12.605 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:12.607 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:12.608 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:12.608 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:12.609 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:12.610 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:12.611 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:12.612 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:12.613 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:12.613 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:12.614 [pool-2545-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.615 [pool-2546-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.616 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:12.617 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:12.617 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:12.618 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:12.619 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:12.620 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:12.620 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:12.622 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:12.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:12.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:12.624 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:12.625 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:12.626 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:12.627 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:12.628 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:12.629 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:12.630 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:12.643 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:12.644 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:12.645 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:12.646 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:12.657 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:12.658 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject10 iteration 0
18:36:12.658 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:12.658 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:12.658 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1596)
18:36:12.659 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:12.659 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:12.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:12.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:12.668 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:12.669 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:12.672 [pool-2574-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1596)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.673 [pool-2575-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1598)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.674 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:12.678 [pool-2580-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1596)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.679 [pool-2581-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1598)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.681 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:12.682 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:12.683 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:12.683 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:12.685 [pool-2588-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.686 [pool-2589-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.686 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:12.687 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:12.688 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:12.688 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:12.689 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:12.692 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:12.693 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:12.695 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:12.697 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:12.700 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:12.704 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:12.706 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:12.708 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:12.710 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:12.712 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:12.712 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:12.713 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:12.714 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:12.714 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:12.715 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:12.716 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:12.717 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:12.718 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:12.718 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:12.719 [pool-2618-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.720 [pool-2619-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.720 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:12.722 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:12.722 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:12.723 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:12.724 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:12.724 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:12.726 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:12.726 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:12.727 [pool-2630-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.728 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:12.728 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:12.729 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:12.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:12.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:12.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:12.733 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:12.734 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:12.734 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:12.735 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:12.736 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:12.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:12.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:12.746 [pool-2645-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1596)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.747 [pool-2646-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1598)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.749 [pool-2647-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1600)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.750 [pool-2648-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1600)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.751 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:12.753 [pool-2651-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.753 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:12.754 [pool-2653-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.755 [pool-2654-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [37]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.758 [pool-2656-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1596)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.759 [pool-2657-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1598)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.761 [pool-2658-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1600)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.762 [pool-2659-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1600)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.766 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:12.767 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:12.767 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:12.768 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:12.769 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:12.769 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:12.770 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:12.771 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:12.771 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:12.772 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:12.772 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:12.773 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:12.774 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:12.774 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:12.775 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:12.775 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:12.776 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:12.777 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:12.778 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:12.778 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:12.779 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:12.780 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:12.780 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:12.781 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:12.782 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:12.782 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:12.783 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:12.784 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:12.784 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:12.785 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:12.786 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:12.786 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:12.787 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:12.788 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:12.788 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:12.789 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:12.790 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:12.790 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:12.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:12.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:12.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:12.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:12.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:12.795 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:12.796 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:12.797 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:12.798 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:12.798 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:12.799 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:12.799 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:12.800 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:12.801 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:12.801 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:12.802 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:12.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:12.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:12.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:12.806 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:12.806 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:12.807 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:12.808 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:12.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:12.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:12.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:12.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:12.812 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:12.813 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:12.814 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:12.814 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:12.815 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:12.816 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:12.817 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:12.818 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:12.819 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:12.819 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:12.820 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:12.821 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:12.821 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:12.822 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:12.823 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:12.823 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:12.824 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:12.825 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:12.826 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:12.826 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:12.827 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:12.828 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:12.828 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:12.829 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:12.830 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:12.830 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:12.831 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:12.831 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:12.832 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:12.833 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:12.833 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:12.834 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:12.835 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:12.846 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:12.846 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:12.847 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:12.848 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:12.848 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:12.849 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:12.850 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:12.850 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:12.851 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:12.851 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:12.852 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:12.853 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:12.853 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:12.854 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:12.855 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:12.855 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:12.856 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:12.857 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:12.857 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:12.858 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:12.858 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:12.859 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:12.860 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:12.860 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:12.861 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:12.862 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:12.862 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:12.863 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:12.863 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:12.864 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:12.865 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:12.865 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:12.866 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:12.867 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:12.867 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:12.868 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:12.868 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:12.869 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:12.870 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:12.870 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:12.871 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:12.872 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:12.872 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:12.873 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:12.873 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:12.874 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:12.875 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:12.875 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:12.876 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:12.877 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:12.877 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:12.878 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:12.878 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:12.879 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:12.880 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:12.880 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:12.881 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:12.882 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:12.882 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:12.883 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:12.884 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:12.884 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:12.885 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:12.886 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:12.887 [pool-2827-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.888 [pool-2828-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.889 [pool-2829-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.890 [pool-2830-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.891 [pool-2831-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.892 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:12.893 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:12.894 [pool-2835-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.897 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:12.900 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:12.902 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:12.904 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:12.906 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:12.908 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:12.910 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:12.912 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:12.913 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:12.916 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:12.917 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:12.919 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:12.921 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:12.921 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:12.922 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:12.923 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:12.923 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:12.924 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:12.925 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:12.926 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:12.926 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:12.927 [pool-2861-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.928 [pool-2862-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.929 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:12.929 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:12.930 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:12.931 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:12.931 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:12.932 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:12.932 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:12.934 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:12.934 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:12.935 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:12.936 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:12.936 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:12.937 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:12.939 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:12.939 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:12.940 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:12.941 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:12.942 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:12.942 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:12.943 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:12.944 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:12.959 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:12.960 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject9 iteration 0
18:36:12.961 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:12.961 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:12.961 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1647)
18:36:12.961 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:12.961 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:12.964 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:12.964 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:12.964 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:12.964 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:12.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:12.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:12.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:12.974 [pool-2890-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1647)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.975 [pool-2891-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1649)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.976 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:12.979 [pool-2896-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1647)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.981 [pool-2897-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1649)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.983 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:12.983 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:12.984 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:12.985 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:12.986 [pool-2904-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.987 [pool-2905-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:12.988 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:12.988 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:12.989 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:12.989 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:12.990 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:12.993 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:12.994 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:12.996 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:12.998 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:13.001 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:13.005 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:13.007 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:13.009 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:13.011 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:13.012 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:13.013 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:13.014 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:13.014 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:13.015 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:13.016 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:13.017 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:13.018 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:13.018 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:13.019 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:13.020 [pool-2934-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.021 [pool-2935-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.021 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:13.022 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:13.023 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:13.024 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:13.024 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:13.025 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:13.026 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:13.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:13.028 [pool-2946-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:13.029 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:13.030 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:13.032 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:13.032 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:13.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:13.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:13.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:13.043 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:13.044 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:13.045 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:13.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:13.055 [pool-2961-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1647)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.056 [pool-2962-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1649)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.058 [pool-2963-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1651)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.060 [pool-2964-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1651)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.061 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:13.062 [pool-2967-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.063 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:13.064 [pool-2969-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.065 [pool-2970-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [37]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.067 [pool-2972-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1647)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.069 [pool-2973-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1649)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.070 [pool-2974-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1651)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.072 [pool-2975-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1651)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.076 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:13.077 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:13.078 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:13.078 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:13.079 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:13.080 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:13.080 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:13.081 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:13.082 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:13.082 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:13.083 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:13.084 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:13.085 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:13.086 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:13.086 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:13.087 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:13.088 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:13.089 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:13.089 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:13.090 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:13.091 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:13.092 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:13.092 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:13.093 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:13.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:13.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:13.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:13.096 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:13.097 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:13.097 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:13.098 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:13.098 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:13.099 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:13.100 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:13.101 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:13.101 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:13.102 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:13.103 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:13.103 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:13.104 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:13.105 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:13.106 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:13.107 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:13.107 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:13.108 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:13.109 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:13.109 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:13.110 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:13.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:13.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:13.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:13.113 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:13.113 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:13.114 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:13.114 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:13.115 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:13.116 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:13.116 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:13.117 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:13.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:13.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:13.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:13.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:13.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:13.121 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:13.121 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:13.122 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:13.123 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:13.123 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:13.124 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:13.124 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:13.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:13.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:13.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:13.127 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:13.128 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:13.128 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:13.129 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:13.129 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:13.130 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:13.131 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:13.132 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:13.132 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:13.133 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:13.133 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:13.134 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:13.135 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:13.135 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:13.136 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:13.137 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:13.137 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:13.138 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:13.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:13.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:13.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:13.141 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:13.141 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:13.142 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:13.143 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:13.143 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:13.144 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:13.145 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:13.146 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:13.146 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:13.147 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:13.148 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:13.149 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:13.150 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:13.151 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:13.151 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:13.152 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:13.153 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:13.154 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:13.154 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:13.155 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:13.156 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:13.157 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:13.158 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:13.159 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:13.159 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:13.160 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:13.161 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:13.161 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:13.162 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:13.163 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:13.164 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:13.165 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:13.165 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:13.166 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:13.167 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:13.168 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:13.169 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:13.169 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:13.170 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:13.171 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:13.171 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:13.172 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:13.173 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:13.173 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:13.174 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:13.175 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:13.176 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:13.177 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:13.178 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:13.179 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:13.179 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:13.180 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:13.181 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:13.182 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:13.183 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:13.184 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:13.185 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:13.185 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:13.186 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:13.187 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:13.188 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:13.189 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:13.189 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:13.190 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:13.191 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:13.192 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:13.193 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:13.194 [pool-3143-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.196 [pool-3144-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.197 [pool-3145-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [21]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.198 [pool-3146-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.199 [pool-3147-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [33]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:13.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:13.202 [pool-3151-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.205 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:13.216 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:13.218 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:13.220 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:13.222 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:13.225 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:13.226 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:13.228 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:13.231 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:13.233 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:13.235 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:13.237 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:13.239 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:13.240 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:13.241 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:13.242 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:13.242 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:13.243 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:13.244 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:13.245 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:13.246 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:13.247 [pool-3177-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.248 [pool-3178-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:13.249 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:13.249 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:13.250 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:13.251 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:13.251 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:13.252 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:13.253 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:13.255 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:13.255 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:13.256 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:13.257 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:13.258 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:13.259 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:13.261 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:13.262 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:13.263 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:13.264 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:13.265 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:13.266 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:13.267 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:13.267 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:13.273 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - Exit
18:36:13.351 [pool-23-thread-1] DEBUG f.i.l.r.s.collect.DataCombiner - [combine] start on 430 elements
18:36:13.767 [pool-23-thread-1] DEBUG f.i.l.r.s.collect.DataCombiner - [combine] end 15728 evaluated elements


========= Info ==========
Nb constants             371
Nb method invocations    52
Nb field access          4
Nb variables             3
Total                    430
Nb evaluated expressions 10946
Init Execution time      1025 ms
Collect Execution time   3406 ms
Combine Execution time   495.0 ms
Nb Combination par sec   22113 combinations/sec
Total Execution time     4926 ms
Nb line execution        10
Nb results               1

Results:
1. this.getChildCount() == 0


========================
         Stat
========================
Operators: 
PLUS 8
NE 1
Methods: 
toStringTree() 4
checkTreeEqualsImpl(com.google.javascript.rhino.Node) 1
Variable: 
diff 3
nodeA 2
node2 2
nodeB 2

 & 371 & 52 & 4 & 3 & 430 & 10946 & 4927 ms & 10 &
18:36:13.769 [pool-23-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: com.google.javascript.rhino.Node:1385: PRECONDITION this.getChildCount() == 0
18:36:14.396 [pool-23-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "this.getChildCount() == 0" is working
18:36:14.656 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
18:36:14.876 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 389
18:36:14.876 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 4410
18:36:14.876 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 2
18:36:14.876 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
18:36:14.876 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 69589ms
18:36:14.876 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
18:36:14.876 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
18:36:14.876 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - this.getChildCount() == 0
18:36:17.121 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 10
18:36:17.121 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - com.google.javascript.rhino.Node:1385: PRECONDITION
18:36:17.155 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - --- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1384,7 +1384,9 @@
       if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (this.getChildCount() == 0) {
+          return "Node tree inequality:" +
+          "\nTree1:\n" + toStringTree() +
+          "\n\nTree2:\n" + node2.toStringTree() +
+          "\n\nSubtree1: " + diff.nodeA.toStringTree() +
+          "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        }
       }

PATCH
387.01user 8.20system 1:15.81elapsed 521%CPU (0avgtext+0avgdata 3546140maxresident)k
57192inputs+13472outputs (7major+1681343minor)pagefaults 0swaps


Node: grisou-34.nancy.grid5000.fr



Date: Sat Dec  1 18:36:19 EST 2018

