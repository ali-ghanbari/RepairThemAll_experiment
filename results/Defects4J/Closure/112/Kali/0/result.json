{
  "repair_end": "2018-12-02 01:45:21.641711", 
  "repair_begin": "2018-12-02 01:40:25.916870", 
  "patches": [
    {
      "diff": "--- /tmp/Kali_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeInference.java\t2018-12-01 19:40:12.327554752 -0500\n+++ /tmp/Kali_Defects4J_Closure_112/patches_if4a/Patch_8/patched/tmp/Kali_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeInference.java\t2018-12-01 19:45:21.186157736 -0500\n@@ -1144,7 +1144,7 @@\n   private static void resolvedTemplateType(\n       Map<TemplateType, JSType> map, TemplateType template, JSType resolved) {\n     JSType previous = map.get(template);\n-    if (!resolved.isUnknownType()) {\n+    if (false) {\n       if (previous == null) {\n         map.put(template, resolved);\n       } else {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/TypeInference.java", 
          "line": 1147, 
          "faulty": "if (!resolved.isUnknownType()) {\n  if (previous == null) {\n    map.put(template,resolved);\n  }\n else {\n    JSType join=previous.getLeastSupertype(resolved);\n    map.put(template,join);\n  }\n}", 
          "type": "RedirectBranch false"
        }
      ]
    }
  ]
}