cd /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4g -Xms1g -cp /home/tdurieux/defects4j4repair/script/../libs/jtestex7.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/astor.jar fr.inria.main.evolution.AstorMain \
	-mode jkali \
	-location . \
	-id Jackrabbit-Oak-61381ea2 \
	-failing org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexQueryTest:org.apache.jackrabbit.oak.query.index.TraversingIndexQueryTest:org.apache.jackrabbit.oak.plugins.index.old.QueryTest \
	-jvm4testexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-jvm4evosuitetestexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope local \
	-population 1 \
	-javacompliancelevel 7 \
	-srcjavafolder oak-core/src/main/java \
	-srctestfolder oak-core/src/test/java \
	-binjavafolder oak-core/target/classes \
	-bintestfolder oak-core/target/test-classes \
	-parameters x:x \
	-dependencies /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-commons/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-api/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-remote/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mongomk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-it/mk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-jcr/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-sling/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-http/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-lucene/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-run/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-it/osgi/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-bench/base/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-bench/latest/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-perf/target/classes:/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.1/logback-core-1.0.1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/13.0.1/guava-13.0.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-http/0.6-SNAPSHOT/oak-http-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-net/1.3.0/ops4j-base-net-1.3.0.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-spi/1.11/aether-spi-1.11.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.5.0/pax-swissbox-optional-jcl-1.5.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/xml-commons/5.0.9/xml-commons-5.0.9.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.7.1/mongo-java-driver-2.7.1.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/2.4.0/pax-exam-junit4-2.4.0.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/crypt/5.0.9/crypt-5.0.9.jar:/home/tdurieux/.m2/repository/org/json/json/20090211/json-20090211.jar:/home/tdurieux/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.2.v20120308/jetty-io-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-lang/1.3.0/ops4j-base-lang-1.3.0.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam/2.4.0/pax-exam-2.4.0.jar:/home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model-builder/3.0.3/maven-model-builder-3.0.3.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/0.6-SNAPSHOT/oak-commons-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.6-SNAPSHOT/jackrabbit-spi-commons-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.0-rc1/mockito-all-1.9.0-rc1.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-impl/1.11/aether-impl-1.11.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-lucene/0.6-SNAPSHOT/oak-lucene-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.0.0/lucene-analyzers-common-4.0.0.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/3.6.0/lucene-core-3.6.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-spi/1.3.0/ops4j-base-spi-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/0.6-SNAPSHOT/oak-jcr-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-classpath/1.4.0/pax-url-classpath-1.4.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/1.0.0/tinybundles-1.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.5.0/pax-swissbox-core-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mongomk/0.6-SNAPSHOT/oak-mongomk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.jcr.api/2.1.0/org.apache.sling.jcr.api-2.1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-7/wagon-file-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-7/wagon-http-shared-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-api/0.6-SNAPSHOT/oak-mk-api-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-nop/1.5.8/slf4j-nop-1.5.8.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.0/jackson-databind-2.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-framework/1.5.0/pax-swissbox-framework-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.6-SNAPSHOT/jackrabbit-core-2.6-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.0.2/jackson-dataformat-smile-2.0.2.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/test-utils/5.0.9/test-utils-5.0.9.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-commons/1.4.0/pax-url-commons-1.4.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-connector-wagon/1.11/aether-connector-wagon-1.11.jar:/home/tdurieux/.m2/repository/asm/asm/3.0/asm-3.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-api/1.11/aether-api-1.11.jar:/home/tdurieux/.m2/repository/biz/aQute/bndlib/1.50.0/bndlib-1.50.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.0/jackson-core-2.0.0.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-reflect/1.2/fest-reflect-1.2.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar:/home/tdurieux/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.2.v20120308/jetty-http-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-atinject_1.0_spec/1.0/geronimo-atinject_1.0_spec-1.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-store/1.3.0/ops4j-base-store-1.3.0.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.2/xercesImpl-2.6.2.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.6.0/org.apache.felix.scr.annotations-1.6.0.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-7/wagon-provider-api-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.osgi/2.1.0/org.apache.sling.commons.osgi-2.1.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.6-SNAPSHOT/jackrabbit-api-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-it-mk/0.6-SNAPSHOT/oak-it-mk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.6-SNAPSHOT/jackrabbit-spi-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/h2database/h2/1.3.158/h2-1.3.158.jar:/home/tdurieux/.m2/repository/jaxen/jaxen/1.1.3/jaxen-1.1.3.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-remote/0.6-SNAPSHOT/oak-mk-remote-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.4/jcl-over-slf4j-1.6.4.jar:/home/tdurieux/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-io/1.3.0/ops4j-base-io-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/2.6-SNAPSHOT/jackrabbit-webdav-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/1.3.3/pax-url-aether-1.3.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model/3.0.3/maven-model-3.0.3.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.5.0/pax-swissbox-lifecycle-1.5.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.3.0/ops4j-base-util-property-1.3.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-link/1.4.0/pax-url-link-1.4.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.0.1/commons-io-2.0.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.2.v20120308/jetty-server-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.6-SNAPSHOT/jackrabbit-jcr-tests-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-aether-provider/3.0.3/maven-aether-provider-3.0.3.jar:/home/tdurieux/.m2/repository/com/jamonapi/jamon/2.4/jamon-2.4.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.framework/4.0.2/org.apache.felix.framework-4.0.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.2.v20120308/jetty-util-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.3.0/ops4j-base-monitors-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk/0.6-SNAPSHOT/oak-mk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.9.1/mongo-java-driver-2.9.1.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-util/1.11/aether-util-1.11.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.2.v20120308/jetty-servlet-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/jdom/jdom/1.1.2/jdom-1.1.2.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-exec/1.3.0/ops4j-base-exec-1.3.0.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-link-assembly/2.4.0/pax-exam-link-assembly-2.4.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar:/home/tdurieux/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-7/wagon-http-lightweight-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.0/commons-math-2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.2.v20120308/jetty-security-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.2.v20120308/jetty-continuation-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-repository-metadata/3.0.3/maven-repository-metadata-3.0.3.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.1/logback-classic-1.0.1.jar:/home/tdurieux/.m2/repository/xmlunit/xmlunit/1.3/xmlunit-1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.0/jackson-annotations-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-utils/2.0.5/plexus-utils-2.0.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.6.1/slf4j-simple-1.6.1.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/2.4.0/pax-exam-container-native-2.4.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.5.0/pax-swissbox-property-1.5.0.jar:/home/tdurieux/.m2/repository/xalan/xalan/2.6.0/xalan-2.6.0.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.0/tika-core-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/jul-to-slf4j/1.6.4/jul-to-slf4j-1.6.4.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/tdurieux/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.6-SNAPSHOT/jackrabbit-jcr-commons-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/2.4.0/pax-exam-spi-2.4.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-bench-base/0.6-SNAPSHOT/oak-bench-base-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/tdurieux/.m2/repository/xom/xom/1.0/xom-1.0.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.2/tika-core-1.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/4.0.0/lucene-core-4.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-server/2.6-SNAPSHOT/jackrabbit-jcr-server-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.1/tika-core-1.1.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.4/plexus-container-default-1.5.4.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
2019-01-01 03:45:17,981 INFO main - command line arguments: [-mode  jkali  -location  .  -id  Jackrabbit-Oak-61381ea2  -failing  org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexQueryTest:org.apache.jackrabbit.oak.query.index.TraversingIndexQueryTest:org.apache.jackrabbit.oak.plugins.index.old.QueryTest  -jvm4testexecution  /home/tdurieux/openjdk-1.7.0/bin/  -jvm4evosuitetestexecution  /home/tdurieux/openjdk-1.7.0/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  local  -population  1  -javacompliancelevel  7  -srcjavafolder  oak-core/src/main/java  -srctestfolder  oak-core/src/test/java  -binjavafolder  oak-core/target/classes  -bintestfolder  oak-core/target/test-classes  -parameters  x:x  -dependencies  /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-commons/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-api/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-remote/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mongomk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-it/mk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-jcr/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-sling/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-http/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-lucene/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-run/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-it/osgi/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-bench/base/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-bench/latest/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-perf/target/classes:/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.1/logback-core-1.0.1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/13.0.1/guava-13.0.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-http/0.6-SNAPSHOT/oak-http-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-net/1.3.0/ops4j-base-net-1.3.0.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-spi/1.11/aether-spi-1.11.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.5.0/pax-swissbox-optional-jcl-1.5.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/xml-commons/5.0.9/xml-commons-5.0.9.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.7.1/mongo-java-driver-2.7.1.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/2.4.0/pax-exam-junit4-2.4.0.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/crypt/5.0.9/crypt-5.0.9.jar:/home/tdurieux/.m2/repository/org/json/json/20090211/json-20090211.jar:/home/tdurieux/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.2.v20120308/jetty-io-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-lang/1.3.0/ops4j-base-lang-1.3.0.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam/2.4.0/pax-exam-2.4.0.jar:/home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model-builder/3.0.3/maven-model-builder-3.0.3.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/0.6-SNAPSHOT/oak-commons-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.6-SNAPSHOT/jackrabbit-spi-commons-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.0-rc1/mockito-all-1.9.0-rc1.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-impl/1.11/aether-impl-1.11.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-lucene/0.6-SNAPSHOT/oak-lucene-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.0.0/lucene-analyzers-common-4.0.0.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/3.6.0/lucene-core-3.6.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-spi/1.3.0/ops4j-base-spi-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/0.6-SNAPSHOT/oak-jcr-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-classpath/1.4.0/pax-url-classpath-1.4.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/1.0.0/tinybundles-1.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.5.0/pax-swissbox-core-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mongomk/0.6-SNAPSHOT/oak-mongomk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.jcr.api/2.1.0/org.apache.sling.jcr.api-2.1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-7/wagon-file-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-7/wagon-http-shared-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-api/0.6-SNAPSHOT/oak-mk-api-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-nop/1.5.8/slf4j-nop-1.5.8.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.0/jackson-databind-2.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-framework/1.5.0/pax-swissbox-framework-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.6-SNAPSHOT/jackrabbit-core-2.6-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.0.2/jackson-dataformat-smile-2.0.2.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/test-utils/5.0.9/test-utils-5.0.9.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-commons/1.4.0/pax-url-commons-1.4.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-connector-wagon/1.11/aether-connector-wagon-1.11.jar:/home/tdurieux/.m2/repository/asm/asm/3.0/asm-3.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-api/1.11/aether-api-1.11.jar:/home/tdurieux/.m2/repository/biz/aQute/bndlib/1.50.0/bndlib-1.50.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.0/jackson-core-2.0.0.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-reflect/1.2/fest-reflect-1.2.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar:/home/tdurieux/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.2.v20120308/jetty-http-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-atinject_1.0_spec/1.0/geronimo-atinject_1.0_spec-1.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-store/1.3.0/ops4j-base-store-1.3.0.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.2/xercesImpl-2.6.2.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.6.0/org.apache.felix.scr.annotations-1.6.0.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-7/wagon-provider-api-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.osgi/2.1.0/org.apache.sling.commons.osgi-2.1.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.6-SNAPSHOT/jackrabbit-api-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-it-mk/0.6-SNAPSHOT/oak-it-mk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.6-SNAPSHOT/jackrabbit-spi-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/h2database/h2/1.3.158/h2-1.3.158.jar:/home/tdurieux/.m2/repository/jaxen/jaxen/1.1.3/jaxen-1.1.3.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-remote/0.6-SNAPSHOT/oak-mk-remote-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.4/jcl-over-slf4j-1.6.4.jar:/home/tdurieux/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-io/1.3.0/ops4j-base-io-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/2.6-SNAPSHOT/jackrabbit-webdav-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/1.3.3/pax-url-aether-1.3.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model/3.0.3/maven-model-3.0.3.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.5.0/pax-swissbox-lifecycle-1.5.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.3.0/ops4j-base-util-property-1.3.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-link/1.4.0/pax-url-link-1.4.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.0.1/commons-io-2.0.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.2.v20120308/jetty-server-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.6-SNAPSHOT/jackrabbit-jcr-tests-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-aether-provider/3.0.3/maven-aether-provider-3.0.3.jar:/home/tdurieux/.m2/repository/com/jamonapi/jamon/2.4/jamon-2.4.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.framework/4.0.2/org.apache.felix.framework-4.0.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.2.v20120308/jetty-util-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.3.0/ops4j-base-monitors-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk/0.6-SNAPSHOT/oak-mk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.9.1/mongo-java-driver-2.9.1.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-util/1.11/aether-util-1.11.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.2.v20120308/jetty-servlet-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/jdom/jdom/1.1.2/jdom-1.1.2.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-exec/1.3.0/ops4j-base-exec-1.3.0.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-link-assembly/2.4.0/pax-exam-link-assembly-2.4.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar:/home/tdurieux/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-7/wagon-http-lightweight-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.0/commons-math-2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.2.v20120308/jetty-security-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.2.v20120308/jetty-continuation-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-repository-metadata/3.0.3/maven-repository-metadata-3.0.3.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.1/logback-classic-1.0.1.jar:/home/tdurieux/.m2/repository/xmlunit/xmlunit/1.3/xmlunit-1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.0/jackson-annotations-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-utils/2.0.5/plexus-utils-2.0.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.6.1/slf4j-simple-1.6.1.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/2.4.0/pax-exam-container-native-2.4.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.5.0/pax-swissbox-property-1.5.0.jar:/home/tdurieux/.m2/repository/xalan/xalan/2.6.0/xalan-2.6.0.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.0/tika-core-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/jul-to-slf4j/1.6.4/jul-to-slf4j-1.6.4.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/tdurieux/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.6-SNAPSHOT/jackrabbit-jcr-commons-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/2.4.0/pax-exam-spi-2.4.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-bench-base/0.6-SNAPSHOT/oak-bench-base-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/tdurieux/.m2/repository/xom/xom/1.0/xom-1.0.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.2/tika-core-1.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/4.0.0/lucene-core-4.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-server/2.6-SNAPSHOT/jackrabbit-jcr-server-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.1/tika-core-1.1.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.4/plexus-container-default-1.5.4.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar]
2019-01-01 03:45:17,983 INFO fr.inria.main.evolution.AstorMain - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:842) - Source folders: [/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/./oak-core/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:861) - Source Test folders: [/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/./oak-core/src/test/java]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:75) - -Executing Gzoltar classpath: /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/./output_astor/AstorMain-Jackrabbit-Oak-61381ea2//bin//default from 77 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:149) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:169) - -gz-Adding classpath: [/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.1/logback-core-1.0.1.jar, /home/tdurieux/.m2/repository/com/google/guava/guava/13.0.1/guava-13.0.1.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-http/0.6-SNAPSHOT/oak-http-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-net/1.3.0/ops4j-base-net-1.3.0.jar, /home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-spi/1.11/aether-spi-1.11.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.5.0/pax-swissbox-optional-jcl-1.5.0.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar, /home/tdurieux/.m2/repository/com/cedarsoft/commons/xml-commons/5.0.9/xml-commons-5.0.9.jar, /home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.7.1/mongo-java-driver-2.7.1.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/2.4.0/pax-exam-junit4-2.4.0.jar, /home/tdurieux/.m2/repository/com/cedarsoft/commons/crypt/5.0.9/crypt-5.0.9.jar, /home/tdurieux/.m2/repository/org/json/json/20090211/json-20090211.jar, /home/tdurieux/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar, /home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.2.v20120308/jetty-io-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-lang/1.3.0/ops4j-base-lang-1.3.0.jar, /home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam/2.4.0/pax-exam-2.4.0.jar, /home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-model-builder/3.0.3/maven-model-builder-3.0.3.jar, /home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/0.6-SNAPSHOT/oak-commons-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.6-SNAPSHOT/jackrabbit-spi-commons-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.0-rc1/mockito-all-1.9.0-rc1.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-impl/1.11/aether-impl-1.11.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-it/mk/target/classes/, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-lucene/0.6-SNAPSHOT/oak-lucene-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar, /home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.0.0/lucene-analyzers-common-4.0.0.jar, /home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/3.6.0/lucene-core-3.6.0.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-spi/1.3.0/ops4j-base-spi-1.3.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/0.6-SNAPSHOT/oak-jcr-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT-tests.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-classpath/1.4.0/pax-url-classpath-1.4.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/1.0.0/tinybundles-1.0.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.5.0/pax-swissbox-core-1.5.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mongomk/0.6-SNAPSHOT/oak-mongomk-0.6-SNAPSHOT.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-http/target/classes/, /home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.jcr.api/2.1.0/org.apache.sling.jcr.api-2.1.0.jar, /home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-7/wagon-file-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-7/wagon-http-shared-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-api/0.6-SNAPSHOT/oak-mk-api-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-nop/1.5.8/slf4j-nop-1.5.8.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.0/jackson-databind-2.0.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-framework/1.5.0/pax-swissbox-framework-1.5.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.6-SNAPSHOT/jackrabbit-core-2.6-SNAPSHOT-tests.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.0.2/jackson-dataformat-smile-2.0.2.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-it/osgi/target/classes/, /home/tdurieux/.m2/repository/com/cedarsoft/commons/test-utils/5.0.9/test-utils-5.0.9.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-run/target/classes/, /home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-commons/1.4.0/pax-url-commons-1.4.0.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-connector-wagon/1.11/aether-connector-wagon-1.11.jar, /home/tdurieux/.m2/repository/asm/asm/3.0/asm-3.0.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-api/1.11/aether-api-1.11.jar, /home/tdurieux/.m2/repository/biz/aQute/bndlib/1.50.0/bndlib-1.50.0.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.0/jackson-core-2.0.0.jar, /home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar, /home/tdurieux/.m2/repository/org/easytesting/fest-reflect/1.2/fest-reflect-1.2.jar, /home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mongomk/target/classes/, /home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar, /home/tdurieux/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.2.v20120308/jetty-http-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar, /home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-atinject_1.0_spec/1.0/geronimo-atinject_1.0_spec-1.0.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-store/1.3.0/ops4j-base-store-1.3.0.jar, /home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.2/xercesImpl-2.6.2.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar, /home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.6.0/org.apache.felix.scr.annotations-1.6.0.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-7/wagon-provider-api-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.osgi/2.1.0/org.apache.sling.commons.osgi-2.1.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.6-SNAPSHOT/jackrabbit-api-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-it-mk/0.6-SNAPSHOT/oak-it-mk-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.6-SNAPSHOT/jackrabbit-spi-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/h2database/h2/1.3.158/h2-1.3.158.jar, /home/tdurieux/.m2/repository/jaxen/jaxen/1.1.3/jaxen-1.1.3.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-sling/target/classes/, /home/tdurieux/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar, /home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/tdurieux/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-remote/0.6-SNAPSHOT/oak-mk-remote-0.6-SNAPSHOT.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-remote/target/classes/, /home/tdurieux/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-jcr/target/classes/, /home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.4/jcl-over-slf4j-1.6.4.jar, /home/tdurieux/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-io/1.3.0/ops4j-base-io-1.3.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/2.6-SNAPSHOT/jackrabbit-webdav-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/1.3.3/pax-url-aether-1.3.3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-model/3.0.3/maven-model-3.0.3.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk/target/classes/, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.5.0/pax-swissbox-lifecycle-1.5.0.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.3.0/ops4j-base-util-property-1.3.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-link/1.4.0/pax-url-link-1.4.0.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.0.1/commons-io-2.0.1.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-perf/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.2.v20120308/jetty-server-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.6-SNAPSHOT/jackrabbit-jcr-tests-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-aether-provider/3.0.3/maven-aether-provider-3.0.3.jar, /home/tdurieux/.m2/repository/com/jamonapi/jamon/2.4/jamon-2.4.jar, /home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.framework/4.0.2/org.apache.felix.framework-4.0.2.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-bench/latest/target/classes/, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.2.v20120308/jetty-util-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.3.0/ops4j-base-monitors-1.3.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk/0.6-SNAPSHOT/oak-mk-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.9.1/mongo-java-driver-2.9.1.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-util/1.11/aether-util-1.11.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.2.v20120308/jetty-servlet-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar, /home/tdurieux/.m2/repository/org/jdom/jdom/1.1.2/jdom-1.1.2.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-exec/1.3.0/ops4j-base-exec-1.3.0.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-lucene/target/classes/, /home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-link-assembly/2.4.0/pax-exam-link-assembly-2.4.0.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar, /home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar, /home/tdurieux/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-7/wagon-http-lightweight-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.0/commons-math-2.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.2.v20120308/jetty-security-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.2.v20120308/jetty-continuation-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-repository-metadata/3.0.3/maven-repository-metadata-3.0.3.jar, /home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.1/logback-classic-1.0.1.jar, /home/tdurieux/.m2/repository/xmlunit/xmlunit/1.3/xmlunit-1.3.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.0/jackson-annotations-2.0.0.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-api/target/classes/, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-utils/2.0.5/plexus-utils-2.0.5.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.6.1/slf4j-simple-1.6.1.jar, /home/tdurieux/.m2/repository/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/2.4.0/pax-exam-container-native-2.4.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.5.0/pax-swissbox-property-1.5.0.jar, /home/tdurieux/.m2/repository/xalan/xalan/2.6.0/xalan-2.6.0.jar, /home/tdurieux/.m2/repository/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-bench/base/target/classes/, /home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.0/tika-core-1.0.jar, /home/tdurieux/.m2/repository/org/slf4j/jul-to-slf4j/1.6.4/jul-to-slf4j-1.6.4.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, /home/tdurieux/.m2/repository/junit/junit/4.10/junit-4.10.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.6-SNAPSHOT/jackrabbit-jcr-commons-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/2.4.0/pax-exam-spi-2.4.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-bench-base/0.6-SNAPSHOT/oak-bench-base-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /home/tdurieux/.m2/repository/xom/xom/1.0/xom-1.0.jar, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-commons/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/./output_astor/AstorMain-Jackrabbit-Oak-61381ea2//bin//default, /home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.2/tika-core-1.2.jar, /home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/4.0.0/lucene-core-4.0.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-server/2.6-SNAPSHOT/jackrabbit-jcr-server-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.1/tika-core-1.1.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.4/plexus-container-default-1.5.4.jar, /home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.jackrabbit.oak.plugins.index.old.PrefixIndexTest#test
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.junit.runner.manipulation.Filter#initializationError
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.jackrabbit.oak.plugins.index.old.QueryTest#sql2
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.jackrabbit.oak.query.index.TraversingIndexQueryTest#sql2
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexQueryTest#sql2
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.junit.runner.manipulation.Filter#initializationError
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:218) - Gzoltar Test Result Total:429, fails: 6, GZoltar suspicious 22157, with positive susp 5306
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - nr test results 429
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:271) - Gzoltar found: 1000 with susp > 0.1, we consider: 1000
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:689) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:781) - Creating model,  Code location from working folder: /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/./output_astor/AstorMain-Jackrabbit-Oak-61381ea2//src//default
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:65) - building model: /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/./output_astor/AstorMain-Jackrabbit-Oak-61381ea2//src//default, compliance level: 7
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:78) - Classpath for building SpoonModel [/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-commons/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-api/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-remote/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mongomk/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-it/mk/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-jcr/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-sling/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-http/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-lucene/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-run/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-it/osgi/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-bench/base/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-bench/latest/target/classes/, /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-perf/target/classes/, /home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.1/logback-core-1.0.1.jar, /home/tdurieux/.m2/repository/com/google/guava/guava/13.0.1/guava-13.0.1.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-http/0.6-SNAPSHOT/oak-http-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-net/1.3.0/ops4j-base-net-1.3.0.jar, /home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-spi/1.11/aether-spi-1.11.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.5.0/pax-swissbox-optional-jcl-1.5.0.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar, /home/tdurieux/.m2/repository/com/cedarsoft/commons/xml-commons/5.0.9/xml-commons-5.0.9.jar, /home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.7.1/mongo-java-driver-2.7.1.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/2.4.0/pax-exam-junit4-2.4.0.jar, /home/tdurieux/.m2/repository/com/cedarsoft/commons/crypt/5.0.9/crypt-5.0.9.jar, /home/tdurieux/.m2/repository/org/json/json/20090211/json-20090211.jar, /home/tdurieux/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar, /home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.2.v20120308/jetty-io-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-lang/1.3.0/ops4j-base-lang-1.3.0.jar, /home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam/2.4.0/pax-exam-2.4.0.jar, /home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-model-builder/3.0.3/maven-model-builder-3.0.3.jar, /home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/0.6-SNAPSHOT/oak-commons-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.6-SNAPSHOT/jackrabbit-spi-commons-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.0-rc1/mockito-all-1.9.0-rc1.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-impl/1.11/aether-impl-1.11.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-lucene/0.6-SNAPSHOT/oak-lucene-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar, /home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.0.0/lucene-analyzers-common-4.0.0.jar, /home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/3.6.0/lucene-core-3.6.0.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-spi/1.3.0/ops4j-base-spi-1.3.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/0.6-SNAPSHOT/oak-jcr-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT-tests.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-classpath/1.4.0/pax-url-classpath-1.4.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/1.0.0/tinybundles-1.0.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.5.0/pax-swissbox-core-1.5.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mongomk/0.6-SNAPSHOT/oak-mongomk-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.jcr.api/2.1.0/org.apache.sling.jcr.api-2.1.0.jar, /home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-7/wagon-file-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-7/wagon-http-shared-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-api/0.6-SNAPSHOT/oak-mk-api-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-nop/1.5.8/slf4j-nop-1.5.8.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.0/jackson-databind-2.0.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-framework/1.5.0/pax-swissbox-framework-1.5.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.6-SNAPSHOT/jackrabbit-core-2.6-SNAPSHOT-tests.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.0.2/jackson-dataformat-smile-2.0.2.jar, /home/tdurieux/.m2/repository/com/cedarsoft/commons/test-utils/5.0.9/test-utils-5.0.9.jar, /home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-commons/1.4.0/pax-url-commons-1.4.0.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-connector-wagon/1.11/aether-connector-wagon-1.11.jar, /home/tdurieux/.m2/repository/asm/asm/3.0/asm-3.0.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-api/1.11/aether-api-1.11.jar, /home/tdurieux/.m2/repository/biz/aQute/bndlib/1.50.0/bndlib-1.50.0.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.0/jackson-core-2.0.0.jar, /home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar, /home/tdurieux/.m2/repository/org/easytesting/fest-reflect/1.2/fest-reflect-1.2.jar, /home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar, /home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar, /home/tdurieux/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.2.v20120308/jetty-http-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar, /home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-atinject_1.0_spec/1.0/geronimo-atinject_1.0_spec-1.0.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-store/1.3.0/ops4j-base-store-1.3.0.jar, /home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.2/xercesImpl-2.6.2.jar, /home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar, /home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.6.0/org.apache.felix.scr.annotations-1.6.0.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-7/wagon-provider-api-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.osgi/2.1.0/org.apache.sling.commons.osgi-2.1.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.6-SNAPSHOT/jackrabbit-api-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-it-mk/0.6-SNAPSHOT/oak-it-mk-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.6-SNAPSHOT/jackrabbit-spi-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/com/h2database/h2/1.3.158/h2-1.3.158.jar, /home/tdurieux/.m2/repository/jaxen/jaxen/1.1.3/jaxen-1.1.3.jar, /home/tdurieux/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar, /home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, /home/tdurieux/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-remote/0.6-SNAPSHOT/oak-mk-remote-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar, /home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.4/jcl-over-slf4j-1.6.4.jar, /home/tdurieux/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-io/1.3.0/ops4j-base-io-1.3.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/2.6-SNAPSHOT/jackrabbit-webdav-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/1.3.3/pax-url-aether-1.3.3.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-model/3.0.3/maven-model-3.0.3.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.5.0/pax-swissbox-lifecycle-1.5.0.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.3.0/ops4j-base-util-property-1.3.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-link/1.4.0/pax-url-link-1.4.0.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/2.0.1/commons-io-2.0.1.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.2.v20120308/jetty-server-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.6-SNAPSHOT/jackrabbit-jcr-tests-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-aether-provider/3.0.3/maven-aether-provider-3.0.3.jar, /home/tdurieux/.m2/repository/com/jamonapi/jamon/2.4/jamon-2.4.jar, /home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.framework/4.0.2/org.apache.felix.framework-4.0.2.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.2.v20120308/jetty-util-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.3.0/ops4j-base-monitors-1.3.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk/0.6-SNAPSHOT/oak-mk-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.9.1/mongo-java-driver-2.9.1.jar, /home/tdurieux/.m2/repository/org/sonatype/aether/aether-util/1.11/aether-util-1.11.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.2.v20120308/jetty-servlet-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar, /home/tdurieux/.m2/repository/org/jdom/jdom/1.1.2/jdom-1.1.2.jar, /home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-exec/1.3.0/ops4j-base-exec-1.3.0.jar, /home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-link-assembly/2.4.0/pax-exam-link-assembly-2.4.0.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar, /home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar, /home/tdurieux/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar, /home/tdurieux/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar, /home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-7/wagon-http-lightweight-1.0-beta-7.jar, /home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.0/commons-math-2.0.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.2.v20120308/jetty-security-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.2.v20120308/jetty-continuation-8.1.2.v20120308.jar, /home/tdurieux/.m2/repository/org/apache/maven/maven-repository-metadata/3.0.3/maven-repository-metadata-3.0.3.jar, /home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.1/logback-classic-1.0.1.jar, /home/tdurieux/.m2/repository/xmlunit/xmlunit/1.3/xmlunit-1.3.jar, /home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.0/jackson-annotations-2.0.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-utils/2.0.5/plexus-utils-2.0.5.jar, /home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.6.1/slf4j-simple-1.6.1.jar, /home/tdurieux/.m2/repository/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/2.4.0/pax-exam-container-native-2.4.0.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.5.0/pax-swissbox-property-1.5.0.jar, /home/tdurieux/.m2/repository/xalan/xalan/2.6.0/xalan-2.6.0.jar, /home/tdurieux/.m2/repository/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar, /home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.0/tika-core-1.0.jar, /home/tdurieux/.m2/repository/org/slf4j/jul-to-slf4j/1.6.4/jul-to-slf4j-1.6.4.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, /home/tdurieux/.m2/repository/junit/junit/4.10/junit-4.10.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.6-SNAPSHOT/jackrabbit-jcr-commons-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/2.4.0/pax-exam-spi-2.4.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-bench-base/0.6-SNAPSHOT/oak-bench-base-0.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /home/tdurieux/.m2/repository/xom/xom/1.0/xom-1.0.jar, /home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.2/tika-core-1.2.jar, /home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/4.0.0/lucene-core-4.0.0.jar, /home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-server/2.6-SNAPSHOT/jackrabbit-jcr-server-2.6-SNAPSHOT.jar, /home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.1/tika-core-1.1.jar, /home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.4/plexus-container-default-1.5.4.jar, /home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:693) - 
---- Initial suspicious size: 1000
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=50, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=51, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=53, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=55, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=58, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=59, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=60, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=62, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=63, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=67, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=73, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=74, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=76, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=80, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=84, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{decode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=129, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{decode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=130, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{decode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=131, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{decode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=132, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{decode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=133, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{decode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=136, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{decode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=138, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{decode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=139, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{decode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=140, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(CLjava/lang/StringBuffer;)V 0.0, lineNumber=156, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(CLjava/lang/StringBuffer;)V 0.0, lineNumber=157, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(CLjava/lang/StringBuffer;)V 0.0, lineNumber=158, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(CLjava/lang/StringBuffer;)V 0.0, lineNumber=159, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(CLjava/lang/StringBuffer;)V 0.0, lineNumber=160, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{encode(CLjava/lang/StringBuffer;)V 0.0, lineNumber=161, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{needsEscaping(Ljava/lang/String;I)Z 0.0, lineNumber=173, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{needsEscaping(Ljava/lang/String;I)Z 0.0, lineNumber=180, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{addTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=111, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=158, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=159, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=160, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=161, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=168, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=171, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=172, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=173, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=174, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=187, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=188, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=190, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=193, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readArrayProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=195, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.XMLChar, methodName=org.apache.jackrabbit.util.XMLChar{isNameStart(I)Z 0.0, lineNumber=842, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.XMLChar, methodName=org.apache.jackrabbit.util.XMLChar{isName(I)Z 0.0, lineNumber=853, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.XMLChar, methodName=org.apache.jackrabbit.util.XMLChar{isValidName(Ljava/lang/String;)Z 0.0, lineNumber=900, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.XMLChar, methodName=org.apache.jackrabbit.util.XMLChar{isValidName(Ljava/lang/String;)Z 0.0, lineNumber=902, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.XMLChar, methodName=org.apache.jackrabbit.util.XMLChar{isValidName(Ljava/lang/String;)Z 0.0, lineNumber=903, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.XMLChar, methodName=org.apache.jackrabbit.util.XMLChar{isValidName(Ljava/lang/String;)Z 0.0, lineNumber=905, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.XMLChar, methodName=org.apache.jackrabbit.util.XMLChar{isValidName(Ljava/lang/String;)Z 0.0, lineNumber=906, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.XMLChar, methodName=org.apache.jackrabbit.util.XMLChar{isValidName(Ljava/lang/String;)Z 0.0, lineNumber=907, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.XMLChar, methodName=org.apache.jackrabbit.util.XMLChar{isValidName(Ljava/lang/String;)Z 0.0, lineNumber=908, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.XMLChar, methodName=org.apache.jackrabbit.util.XMLChar{isValidName(Ljava/lang/String;)Z 0.0, lineNumber=911, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getName(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=143, susp=0.7071067811865476]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT, methodName=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT{loadFixtures()Ljava/util/Collection; 0.0, lineNumber=55, susp=0.5773502691896258]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT, methodName=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT{loadFixtures()Ljava/util/Collection; 0.0, lineNumber=57, susp=0.5773502691896258]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT, methodName=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT{loadFixtures()Ljava/util/Collection; 0.0, lineNumber=58, susp=0.5773502691896258]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT, methodName=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT{loadFixtures()Ljava/util/Collection; 0.0, lineNumber=59, susp=0.5773502691896258]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT, methodName=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT{loadFixtures()Ljava/util/Collection; 0.0, lineNumber=60, susp=0.5773502691896258]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT, methodName=org.apache.jackrabbit.mk.test.AbstractMicroKernelIT{loadFixtures()Ljava/util/Collection; 0.0, lineNumber=66, susp=0.5773502691896258]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{apply(Lorg/apache/jackrabbit/oak/api/Root;Ljava/lang/String;)V 0.0, lineNumber=79, susp=0.5477225575051661]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{removeTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=90, susp=0.5477225575051661]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{removeTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=91, susp=0.5477225575051661]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{removeTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=92, susp=0.5477225575051661]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{removeTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=95, susp=0.5477225575051661]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{removeTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=96, susp=0.5477225575051661]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{removeTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=97, susp=0.5477225575051661]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{removeTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=98, susp=0.5477225575051661]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{decode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=125, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.util.ISO9075, methodName=org.apache.jackrabbit.util.ISO9075{decode(Ljava/lang/String;)Ljava/lang/String; 0.0, lineNumber=127, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{apply(Lorg/apache/jackrabbit/oak/api/Root;Ljava/lang/String;)V 0.0, lineNumber=69, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{apply(Lorg/apache/jackrabbit/oak/api/Root;Ljava/lang/String;)V 0.0, lineNumber=70, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{apply(Lorg/apache/jackrabbit/oak/api/Root;Ljava/lang/String;)V 0.0, lineNumber=71, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{apply(Lorg/apache/jackrabbit/oak/api/Root;Ljava/lang/String;)V 0.0, lineNumber=72, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{apply(Lorg/apache/jackrabbit/oak/api/Root;Ljava/lang/String;)V 0.0, lineNumber=76, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{apply(Lorg/apache/jackrabbit/oak/api/Root;Ljava/lang/String;)V 0.0, lineNumber=77, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{apply(Lorg/apache/jackrabbit/oak/api/Root;Ljava/lang/String;)V 0.0, lineNumber=78, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{apply(Lorg/apache/jackrabbit/oak/api/Root;Ljava/lang/String;)V 0.0, lineNumber=80, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{apply(Lorg/apache/jackrabbit/oak/api/Root;Ljava/lang/String;)V 0.0, lineNumber=81, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{apply(Lorg/apache/jackrabbit/oak/api/Root;Ljava/lang/String;)V 0.0, lineNumber=87, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{addTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=102, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{addTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=103, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{addTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=104, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{addTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=105, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{addTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=106, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{addTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=107, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{addTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=108, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{addTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=110, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{addTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=113, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{addTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=115, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{addTree(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/mk/json/JsopTokenizer;)V 0.0, lineNumber=116, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=125, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=128, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=130, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=132, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=133, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=134, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=135, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.query.JsopUtil, methodName=org.apache.jackrabbit.oak.query.JsopUtil{readProperty(Ljava/lang/String;Lorg/apache/jackrabbit/mk/json/JsopReader;)Lorg/apache/jackrabbit/oak/api/PropertyState; 0.0, lineNumber=144, susp=0.3692744729379982]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getDepth(Ljava/lang/String;)I 0.0, lineNumber=161, susp=0.32659863237109044]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getDepth(Ljava/lang/String;)I 0.0, lineNumber=163, susp=0.32659863237109044]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getDepth(Ljava/lang/String;)I 0.0, lineNumber=164, susp=0.32659863237109044]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getDepth(Ljava/lang/String;)I 0.0, lineNumber=171, susp=0.32659863237109044]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getDepth(Ljava/lang/String;)I 0.0, lineNumber=172, susp=0.32659863237109044]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.oak.commons.PathUtils, methodName=org.apache.jackrabbit.oak.commons.PathUtils{getDepth(Ljava/lang/String;)I 0.0, lineNumber=173, susp=0.32659863237109044]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.model.tree.NodeDelta$DiffHandler, methodName=org.apache.jackrabbit.mk.model.tree.NodeDelta$DiffHandler{childNodeDeleted(Ljava/lang/String;Lorg/apache/jackrabbit/mk/model/tree/NodeState;)V 0.0, lineNumber=207, susp=0.28867513459481287]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.model.tree.NodeDelta$DiffHandler, methodName=org.apache.jackrabbit.mk.model.tree.NodeDelta$DiffHandler{childNodeDeleted(Ljava/lang/String;Lorg/apache/jackrabbit/mk/model/tree/NodeState;)V 0.0, lineNumber=208, susp=0.28867513459481287]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.model.StagedNodeTree, methodName=org.apache.jackrabbit.mk.model.StagedNodeTree{mergeNode(Lorg/apache/jackrabbit/mk/model/StoredNode;Lorg/apache/jackrabbit/mk/model/StoredNode;Lorg/apache/jackrabbit/mk/model/StoredNode;Ljava/lang/String;)V 0.0, lineNumber=393, susp=0.28867513459481287]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.jackrabbit.mk.model.StagedNodeTree, methodName=org.apache.jackrabbit.mk.model.StagedNodeTree{mergeNode(Lorg/apache/jackrabbit/mk/model/StoredNode;Lorg/apache/jackrabbit/mk/model/StoredNode;Lorg/apache/jackrabbit/mk/model/StoredNode;Ljava/lang/String;)V 0.0, lineNumber=394, susp=0.28867513459481287]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 1000,  740
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 740
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 740, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= oak-core/target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 140162
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= oak-core/src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexQueryTest:org.apache.jackrabbit.oak.query.index.TraversingIndexQueryTest:org.apache.jackrabbit.oak.plugins.index.old.QueryTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 7
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Jackrabbit-Oak-61381ea2
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= oak-core/target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0-u80-unofficial
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-commons/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-api/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-remote/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mongomk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-it/mk/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-jcr/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-sling/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-http/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-lucene/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-run/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-it/osgi/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-bench/base/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-bench/latest/target/classes:/tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/oak-mk-perf/target/classes:/home/tdurieux/.m2/repository/ch/qos/logback/logback-core/1.0.1/logback-core-1.0.1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/13.0.1/guava-13.0.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.2/jackson-core-asl-1.9.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-http/0.6-SNAPSHOT/oak-http-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-net/1.3.0/ops4j-base-net-1.3.0.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-spi/1.11/aether-spi-1.11.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.5.0/pax-swissbox-optional-jcl-1.5.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/xml-commons/5.0.9/xml-commons-5.0.9.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.7.1/mongo-java-driver-2.7.1.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/2.4.0/pax-exam-junit4-2.4.0.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/crypt/5.0.9/crypt-5.0.9.jar:/home/tdurieux/.m2/repository/org/json/json/20090211/json-20090211.jar:/home/tdurieux/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar:/home/tdurieux/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.1.2.v20120308/jetty-io-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-lang/1.3.0/ops4j-base-lang-1.3.0.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam/2.4.0/pax-exam-2.4.0.jar:/home/tdurieux/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model-builder/3.0.3/maven-model-builder-3.0.3.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-commons/0.6-SNAPSHOT/oak-commons-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.6-SNAPSHOT/jackrabbit-spi-commons-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.0-rc1/mockito-all-1.9.0-rc1.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-impl/1.11/aether-impl-1.11.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-lucene/0.6-SNAPSHOT/oak-lucene-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.0.0/lucene-analyzers-common-4.0.0.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/3.6.0/lucene-core-3.6.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-spi/1.3.0/ops4j-base-spi-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-jcr/0.6-SNAPSHOT/oak-jcr-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-classpath/1.4.0/pax-url-classpath-1.4.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/1.0.0/tinybundles-1.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.5.0/pax-swissbox-core-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mongomk/0.6-SNAPSHOT/oak-mongomk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.jcr.api/2.1.0/org.apache.sling.jcr.api-2.1.0.jar:/home/tdurieux/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-7/wagon-file-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-7/wagon-http-shared-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-api/0.6-SNAPSHOT/oak-mk-api-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-nop/1.5.8/slf4j-nop-1.5.8.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.0/jackson-databind-2.0.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-framework/1.5.0/pax-swissbox-framework-1.5.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.6-SNAPSHOT/jackrabbit-core-2.6-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.0.2/jackson-dataformat-smile-2.0.2.jar:/home/tdurieux/.m2/repository/com/cedarsoft/commons/test-utils/5.0.9/test-utils-5.0.9.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-commons/1.4.0/pax-url-commons-1.4.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-connector-wagon/1.11/aether-connector-wagon-1.11.jar:/home/tdurieux/.m2/repository/asm/asm/3.0/asm-3.0.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-api/1.11/aether-api-1.11.jar:/home/tdurieux/.m2/repository/biz/aQute/bndlib/1.50.0/bndlib-1.50.0.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.0/jackson-core-2.0.0.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-reflect/1.2/fest-reflect-1.2.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/tdurieux/.m2/repository/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar:/home/tdurieux/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.1.2.v20120308/jetty-http-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tdurieux/.m2/repository/org/apache/geronimo/specs/geronimo-atinject_1.0_spec/1.0/geronimo-atinject_1.0_spec-1.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-store/1.3.0/ops4j-base-store-1.3.0.jar:/home/tdurieux/.m2/repository/xerces/xercesImpl/2.6.2/xercesImpl-2.6.2.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.2/jackson-mapper-asl-1.9.2.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.6.0/org.apache.felix.scr.annotations-1.6.0.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-7/wagon-provider-api-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.osgi/2.1.0/org.apache.sling.commons.osgi-2.1.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.6-SNAPSHOT/jackrabbit-api-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-it-mk/0.6-SNAPSHOT/oak-it-mk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.6-SNAPSHOT/jackrabbit-spi-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/h2database/h2/1.3.158/h2-1.3.158.jar:/home/tdurieux/.m2/repository/jaxen/jaxen/1.1.3/jaxen-1.1.3.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk-remote/0.6-SNAPSHOT/oak-mk-remote-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.4/jcl-over-slf4j-1.6.4.jar:/home/tdurieux/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-io/1.3.0/ops4j-base-io-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/2.6-SNAPSHOT/jackrabbit-webdav-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/1.3.3/pax-url-aether-1.3.3.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-model/3.0.3/maven-model-3.0.3.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.5.0/pax-swissbox-lifecycle-1.5.0.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.3.0/ops4j-base-util-property-1.3.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-link/1.4.0/pax-url-link-1.4.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.0.1/commons-io-2.0.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.1.2.v20120308/jetty-server-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.6-SNAPSHOT/jackrabbit-jcr-tests-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-aether-provider/3.0.3/maven-aether-provider-3.0.3.jar:/home/tdurieux/.m2/repository/com/jamonapi/jamon/2.4/jamon-2.4.jar:/home/tdurieux/.m2/repository/org/apache/felix/org.apache.felix.framework/4.0.2/org.apache.felix.framework-4.0.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.1.2.v20120308/jetty-util-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.3.0/ops4j-base-monitors-1.3.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-mk/0.6-SNAPSHOT/oak-mk-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/mongodb/mongo-java-driver/2.9.1/mongo-java-driver-2.9.1.jar:/home/tdurieux/.m2/repository/org/sonatype/aether/aether-util/1.11/aether-util-1.11.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.2.v20120308/jetty-servlet-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/jdom/jdom/1.1.2/jdom-1.1.2.jar:/home/tdurieux/.m2/repository/org/ops4j/base/ops4j-base-exec/1.3.0/ops4j-base-exec-1.3.0.jar:/home/tdurieux/.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-link-assembly/2.4.0/pax-exam-link-assembly-2.4.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.4/plexus-classworlds-2.4.jar:/home/tdurieux/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar:/home/tdurieux/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar:/home/tdurieux/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-7/wagon-http-lightweight-1.0-beta-7.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.0/commons-math-2.0.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.1.2.v20120308/jetty-security-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.2.v20120308/jetty-continuation-8.1.2.v20120308.jar:/home/tdurieux/.m2/repository/org/apache/maven/maven-repository-metadata/3.0.3/maven-repository-metadata-3.0.3.jar:/home/tdurieux/.m2/repository/ch/qos/logback/logback-classic/1.0.1/logback-classic-1.0.1.jar:/home/tdurieux/.m2/repository/xmlunit/xmlunit/1.3/xmlunit-1.3.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.0/jackson-annotations-2.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-core/0.6-SNAPSHOT/oak-core-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-utils/2.0.5/plexus-utils-2.0.5.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-simple/1.6.1/slf4j-simple-1.6.1.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/2.4.0/pax-exam-container-native-2.4.0.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.5.0/pax-swissbox-property-1.5.0.jar:/home/tdurieux/.m2/repository/xalan/xalan/2.6.0/xalan-2.6.0.jar:/home/tdurieux/.m2/repository/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.0/tika-core-1.0.jar:/home/tdurieux/.m2/repository/org/slf4j/jul-to-slf4j/1.6.4/jul-to-slf4j-1.6.4.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:/home/tdurieux/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.6-SNAPSHOT/jackrabbit-jcr-commons-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/2.4.0/pax-exam-spi-2.4.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/oak-bench-base/0.6-SNAPSHOT/oak-bench-base-0.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/tdurieux/.m2/repository/xom/xom/1.0/xom-1.0.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.2/tika-core-1.2.jar:/home/tdurieux/.m2/repository/org/apache/lucene/lucene-core/4.0.0/lucene-core-4.0.0.jar:/home/tdurieux/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-server/2.6-SNAPSHOT/jackrabbit-jcr-server-2.6-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/tika/tika-core/1.1/tika-core-1.1.jar:/home/tdurieux/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.4/plexus-container-default-1.5.4.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= local
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= oak-core/src/main/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrNameParser line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((state == (org.apache.jackrabbit.oak.namepath.JcrNameParser.STATE_PREFIX_START)) || (state == (o[...] ` -topatch--> `if (true) { 	listener.error((("'" + c) + "' not valid name start")); 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrNameParser line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((state == (org.apache.jackrabbit.oak.namepath.JcrNameParser.STATE_PREFIX_START)) || (state == (o[...] ` -topatch--> `if (false) { 	listener.error((("'" + c) + "' not valid name start")); 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrNameParser line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((state == (org.apache.jackrabbit.oak.namepath.JcrNameParser.STATE_PREFIX_START)) || (state == (o[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrNameParser line: 126, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `trailingSpaces = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LowerCaseImpl line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LowerCaseImpl line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LowerCaseImpl line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LowerCaseImpl line: 58, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 340, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `readCount++ ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 342, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `list.add(r) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 346, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((list.size()) > (keep * 2)) {  	java.util.Collections.sort(list); 	org.apache.jackrabbit.oak.que[...] ` -topatch--> `if (true) {  	java.util.Collections.sort(list); 	org.apache.jackrabbit.oak.query.Query.keepFirst(lis[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 346, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((list.size()) > (keep * 2)) {  	java.util.Collections.sort(list); 	org.apache.jackrabbit.oak.que[...] ` -topatch--> `if (false) {  	java.util.Collections.sort(list); 	org.apache.jackrabbit.oak.query.Query.keepFirst(li[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 346, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((list.size()) > (keep * 2)) {  	java.util.Collections.sort(list); 	org.apache.jackrabbit.oak.que[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 348, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.util.Collections.sort(list) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 349, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.oak.query.Query.keepFirst(list, keep) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 415, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0, size = orderings.length; i < size; i++) { 	org.apache.jackrabbit.oak.api.PropertyVal[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 418, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((a == null) || (b == null)) { 	if (a == b) { 		comp = 0; 	}else 		if (a == null) {  			comp = -1[...] ` -topatch--> `if (true) { 	if (a == b) { 		comp = 0; 	}else 		if (a == null) {  			comp = -1; 		}else { 			comp = [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 418, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((a == null) || (b == null)) { 	if (a == b) { 		comp = 0; 	}else 		if (a == null) {  			comp = -1[...] ` -topatch--> `if (false) { 	if (a == b) { 		comp = 0; 	}else 		if (a == null) {  			comp = -1; 		}else { 			comp =[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 418, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((a == null) || (b == null)) { 	if (a == b) { 		comp = 0; 	}else 		if (a == null) {  			comp = -1[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 428, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `comp = a.compareTo(b) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 430, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (comp != 0) { 	if (orderings[i].isDescending()) { 		comp = -comp; 	} 	break; } ` -topatch--> `if (true) { 	if (this.orderings[i].isDescending()) { 		comp = -comp; 	} 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 430, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (comp != 0) { 	if (orderings[i].isDescending()) { 		comp = -comp; 	} 	break; } ` -topatch--> `if (false) { 	if (this.orderings[i].isDescending()) { 		comp = -comp; 	} 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 430, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comp != 0) { 	if (orderings[i].isDescending()) { 		comp = -comp; 	} 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 431, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (orderings[i].isDescending()) { 	comp = -comp; } ` -topatch--> `if (true) { 	comp = -comp; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 431, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (orderings[i].isDescending()) { 	comp = -comp; } ` -topatch--> `if (false) { 	comp = -comp; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 431, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (orderings[i].isDescending()) { 	comp = -comp; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 432, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `comp = -comp ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 543, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int size = orderings.length ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 544, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `orderValues = new org.apache.jackrabbit.oak.api.PropertyValue[size] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 545, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < size; i++) { 	orderValues[i] = orderings[i].getOperand().currentProperty(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 546, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `orderValues[i] = orderings[i].getOperand().currentProperty() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (state == (org.apache.jackrabbit.oak.namepath.JcrPathParser.STATE_INDEX_END)) { 	listener.error(([...] ` -topatch--> `if (true) { 	listener.error((((('\'' + jcrPath) + "' is not a valid path. '") + c) +  	"' not valid [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (state == (org.apache.jackrabbit.oak.namepath.JcrPathParser.STATE_INDEX_END)) { 	listener.error(([...] ` -topatch--> `if (false) { 	listener.error((((('\'' + jcrPath) + "' is not a valid path. '") + c) +  	"' not valid[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (state == (org.apache.jackrabbit.oak.namepath.JcrPathParser.STATE_INDEX_END)) { 	listener.error(([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 214, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((state == (org.apache.jackrabbit.oak.namepath.JcrPathParser.STATE_DOT)) || (state == (org.apache[...] ` -topatch--> `if (true) { 	state = org.apache.jackrabbit.oak.namepath.JcrPathParser.STATE_PREFIX; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 214, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((state == (org.apache.jackrabbit.oak.namepath.JcrPathParser.STATE_DOT)) || (state == (org.apache[...] ` -topatch--> `if (false) { 	state = org.apache.jackrabbit.oak.namepath.JcrPathParser.STATE_PREFIX; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 214, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((state == (org.apache.jackrabbit.oak.namepath.JcrPathParser.STATE_DOT)) || (state == (org.apache[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeImpl line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (local == null) {  	return false; } ` -topatch--> `if (true) {  	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeImpl line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (local == null) {  	return false; } ` -topatch--> `if (false) {  	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeImpl line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (local == null) {  	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ColumnImpl line: 62, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 148, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `e2.initCause(e) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 149, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw e2 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 380, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw getSyntaxError() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 435, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.sameNode(getOnlySelectorName(), name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 449, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.descendantNode(getOnlySelectorName(), name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 483, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `op = factory.length(parsePropertyValue(readName())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 486, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `op = factory.nodeName(getOnlySelectorName()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 491, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isToken(")")) { 	op = factory.nodeLocalName(getOnlySelectorName()); }else { 	op = factory.nodeLo[...] ` -topatch--> `if (true) { 	op = this.factory.nodeLocalName(getOnlySelectorName()); }else { 	op = this.factory.node[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 491, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isToken(")")) { 	op = factory.nodeLocalName(getOnlySelectorName()); }else { 	op = factory.nodeLo[...] ` -topatch--> `if (false) { 	op = this.factory.nodeLocalName(getOnlySelectorName()); }else { 	op = this.factory.nod[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 491, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isToken(")")) { 	op = factory.nodeLocalName(getOnlySelectorName()); }else { 	op = factory.nodeLo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 494, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `op = factory.nodeLocalName(readName()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 527, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (selector2Path.equals(".")) { 	return p1.equals(p2); } ` -topatch--> `if (true) { 	return p1.equals(p2); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (selector2Path.equals(".")) { 	return p1.equals(p2); } ` -topatch--> `if (false) { 	return p1.equals(p2); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (selector2Path.equals(".")) { 	return p1.equals(p2); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 74, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return p1.equals(p2) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (selector2Path.equals(".")) { 	f.restrictPath(p2, org.apache.jackrabbit.oak.spi.query.Filter.Path[...] ` -topatch--> `if (true) { 	f.restrictPath(p2, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.EXACT); }[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (selector2Path.equals(".")) { 	f.restrictPath(p2, org.apache.jackrabbit.oak.spi.query.Filter.Path[...] ` -topatch--> `if (false) { 	f.restrictPath(p2, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.EXACT); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (selector2Path.equals(".")) { 	f.restrictPath(p2, org.apache.jackrabbit.oak.spi.query.Filter.Path[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 86, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `f.restrictPath(p2, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.EXACT) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 56, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 58, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(p.isArray())) { 	long length = p.size(); 	return org.apache.jackrabbit.oak.spi.query.PropertyV[...] ` -topatch--> `if (true) { 	long length = p.size(); 	return org.apache.jackrabbit.oak.spi.query.PropertyValues.newL[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 58, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(p.isArray())) { 	long length = p.size(); 	return org.apache.jackrabbit.oak.spi.query.PropertyV[...] ` -topatch--> `if (false) { 	long length = p.size(); 	return org.apache.jackrabbit.oak.spi.query.PropertyValues.new[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 58, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(p.isArray())) { 	long length = p.size(); 	return org.apache.jackrabbit.oak.spi.query.PropertyV[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 60, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.jackrabbit.oak.spi.query.PropertyValues.newLong(length) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (v != null) { 	switch (v.getType().tag()) { 		case javax.jcr.PropertyType.LONG : 		case javax.jcr[...] ` -topatch--> `if (true) { 	switch (v.getType().tag()) { 		case javax.jcr.PropertyType.LONG : 		case javax.jcr.Prop[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (v != null) { 	switch (v.getType().tag()) { 		case javax.jcr.PropertyType.LONG : 		case javax.jcr[...] ` -topatch--> `if (false) { 	switch (v.getType().tag()) { 		case javax.jcr.PropertyType.LONG : 		case javax.jcr.Pro[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (v != null) { 	switch (v.getType().tag()) { 		case javax.jcr.PropertyType.LONG : 		case javax.jcr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 69, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (v.getType().tag()) { 	case javax.jcr.PropertyType.LONG : 	case javax.jcr.PropertyType.DECIMA[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LengthImpl line: 88, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `propertyValue.restrict(f, org.apache.jackrabbit.oak.query.ast.Operator.NOT_EQUAL, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 121, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lowerBound != null) { 	org.apache.jackrabbit.oak.api.PropertyValue pv = org.apache.jackrabbit.oa[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.oak.api.PropertyValue pv = org.apache.jackrabbit.oak.spi.query.Pr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lowerBound != null) { 	org.apache.jackrabbit.oak.api.PropertyValue pv = org.apache.jackrabbit.oa[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.oak.api.PropertyValue pv = org.apache.jackrabbit.oak.spi.query.P[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lowerBound != null) { 	org.apache.jackrabbit.oak.api.PropertyValue pv = org.apache.jackrabbit.oa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 164, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `operand1.restrict(f, org.apache.jackrabbit.oak.query.ast.Operator.GREATER_OR_EQUAL, pv) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (upperBound != null) { 	org.apache.jackrabbit.oak.api.PropertyValue pv = org.apache.jackrabbit.oa[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.oak.api.PropertyValue pv = org.apache.jackrabbit.oak.spi.query.Pr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (upperBound != null) { 	org.apache.jackrabbit.oak.api.PropertyValue pv = org.apache.jackrabbit.oa[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.oak.api.PropertyValue pv = org.apache.jackrabbit.oak.spi.query.P[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (upperBound != null) { 	org.apache.jackrabbit.oak.api.PropertyValue pv = org.apache.jackrabbit.oa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 168, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `operand1.restrict(f, org.apache.jackrabbit.oak.query.ast.Operator.LESS_OR_EQUAL, pv) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 183, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 184, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.bindSelector(source) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 227, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalArgumentException(("Two selectors with the same name: " + name)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 236, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeLocalNameImpl line: 52, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selector = source.getExistingSelector(selectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeLocalNameImpl line: 59, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `name = org.apache.jackrabbit.util.ISO9075.encode(name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl line: 76, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `f.restrictPath(a, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIRECT_CHILDREN) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.UpperCaseImpl line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.UpperCaseImpl line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.UpperCaseImpl line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.UpperCaseImpl line: 58, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((propertyName) != null) { 	org.apache.jackrabbit.oak.api.PropertyValue p = selector.currentPrope[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.oak.api.PropertyValue p = this.selector.currentProperty(this.prop[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((propertyName) != null) { 	org.apache.jackrabbit.oak.api.PropertyValue p = selector.currentPrope[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.oak.api.PropertyValue p = this.selector.currentProperty(this.pro[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((propertyName) != null) { 	org.apache.jackrabbit.oak.api.PropertyValue p = selector.currentPrope[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 84, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 86, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl.appendString(buff, p) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tree == null) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tree == null) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tree == null) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 92, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.jackrabbit.oak.api.PropertyState p : tree.getProperties()) { 	org.apache.jackrabbit.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 93, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl.appendString(buff, org.apache.jackrabbit.oak.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 103, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return expr.evaluate(buff.toString()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p.isArray()) { 	for (java.lang.String v : p.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS)[...] ` -topatch--> `if (true) { 	for (java.lang.String v : p.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS)) { 		b[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p.isArray()) { 	for (java.lang.String v : p.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS)[...] ` -topatch--> `if (false) { 	for (java.lang.String v : p.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS)) { 		[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p.isArray()) { 	for (java.lang.String v : p.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS)[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 111, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String v : p.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS)) { 	buff.append(v).[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 112, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buff.append(v).append(' ') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 115, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buff.append(p.getValue(org.apache.jackrabbit.oak.api.Type.STRING)).append(' ') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 106, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String p : org.apache.jackrabbit.oak.commons.PathUtils.elements(org.apache.jackrabbit[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tree == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tree == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tree == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(tree.hasChild(p))) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(tree.hasChild(p))) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(tree.hasChild(p))) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 111, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 113, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `tree = tree.getChild(p) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tree == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tree == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tree == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(tree.hasProperty(name))) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(tree.hasProperty(name))) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(tree.hasProperty(name))) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 125, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return matchesPropertyType(p) ? org.apache.jackrabbit.oak.spi.query.PropertyValues.create(p) : null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 158, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl line: 76, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `f.restrictPath(p, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIRECT_CHILDREN) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 230, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 235, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.compare(pattern, s, pi, si)) && [...] ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.compare(pattern, s, pi, si)) && [...] ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.compare(pattern, s, pi, si)) && [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 239, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 241, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `si++ ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 23024
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 280, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `type = org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.ONE ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 236, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read(",") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(",")) { 	c = factory.sameNodeJoinCondition(selector1, selector2, readPath()); }else { 	c [...] ` -topatch--> `if (true) { 	c = this.factory.sameNodeJoinCondition(selector1, selector2, readPath()); }else { 	c = [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(",")) { 	c = factory.sameNodeJoinCondition(selector1, selector2, readPath()); }else { 	c [...] ` -topatch--> `if (false) { 	c = this.factory.sameNodeJoinCondition(selector1, selector2, readPath()); }else { 	c =[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(",")) { 	c = factory.sameNodeJoinCondition(selector1, selector2, readPath()); }else { 	c [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 241, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.sameNodeJoinCondition(selector1, selector2, ".") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 243, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISCHILDNODE".equalsIgnoreCase(name)) { 	java.lang.String childSelector = readName(); 	read(",")[...] ` -topatch--> `if (true) { 	java.lang.String childSelector = readName(); 	read(","); 	c = this.factory.childNodeJoi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 243, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISCHILDNODE".equalsIgnoreCase(name)) { 	java.lang.String childSelector = readName(); 	read(",")[...] ` -topatch--> `if (false) { 	java.lang.String childSelector = readName(); 	read(","); 	c = this.factory.childNodeJo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 243, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISCHILDNODE".equalsIgnoreCase(name)) { 	java.lang.String childSelector = readName(); 	read(",")[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 64, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selector1 = source.getExistingSelector(selector1Name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 65, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selector2 = source.getExistingSelector(selector2Name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector1)) { 	java.lang.String p2 = selector2.currentPath(); 	if (p2 != n[...] ` -topatch--> `if (true) { 	java.lang.String p2 = this.selector2.currentPath(); 	if (p2 != null) { 		if (this.selec[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector1)) { 	java.lang.String p2 = selector2.currentPath(); 	if (p2 != n[...] ` -topatch--> `if (false) { 	java.lang.String p2 = this.selector2.currentPath(); 	if (p2 != null) { 		if (this.sele[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector1)) { 	java.lang.String p2 = selector2.currentPath(); 	if (p2 != n[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p2 != null) { 	if (selector2Path.equals(".")) { 		f.restrictPath(p2, org.apache.jackrabbit.oak.s[...] ` -topatch--> `if (true) { 	if (this.selector2Path.equals(".")) { 		f.restrictPath(p2, org.apache.jackrabbit.oak.sp[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p2 != null) { 	if (selector2Path.equals(".")) { 		f.restrictPath(p2, org.apache.jackrabbit.oak.s[...] ` -topatch--> `if (false) { 	if (this.selector2Path.equals(".")) { 		f.restrictPath(p2, org.apache.jackrabbit.oak.s[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p2 != null) { 	if (selector2Path.equals(".")) { 		f.restrictPath(p2, org.apache.jackrabbit.oak.s[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 94, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector2)) { 	java.lang.String p1 = selector1.currentPath(); 	if (p1 != n[...] ` -topatch--> `if (true) { 	java.lang.String p1 = this.selector1.currentPath(); 	if (p1 != null) { 		if (this.selec[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 94, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector2)) { 	java.lang.String p1 = selector1.currentPath(); 	if (p1 != n[...] ` -topatch--> `if (false) { 	java.lang.String p1 = this.selector1.currentPath(); 	if (p1 != null) { 		if (this.sele[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl line: 94, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector2)) { 	java.lang.String p1 = selector1.currentPath(); 	if (p1 != n[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 80, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `p2 = org.apache.jackrabbit.oak.spi.query.PropertyValues.convert(p2, v1Type, query.getNamePathMapper([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p2 == null) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p2 == null) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p2 == null) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 173, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.jackrabbit.oak.spi.query.PropertyValues.contains(p1.getValue(org.apache.jackrabbit[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 189, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (i1.hasNext()) { 	int compare = i1.next().compareTo(p2); 	if (compare == 0) { 		return true; 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (compare == 0) { 	return true; } ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (compare == 0) { 	return true; } ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (compare == 0) { 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 192, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 234, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (targetType) { 	case javax.jcr.PropertyType.STRING : 		return org.apache.jackrabbit.oak.spi.q[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 218, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 219, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.bindSelector(source) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 102, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tree == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 102, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tree == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 102, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tree == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (relative) { 	for (java.lang.String p : org.apache.jackrabbit.oak.commons.PathUtils.elements(org.[...] ` -topatch--> `if (true) { 	for (java.lang.String p : org.apache.jackrabbit.oak.commons.PathUtils.elements(org.apac[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (relative) { 	for (java.lang.String p : org.apache.jackrabbit.oak.commons.PathUtils.elements(org.[...] ` -topatch--> `if (false) { 	for (java.lang.String p : org.apache.jackrabbit.oak.commons.PathUtils.elements(org.apa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (relative) { 	for (java.lang.String p : org.apache.jackrabbit.oak.commons.PathUtils.elements(org.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!asterisk) { 	java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(proper[...] ` -topatch--> `if (true) { 	java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(this.proper[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!asterisk) { 	java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(proper[...] ` -topatch--> `if (false) { 	java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(this.prope[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!asterisk) { 	java.lang.String name = org.apache.jackrabbit.oak.commons.PathUtils.getName(proper[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (state == null) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (state == null) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (state == null) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 157, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((propertyType) == (javax.jcr.PropertyType.UNDEFINED)) { 	return true; } ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 157, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((propertyType) == (javax.jcr.PropertyType.UNDEFINED)) { 	return true; } ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 157, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((propertyType) == (javax.jcr.PropertyType.UNDEFINED)) { 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 326, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `it = new org.apache.jackrabbit.oak.query.Query.RowIterator(root, java.lang.Long.MAX_VALUE, 0) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 339, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (it.hasNext()) { 	readCount++; 	org.apache.jackrabbit.oak.query.ResultRowImpl r = it.next(); 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 352, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.util.Collections.sort(list) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 353, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.jackrabbit.oak.query.Query.keepFirst(list, keep) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 355, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `it = list.iterator() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 358, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; (i < (offset)) && (it.hasNext()); i++) { 	it.next(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 361, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `size = (list.size()) - (offset) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 362, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (measure) { 	while (it.hasNext()) { 		readCount++; 		it.next(); 	}  } ` -topatch--> `if (true) { 	while (it.hasNext()) { 		readCount++; 		it.next(); 	}  }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 362, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (measure) { 	while (it.hasNext()) { 		readCount++; 		it.next(); 	}  } ` -topatch--> `if (false) { 	while (it.hasNext()) { 		readCount++; 		it.next(); 	}  }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 362, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (measure) { 	while (it.hasNext()) { 		readCount++; 		it.next(); 	}  } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 405, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((list.size()) > keep) {   	list.remove(((list.size()) - 1)); }  ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 338, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lowerBounds = upperBound = lower ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 339, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 119, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String s : v1.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS)) { 	if (like.match[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (like.matches(s)) { 	return true; } ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (like.matches(s)) { 	return true; } ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (like.matches(s)) { 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 160, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `operand1.restrict(f, org.apache.jackrabbit.oak.query.ast.Operator.EQUAL, v) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SelectorImpl line: 173, pointed element: CtContinueImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtContinueImpl) `continue ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.LowerCaseImpl line: 69, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `operand.restrict(f, org.apache.jackrabbit.oak.query.ast.Operator.NOT_EQUAL, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeImpl line: 57, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selector = source.getExistingSelector(selectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeImpl line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector)) { 	java.lang.String p = validateAndNormalizePath(path); 	f.rest[...] ` -topatch--> `if (true) { 	java.lang.String p = validateAndNormalizePath(this.path); 	f.restrictPath(p, org.apache[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeImpl line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector)) { 	java.lang.String p = validateAndNormalizePath(path); 	f.rest[...] ` -topatch--> `if (false) { 	java.lang.String p = validateAndNormalizePath(this.path); 	f.restrictPath(p, org.apach[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeImpl line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector)) { 	java.lang.String p = validateAndNormalizePath(path); 	f.rest[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeImpl line: 64, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `f.restrictPath(p, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.EXACT) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeImpl line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	s.restrictSelector(this); } ` -topatch--> `if (true) { 	s.restrictSelector(this); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeImpl line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	s.restrictSelector(this); } ` -topatch--> `if (false) { 	s.restrictSelector(this); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeImpl line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	s.restrictSelector(this); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SameNodeImpl line: 72, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.restrictSelector(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 53, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selector = source.getExistingSelector(selectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (v == null) { 	return; } ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (v == null) { 	return; } ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (v == null) { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.jackrabbit.oak.query.ast.NodeNameImpl.isName(v))) { 	throw new java.lang.IllegalArg[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException(("Invalid name value: " + (v.toString())))[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.jackrabbit.oak.query.ast.NodeNameImpl.isName(v))) { 	throw new java.lang.IllegalArg[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException(("Invalid name value: " + (v.toString()))[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.jackrabbit.oak.query.ast.NodeNameImpl.isName(v))) { 	throw new java.lang.IllegalArg[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 79, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `path = decodeName(path) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path)) { 	throw new java.lang.IllegalArgu[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException(("NAME() comparison with absolute path are[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path)) { 	throw new java.lang.IllegalArgu[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException(("NAME() comparison with absolute path ar[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path)) { 	throw new java.lang.IllegalArgu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.jackrabbit.oak.commons.PathUtils.getDepth(path)) > 1) { 	throw new java.lang.Illegal[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException(("NAME() comparison with relative path are[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.jackrabbit.oak.commons.PathUtils.getDepth(path)) > 1) { 	throw new java.lang.Illegal[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException(("NAME() comparison with relative path ar[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.apache.jackrabbit.oak.commons.PathUtils.getDepth(path)) > 1) { 	throw new java.lang.Illegal[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 96, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `path = org.apache.jackrabbit.util.ISO9075.decode(path) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 98, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `path = org.apache.jackrabbit.oak.spi.query.PropertyValues.getOakPath(path, query.getNamePathMapper()[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 110, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (v.getType().tag()) { 	case javax.jcr.PropertyType.DATE : 	case javax.jcr.PropertyType.DECIMA[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((n.startsWith("[")) && (!(n.endsWith("]")))) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((n.startsWith("[")) && (!(n.endsWith("]")))) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NodeNameImpl line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((n.startsWith("[")) && (!(n.endsWith("]")))) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 50, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `listener.root() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SourceImpl line: 94, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.outerJoin = outerJoin ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AstVisitorBase line: 103, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.getConstraint1().accept(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AstVisitorBase line: 104, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.getConstraint2().accept(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 42, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 42, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 42, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 46, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (path == null) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 46, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (path == null) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 46, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (path == null) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 209, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read("OUTER") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 210, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `joinType = org.apache.jackrabbit.oak.query.ast.JoinType.RIGHT_OUTER ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 212, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read("OUTER") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 213, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `joinType = org.apache.jackrabbit.oak.query.ast.JoinType.LEFT_OUTER ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 245, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read(",") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 246, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.childNodeJoinCondition(childSelector, readName()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 247, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISDESCENDANTNODE".equalsIgnoreCase(name)) { 	java.lang.String descendantSelector = readName(); [...] ` -topatch--> `if (true) { 	java.lang.String descendantSelector = readName(); 	read(","); 	c = this.factory.descend[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 247, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISDESCENDANTNODE".equalsIgnoreCase(name)) { 	java.lang.String descendantSelector = readName(); [...] ` -topatch--> `if (false) { 	java.lang.String descendantSelector = readName(); 	read(","); 	c = this.factory.descen[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 247, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISDESCENDANTNODE".equalsIgnoreCase(name)) { 	java.lang.String descendantSelector = readName(); [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 249, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read(",") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 250, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.descendantNodeJoinCondition(descendantSelector, readName()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 270, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `a = factory.or(a, parseAnd()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 332, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LESS_THAN, parseStaticOper[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 399, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read(",") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 400, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.fullTextSearch( getOnlySelectorName(), null, parseStaticOperand()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 411, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(".")) { 	if (readIf("*")) { 		read(","); 		c = factory.fullTextSearch( 		name, null, pars[...] ` -topatch--> `if (true) { 	if (readIf("*")) { 		read(","); 		c = this.factory.fullTextSearch( 		name, null, parseS[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 411, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(".")) { 	if (readIf("*")) { 		read(","); 		c = factory.fullTextSearch( 		name, null, pars[...] ` -topatch--> `if (false) { 	if (readIf("*")) { 		read(","); 		c = this.factory.fullTextSearch( 		name, null, parse[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 411, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(".")) { 	if (readIf("*")) { 		read(","); 		c = factory.fullTextSearch( 		name, null, pars[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 424, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read(",") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 425, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.fullTextSearch( getOnlySelectorName(), name,  parseStaticOperand()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 432, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(",")) { 	c = factory.sameNode(name, readAbsolutePath()); }else { 	c = factory.sameNode(ge[...] ` -topatch--> `if (true) { 	c = this.factory.sameNode(name, readAbsolutePath()); }else { 	c = this.factory.sameNode[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 432, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(",")) { 	c = factory.sameNode(name, readAbsolutePath()); }else { 	c = factory.sameNode(ge[...] ` -topatch--> `if (false) { 	c = this.factory.sameNode(name, readAbsolutePath()); }else { 	c = this.factory.sameNod[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 432, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(",")) { 	c = factory.sameNode(name, readAbsolutePath()); }else { 	c = factory.sameNode(ge[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 433, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.sameNode(name, readAbsolutePath()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 437, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISCHILDNODE".equalsIgnoreCase(functionName)) { 	java.lang.String name = readName(); 	if (readIf[...] ` -topatch--> `if (true) { 	java.lang.String name = readName(); 	if (readIf(",")) { 		c = this.factory.childNode(na[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 437, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISCHILDNODE".equalsIgnoreCase(functionName)) { 	java.lang.String name = readName(); 	if (readIf[...] ` -topatch--> `if (false) { 	java.lang.String name = readName(); 	if (readIf(",")) { 		c = this.factory.childNode(n[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 437, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISCHILDNODE".equalsIgnoreCase(functionName)) { 	java.lang.String name = readName(); 	if (readIf[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 474, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return parseExpressionFunction(name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 485, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isToken(")")) { 	op = factory.nodeName(getOnlySelectorName()); }else { 	op = factory.nodeName(re[...] ` -topatch--> `if (true) { 	op = this.factory.nodeName(getOnlySelectorName()); }else { 	op = this.factory.nodeName([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 485, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isToken(")")) { 	op = factory.nodeName(getOnlySelectorName()); }else { 	op = factory.nodeName(re[...] ` -topatch--> `if (false) { 	op = this.factory.nodeName(getOnlySelectorName()); }else { 	op = this.factory.nodeName[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 485, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isToken(")")) { 	op = factory.nodeName(getOnlySelectorName()); }else { 	op = factory.nodeName(re[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 503, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `op = factory.lowerCase(parseDynamicOperand()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 505, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `op = factory.upperCase(parseDynamicOperand()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 529, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 530, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentTokenType) != (org.apache.jackrabbit.oak.query.SQL2Parser.VALUE)) { 	throw getSyntaxErro[...] ` -topatch--> `if (true) { 	throw getSyntaxError("number"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 530, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentTokenType) != (org.apache.jackrabbit.oak.query.SQL2Parser.VALUE)) { 	throw getSyntaxErro[...] ` -topatch--> `if (false) { 	throw getSyntaxError("number"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 530, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((currentTokenType) != (org.apache.jackrabbit.oak.query.SQL2Parser.VALUE)) { 	throw getSyntaxErro[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 534, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (valueType) { 	case javax.jcr.PropertyType.LONG : 		currentValue = org.apache.jackrabbit.oak.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 676, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ordering = factory.descending(op) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1092, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((expected) == null) || (expected.isEmpty())) { 	return getSyntaxError(null); }else { 	java.lang[...] ` -topatch--> `if (true) { 	return getSyntaxError(null); }else { 	java.lang.StringBuilder buff = new java.lang.Stri[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1092, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((expected) == null) || (expected.isEmpty())) { 	return getSyntaxError(null); }else { 	java.lang[...] ` -topatch--> `if (false) { 	return getSyntaxError(null); }else { 	java.lang.StringBuilder buff = new java.lang.Str[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1092, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((expected) == null) || (expected.isEmpty())) { 	return getSyntaxError(null); }else { 	java.lang[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1096, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String exp : expected) { 	if ((buff.length()) > 0) { 		buff.append(", "); 	} 	buff.ap[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1097, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((buff.length()) > 0) { 	buff.append(", "); } ` -topatch--> `if (true) { 	buff.append(", "); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1097, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((buff.length()) > 0) { 	buff.append(", "); } ` -topatch--> `if (false) { 	buff.append(", "); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1097, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((buff.length()) > 0) { 	buff.append(", "); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1098, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buff.append(", ") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1100, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buff.append(exp) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1102, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return getSyntaxError(buff.toString()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (expected != null) { 	query += "; expected: " + expected; } ` -topatch--> `if (true) { 	query += "; expected: " + expected; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (expected != null) { 	query += "; expected: " + expected; } ` -topatch--> `if (false) { 	query += "; expected: " + expected; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (expected != null) { 	query += "; expected: " + expected; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 1110, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `query += "; expected: " + expected ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p1 == null) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p1 == null) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p1 == null) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p2 == null) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p2 == null) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p2 == null) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(p1.isArray())) && (!(p2.isArray()))) {  	return org.apache.jackrabbit.oak.spi.query.PropertyV[...] ` -topatch--> `if (true) {  	return org.apache.jackrabbit.oak.spi.query.PropertyValues.match(p1, p2); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(p1.isArray())) && (!(p2.isArray()))) {  	return org.apache.jackrabbit.oak.spi.query.PropertyV[...] ` -topatch--> `if (false) {  	return org.apache.jackrabbit.oak.spi.query.PropertyValues.match(p1, p2); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(p1.isArray())) && (!(p2.isArray()))) {  	return org.apache.jackrabbit.oak.spi.query.PropertyV[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(p1.isArray())) {  	f.restrictProperty(property2Name, org.apache.jackrabbit.oak.query.ast.Opera[...] ` -topatch--> `if (true) {  	f.restrictProperty(this.property2Name, org.apache.jackrabbit.oak.query.ast.Operator.EQ[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(p1.isArray())) {  	f.restrictProperty(property2Name, org.apache.jackrabbit.oak.query.ast.Opera[...] ` -topatch--> `if (false) {  	f.restrictProperty(this.property2Name, org.apache.jackrabbit.oak.query.ast.Operator.E[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(p1.isArray())) {  	f.restrictProperty(property2Name, org.apache.jackrabbit.oak.query.ast.Opera[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 112, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `f.restrictProperty(property2Name, org.apache.jackrabbit.oak.query.ast.Operator.EQUAL, p1) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 357, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mapper == null) {  	return jcrPath; } ` -topatch--> `if (true) {  	return jcrPath; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 357, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mapper == null) {  	return jcrPath; } ` -topatch--> `if (false) {  	return jcrPath; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 357, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (mapper == null) {  	return jcrPath; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 359, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return jcrPath ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 129, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 130, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.bindSelector(source) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 149, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 150, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.bindSelector(source) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 190, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 191, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.bindSelector(source) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 211, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 212, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.bindSelector(source) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 242, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 248, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NotImpl line: 68, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl line: 54, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `descendantSelector = source.getExistingSelector(descendantSelectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl line: 55, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ancestorSelector = source.getExistingSelector(ancestorSelectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (ancestorSelector)) { 	java.lang.String d = descendantSelector.currentPath([...] ` -topatch--> `if (true) { 	java.lang.String d = this.descendantSelector.currentPath(); 	if (d != null) { 		f.restr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (ancestorSelector)) { 	java.lang.String d = descendantSelector.currentPath([...] ` -topatch--> `if (false) { 	java.lang.String d = this.descendantSelector.currentPath(); 	if (d != null) { 		f.rest[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (ancestorSelector)) { 	java.lang.String d = descendantSelector.currentPath([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (descendantSelector)) { 	java.lang.String a = ancestorSelector.currentPath([...] ` -topatch--> `if (true) { 	java.lang.String a = this.ancestorSelector.currentPath(); 	if (a != null) { 		f.restric[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (descendantSelector)) { 	java.lang.String a = ancestorSelector.currentPath([...] ` -topatch--> `if (false) { 	java.lang.String a = this.ancestorSelector.currentPath(); 	if (a != null) { 		f.restri[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (descendantSelector)) { 	java.lang.String a = ancestorSelector.currentPath([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (a != null) { 	f.restrictPath(a, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIREC[...] ` -topatch--> `if (true) { 	f.restrictPath(a, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIRECT_CHI[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (a != null) { 	f.restrictPath(a, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIREC[...] ` -topatch--> `if (false) { 	f.restrictPath(a, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIRECT_CH[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (a != null) { 	f.restrictPath(a, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIREC[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.UpperCaseImpl line: 69, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `operand.restrict(f, org.apache.jackrabbit.oak.query.ast.Operator.NOT_EQUAL, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 126, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector)) { 	f.restrictProperty(propertyName, org.apache.jackrabbit.oak.q[...] ` -topatch--> `if (true) { 	f.restrictProperty(this.propertyName, org.apache.jackrabbit.oak.query.ast.Operator.NOT_[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 126, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector)) { 	f.restrictProperty(propertyName, org.apache.jackrabbit.oak.q[...] ` -topatch--> `if (false) { 	f.restrictProperty(this.propertyName, org.apache.jackrabbit.oak.query.ast.Operator.NOT[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 126, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector)) { 	f.restrictProperty(propertyName, org.apache.jackrabbit.oak.q[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 127, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `f.restrictProperty(propertyName, org.apache.jackrabbit.oak.query.ast.Operator.NOT_EQUAL, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 120, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.root = root ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 121, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `leftNeedExecute = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 122, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `end = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (end) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (end) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (end) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (leftNeedExecute) { 	left.execute(root); 	leftNeedExecute = false; 	leftNeedNext = true; } ` -topatch--> `if (true) { 	this.left.execute(this.root); 	this.leftNeedExecute = false; 	this.leftNeedNext = true;[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 26151
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (leftNeedExecute) { 	left.execute(root); 	leftNeedExecute = false; 	leftNeedNext = true; } ` -topatch--> `if (false) { 	this.left.execute(this.root); 	this.leftNeedExecute = false; 	this.leftNeedNext = true[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (leftNeedExecute) { 	left.execute(root); 	leftNeedExecute = false; 	leftNeedNext = true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 131, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `left.execute(root) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 132, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `leftNeedExecute = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 26223
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 133, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `leftNeedNext = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (leftNeedNext) { 	if (!(left.next())) { 		end = true; 		return false; 	} 	leftNeedNext = false; 	[...] ` -topatch--> `if (true) { 	if (!(this.left.next())) { 		this.end = true; 		return false; 	} 	this.leftNeedNext = f[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (leftNeedNext) { 	if (!(left.next())) { 		end = true; 		return false; 	} 	leftNeedNext = false; 	[...] ` -topatch--> `if (false) { 	if (!(this.left.next())) { 		this.end = true; 		return false; 	} 	this.leftNeedNext = [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 26275
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (leftNeedNext) { 	if (!(left.next())) { 		end = true; 		return false; 	} 	leftNeedNext = false; 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 26295
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(left.next())) { 	end = true; 	return false; } ` -topatch--> `if (true) { 	this.end = true; 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(left.next())) { 	end = true; 	return false; } ` -topatch--> `if (false) { 	this.end = true; 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 26331
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(left.next())) { 	end = true; 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 26351
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 138, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `end = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 139, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 26387
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 141, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `leftNeedNext = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 142, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `rightNeedExecute = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rightNeedExecute) { 	right.execute(root); 	foundJoinedRow = false; 	rightNeedExecute = false; } ` -topatch--> `if (true) { 	this.right.execute(this.root); 	this.foundJoinedRow = false; 	this.rightNeedExecute = f[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 26441
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rightNeedExecute) { 	right.execute(root); 	foundJoinedRow = false; 	rightNeedExecute = false; } ` -topatch--> `if (false) { 	this.right.execute(this.root); 	this.foundJoinedRow = false; 	this.rightNeedExecute = [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (rightNeedExecute) { 	right.execute(root); 	foundJoinedRow = false; 	rightNeedExecute = false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 145, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `right.execute(root) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 146, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `foundJoinedRow = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 147, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `rightNeedExecute = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 26527
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 149, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(right.next())) { 	leftNeedNext = true; }else { 	if (joinCondition.evaluate()) { 		foundJoinedR[...] ` -topatch--> `if (true) { 	this.leftNeedNext = true; }else { 	if (this.joinCondition.evaluate()) { 		this.foundJoi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 149, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(right.next())) { 	leftNeedNext = true; }else { 	if (joinCondition.evaluate()) { 		foundJoinedR[...] ` -topatch--> `if (false) { 	this.leftNeedNext = true; }else { 	if (this.joinCondition.evaluate()) { 		this.foundJo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 26563
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 149, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(right.next())) { 	leftNeedNext = true; }else { 	if (joinCondition.evaluate()) { 		foundJoinedR[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 26583
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 150, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `leftNeedNext = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 26603
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 152, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (joinCondition.evaluate()) { 	foundJoinedRow = true; 	return true; } ` -topatch--> `if (true) { 	this.foundJoinedRow = true; 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 152, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (joinCondition.evaluate()) { 	foundJoinedRow = true; 	return true; } ` -topatch--> `if (false) { 	this.foundJoinedRow = true; 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 152, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (joinCondition.evaluate()) { 	foundJoinedRow = true; 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 153, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `foundJoinedRow = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 154, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 159, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((right.outerJoin) && (leftNeedNext)) && (!(foundJoinedRow))) { 	return true; } ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 159, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((right.outerJoin) && (leftNeedNext)) && (!(foundJoinedRow))) { 	return true; } ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 159, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((right.outerJoin) && (leftNeedNext)) && (!(foundJoinedRow))) { 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 160, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl line: 52, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `parentSelector = source.getExistingSelector(parentSelectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl line: 53, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `childSelector = source.getExistingSelector(childSelectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (parentSelector)) { 	java.lang.String c = childSelector.currentPath(); 	if [...] ` -topatch--> `if (true) { 	java.lang.String c = this.childSelector.currentPath(); 	if (c != null) { 		f.restrictPa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (parentSelector)) { 	java.lang.String c = childSelector.currentPath(); 	if [...] ` -topatch--> `if (false) { 	java.lang.String c = this.childSelector.currentPath(); 	if (c != null) { 		f.restrictP[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (parentSelector)) { 	java.lang.String c = childSelector.currentPath(); 	if [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (childSelector)) { 	java.lang.String p = parentSelector.currentPath(); 	if [...] ` -topatch--> `if (true) { 	java.lang.String p = this.parentSelector.currentPath(); 	if (p != null) { 		f.restrictP[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (childSelector)) { 	java.lang.String p = parentSelector.currentPath(); 	if [...] ` -topatch--> `if (false) { 	java.lang.String p = this.parentSelector.currentPath(); 	if (p != null) { 		f.restrict[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (childSelector)) { 	java.lang.String p = parentSelector.currentPath(); 	if [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p != null) { 	f.restrictPath(p, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIREC[...] ` -topatch--> `if (true) { 	f.restrictPath(p, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIRECT_CHI[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p != null) { 	f.restrictPath(p, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIREC[...] ` -topatch--> `if (false) { 	f.restrictPath(p, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIRECT_CH[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p != null) { 	f.restrictPath(p, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIREC[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 220, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (; pi < (patternLength); pi++) { 	int type = types[pi]; 	switch (type) { 		case org.apache.jackr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 222, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (type) { 	case org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.MATCH : 		if (([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 225, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 266, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (i >= (len - 1)) { 	invalidPattern = true; 	return; } ` -topatch--> `if (true) { 	this.invalidPattern = true; 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 266, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (i >= (len - 1)) { 	invalidPattern = true; 	return; } ` -topatch--> `if (false) { 	this.invalidPattern = true; 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 266, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (i >= (len - 1)) { 	invalidPattern = true; 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 270, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = p.charAt((++i)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 271, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `type = org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.MATCH ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 272, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastAny = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 326, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SelectorImpl line: 246, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeImpl line: 50, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selector = source.getExistingSelector(selectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeImpl line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((selector) == (f.getSelector())) { 	java.lang.String path = validateAndNormalizePath(parentPath)[...] ` -topatch--> `if (true) { 	java.lang.String path = validateAndNormalizePath(this.parentPath); 	f.restrictPath(path[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeImpl line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((selector) == (f.getSelector())) { 	java.lang.String path = validateAndNormalizePath(parentPath)[...] ` -topatch--> `if (false) { 	java.lang.String path = validateAndNormalizePath(this.parentPath); 	f.restrictPath(pat[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeImpl line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((selector) == (f.getSelector())) { 	java.lang.String path = validateAndNormalizePath(parentPath)[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeImpl line: 70, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `f.restrictPath(path, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIRECT_CHILDREN) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeImpl line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	s.restrictSelector(this); } ` -topatch--> `if (true) { 	s.restrictSelector(this); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeImpl line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	s.restrictSelector(this); } ` -topatch--> `if (false) { 	s.restrictSelector(this); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeImpl line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	s.restrictSelector(this); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ChildNodeImpl line: 77, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.restrictSelector(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ResultRowImpl line: 68, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(values, 0, v2, 0, values.length) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 234, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISSAMENODE".equalsIgnoreCase(name)) { 	java.lang.String selector1 = readName(); 	read(","); 	ja[...] ` -topatch--> `if (true) { 	java.lang.String selector1 = readName(); 	read(","); 	java.lang.String selector2 = read[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 234, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISSAMENODE".equalsIgnoreCase(name)) { 	java.lang.String selector1 = readName(); 	read(","); 	ja[...] ` -topatch--> `if (false) { 	java.lang.String selector1 = readName(); 	read(","); 	java.lang.String selector2 = rea[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 234, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISSAMENODE".equalsIgnoreCase(name)) { 	java.lang.String selector1 = readName(); 	read(","); 	ja[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 254, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read(")") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 255, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return c ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 258, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read(".") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 260, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read("=") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 262, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read(".") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 263, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return factory.equiJoinCondition(selector1, property1, selector2, readName()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 286, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `a = factory.not(parseCondition()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 288, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `a = parseConstraint() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 289, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read(")") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 330, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.NOT_EQUAL, parseStaticOper[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 439, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(",")) { 	c = factory.childNode(name, readAbsolutePath()); }else { 	c = factory.childNode([...] ` -topatch--> `if (true) { 	c = this.factory.childNode(name, readAbsolutePath()); }else { 	c = this.factory.childNo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 439, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(",")) { 	c = factory.childNode(name, readAbsolutePath()); }else { 	c = factory.childNode([...] ` -topatch--> `if (false) { 	c = this.factory.childNode(name, readAbsolutePath()); }else { 	c = this.factory.childN[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 439, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(",")) { 	c = factory.childNode(name, readAbsolutePath()); }else { 	c = factory.childNode([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 440, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.childNode(name, readAbsolutePath()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 444, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISDESCENDANTNODE".equalsIgnoreCase(functionName)) { 	java.lang.String name = readName(); 	if (r[...] ` -topatch--> `if (true) { 	java.lang.String name = readName(); 	if (readIf(",")) { 		c = this.factory.descendantNo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 444, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISDESCENDANTNODE".equalsIgnoreCase(functionName)) { 	java.lang.String name = readName(); 	if (r[...] ` -topatch--> `if (false) { 	java.lang.String name = readName(); 	if (readIf(",")) { 		c = this.factory.descendantN[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 444, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ("ISDESCENDANTNODE".equalsIgnoreCase(functionName)) { 	java.lang.String name = readName(); 	if (r[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 924, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `i++ ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 953, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = chars[i] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 27450
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 954, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c < '0') || (c > '9')) { 	if (c == '.') { 		readDecimal(start, i); 		break; 	} 	if ((c == 'E') [...] ` -topatch--> `if (true) { 	if (c == '.') { 		readDecimal(start, i); 		break; 	} 	if ((c == 'E') || (c == 'e')) { 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 954, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c < '0') || (c > '9')) { 	if (c == '.') { 		readDecimal(start, i); 		break; 	} 	if ((c == 'E') [...] ` -topatch--> `if (false) { 	if (c == '.') { 		readDecimal(start, i); 		break; 	} 	if ((c == 'E') || (c == 'e')) { [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 954, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((c < '0') || (c > '9')) { 	if (c == '.') { 		readDecimal(start, i); 		break; 	} 	if ((c == 'E') [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 955, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '.') { 	readDecimal(start, i); 	break; } ` -topatch--> `if (true) { 	readDecimal(start, i); 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 955, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '.') { 	readDecimal(start, i); 	break; } ` -topatch--> `if (false) { 	readDecimal(start, i); 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 955, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '.') { 	readDecimal(start, i); 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 959, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c == 'E') || (c == 'e')) { 	readDecimal(start, i); 	break; } ` -topatch--> `if (true) { 	readDecimal(start, i); 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 959, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c == 'E') || (c == 'e')) { 	readDecimal(start, i); 	break; } ` -topatch--> `if (false) { 	readDecimal(start, i); 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 959, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((c == 'E') || (c == 'e')) { 	readDecimal(start, i); 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 963, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `checkLiterals(false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 964, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentValue = org.apache.jackrabbit.oak.spi.query.PropertyValues.newLong(number) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 965, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentTokenType = org.apache.jackrabbit.oak.query.SQL2Parser.VALUE ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 966, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentToken = "0" ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 967, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `parseIndex = i ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 968, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 57, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selector1 = source.getExistingSelector(selector1Name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 58, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selector2 = source.getExistingSelector(selector2Name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector1)) { 	org.apache.jackrabbit.oak.api.PropertyValue p2 = selector2.[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.oak.api.PropertyValue p2 = this.selector2.currentProperty(this.pr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector1)) { 	org.apache.jackrabbit.oak.api.PropertyValue p2 = selector2.[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.oak.api.PropertyValue p2 = this.selector2.currentProperty(this.p[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector1)) { 	org.apache.jackrabbit.oak.api.PropertyValue p2 = selector2.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector2)) { 	org.apache.jackrabbit.oak.api.PropertyValue p1 = selector1.[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.oak.api.PropertyValue p1 = this.selector1.currentProperty(this.pr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector2)) { 	org.apache.jackrabbit.oak.api.PropertyValue p1 = selector1.[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.oak.api.PropertyValue p1 = this.selector1.currentProperty(this.p[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector2)) { 	org.apache.jackrabbit.oak.api.PropertyValue p1 = selector1.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p1 != null) { 	if (!(p1.isArray())) {  		f.restrictProperty(property2Name, org.apache.jackrabbit[...] ` -topatch--> `if (true) { 	if (!(p1.isArray())) {  		f.restrictProperty(this.property2Name, org.apache.jackrabbit.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p1 != null) { 	if (!(p1.isArray())) {  		f.restrictProperty(property2Name, org.apache.jackrabbit[...] ` -topatch--> `if (false) { 	if (!(p1.isArray())) {  		f.restrictProperty(this.property2Name, org.apache.jackrabbit[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p1 != null) { 	if (!(p1.isArray())) {  		f.restrictProperty(property2Name, org.apache.jackrabbit[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector1)) { 	org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl ex = new org.apac[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl ex = new org.apache.jackrabbi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector1)) { 	org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl ex = new org.apac[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl ex = new org.apache.jackrabb[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector1)) { 	org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl ex = new org.apac[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 123, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ex.bindSelector(s) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 124, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.restrictSelector(ex) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector2)) { 	org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl ex = new org.apac[...] ` -topatch--> `if (true) { 	org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl ex = new org.apache.jackrabbi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector2)) { 	org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl ex = new org.apac[...] ` -topatch--> `if (false) { 	org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl ex = new org.apache.jackrabb[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector2)) { 	org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl ex = new org.apac[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 127, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ex.bindSelector(s) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl line: 128, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.restrictSelector(ex) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 214, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (sourceType == targetType) { 	return value; } ` -topatch--> `if (true) { 	return value; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 214, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (sourceType == targetType) { 	return value; } ` -topatch--> `if (false) { 	return value; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 214, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (sourceType == targetType) { 	return value; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyValues line: 217, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (targetType) { 	case javax.jcr.PropertyType.BINARY : 		org.apache.jackrabbit.oak.api.Blob blo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 122, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 123, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.bindSelector(source) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 156, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 157, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.bindSelector(source) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyValueImpl line: 172, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 313, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setAlwaysFalse() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SelectorImpl line: 235, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SelectorImpl line: 235, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SelectorImpl line: 235, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SelectorImpl line: 239, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (local == null) {  	return null; } ` -topatch--> `if (true) {  	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SelectorImpl line: 239, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (local == null) {  	return null; } ` -topatch--> `if (false) {  	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SelectorImpl line: 239, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (local == null) {  	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SelectorImpl line: 243, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.jackrabbit.oak.spi.query.PropertyValues.newString(local) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 396, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `value = value.toLowerCase() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 397, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((like) != null) { 	return like.matches(value); } ` -topatch--> `if (true) { 	return this.like.matches(value); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 397, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((like) != null) { 	return like.matches(value); } ` -topatch--> `if (false) { 	return this.like.matches(value); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 397, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((like) != null) { 	return like.matches(value); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 400, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (not) { 	return (value.indexOf(filteredText)) < 0; } ` -topatch--> `if (true) { 	return (value.indexOf(this.filteredText)) < 0; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 400, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (not) { 	return (value.indexOf(filteredText)) < 0; } ` -topatch--> `if (false) { 	return (value.indexOf(this.filteredText)) < 0; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 400, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (not) { 	return (value.indexOf(filteredText)) < 0; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.plugins.index.IndexHookManagerDiff line: 291, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `update.propertyDeleted(before) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyStateValue line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (o instanceof org.apache.jackrabbit.oak.spi.query.PropertyStateValue) { 	return (compareTo(((org.[...] ` -topatch--> `if (true) { 	return (compareTo(((org.apache.jackrabbit.oak.spi.query.PropertyStateValue) (o)))) == 0[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyStateValue line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (o instanceof org.apache.jackrabbit.oak.spi.query.PropertyStateValue) { 	return (compareTo(((org.[...] ` -topatch--> `if (false) { 	return (compareTo(((org.apache.jackrabbit.oak.spi.query.PropertyStateValue) (o)))) == [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyStateValue line: 182, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (o instanceof org.apache.jackrabbit.oak.spi.query.PropertyStateValue) { 	return (compareTo(((org.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.PropertyStateValue line: 183, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return (compareTo(((org.apache.jackrabbit.oak.spi.query.PropertyStateValue) (o)))) == 0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexDiff line: 116, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexDiff line: 199, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexUpdate update : getIndexes(before[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 124, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `propertyRestrictions.clear() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 125, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `nodeType = "" ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 126, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `path = "/" ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 127, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `pathRestriction = org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.EXACT ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 128, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `alwaysFalse = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 363, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `path = addedPath ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 364, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `pathRestriction = org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.DIRECT_CHILDREN ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 384, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fulltextConditions.add(condition) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AstVisitorBase line: 51, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.getFullTextSearchExpression().accept(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 340, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LIKE, parseStaticOperand()[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 341, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (supportSQL1) { 	if (readIf("ESCAPE")) { 		org.apache.jackrabbit.oak.query.ast.StaticOperandImpl [...] ` -topatch--> `if (true) { 	if (readIf("ESCAPE")) { 		org.apache.jackrabbit.oak.query.ast.StaticOperandImpl esc = p[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 341, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (supportSQL1) { 	if (readIf("ESCAPE")) { 		org.apache.jackrabbit.oak.query.ast.StaticOperandImpl [...] ` -topatch--> `if (false) { 	if (readIf("ESCAPE")) { 		org.apache.jackrabbit.oak.query.ast.StaticOperandImpl esc = [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 341, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (supportSQL1) { 	if (readIf("ESCAPE")) { 		org.apache.jackrabbit.oak.query.ast.StaticOperandImpl [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 392, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("*")) {       	read(","); 	c = factory.fullTextSearch( 	getOnlySelectorName(), null, pars[...] ` -topatch--> `if (true) {       	read(","); 	c = this.factory.fullTextSearch( 	getOnlySelectorName(), null, parseS[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 392, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("*")) {       	read(","); 	c = factory.fullTextSearch( 	getOnlySelectorName(), null, pars[...] ` -topatch--> `if (false) {       	read(","); 	c = this.factory.fullTextSearch( 	getOnlySelectorName(), null, parse[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 392, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("*")) {       	read(","); 	c = factory.fullTextSearch( 	getOnlySelectorName(), null, pars[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 402, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(".")) { 	if (!(supportSQL1)) { 		throw getSyntaxError("selector name, property name, or *[...] ` -topatch--> `if (true) { 	if (!(this.supportSQL1)) { 		throw getSyntaxError("selector name, property name, or *")[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 402, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(".")) { 	if (!(supportSQL1)) { 		throw getSyntaxError("selector name, property name, or *[...] ` -topatch--> `if (false) { 	if (!(this.supportSQL1)) { 		throw getSyntaxError("selector name, property name, or *"[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 402, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(".")) { 	if (!(supportSQL1)) { 		throw getSyntaxError("selector name, property name, or *[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 152, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `pattern = v.getValue(org.apache.jackrabbit.oak.api.Type.STRING) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 156, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((lowerBound == null) && (upperBound == null)) {  }else 	if (lowerBound.equals(upperBound)) {  		[...] ` -topatch--> `if (true) {  }else 	if (lowerBound.equals(upperBound)) {  		this.operand1.restrict(f, org.apache.jac[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 156, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((lowerBound == null) && (upperBound == null)) {  }else 	if (lowerBound.equals(upperBound)) {  		[...] ` -topatch--> `if (false) {  }else 	if (lowerBound.equals(upperBound)) {  		this.operand1.restrict(f, org.apache.ja[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 156, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((lowerBound == null) && (upperBound == null)) {  }else 	if (lowerBound.equals(upperBound)) {  		[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 158, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lowerBound.equals(upperBound)) {  	operand1.restrict(f, org.apache.jackrabbit.oak.query.ast.Oper[...] ` -topatch--> `if (true) {  	this.operand1.restrict(f, org.apache.jackrabbit.oak.query.ast.Operator.EQUAL, v); }els[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 158, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lowerBound.equals(upperBound)) {  	operand1.restrict(f, org.apache.jackrabbit.oak.query.ast.Oper[...] ` -topatch--> `if (false) {  	this.operand1.restrict(f, org.apache.jackrabbit.oak.query.ast.Operator.EQUAL, v); }el[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 158, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lowerBound.equals(upperBound)) {  	operand1.restrict(f, org.apache.jackrabbit.oak.query.ast.Oper[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (operand1.supportsRangeConditions()) { 	if (lowerBound != null) { 		org.apache.jackrabbit.oak.api[...] ` -topatch--> `if (true) { 	if (lowerBound != null) { 		org.apache.jackrabbit.oak.api.PropertyValue pv = org.apache[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (operand1.supportsRangeConditions()) { 	if (lowerBound != null) { 		org.apache.jackrabbit.oak.api[...] ` -topatch--> `if (false) { 	if (lowerBound != null) { 		org.apache.jackrabbit.oak.api.PropertyValue pv = org.apach[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (operand1.supportsRangeConditions()) { 	if (lowerBound != null) { 		org.apache.jackrabbit.oak.api[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 163, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 164, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.bindSelector(source) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 120, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selector = source.getExistingSelector(selectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((propertyName) != null) { 	if ((f.getSelector()) == (selector)) { 		f.restrictProperty(propertyN[...] ` -topatch--> `if (true) { 	if ((f.getSelector()) == (this.selector)) { 		f.restrictProperty(this.propertyName, org[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((propertyName) != null) { 	if ((f.getSelector()) == (selector)) { 		f.restrictProperty(propertyN[...] ` -topatch--> `if (false) { 	if ((f.getSelector()) == (this.selector)) { 		f.restrictProperty(this.propertyName, or[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((propertyName) != null) { 	if ((f.getSelector()) == (selector)) { 		f.restrictProperty(propertyN[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 130, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `f.restrictFulltextCondition(fullTextSearchExpression.currentValue().getValue(org.apache.jackrabbit.o[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	selector.restrictSelector(this); } ` -topatch--> `if (true) { 	this.selector.restrictSelector(this); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	selector.restrictSelector(this); } ` -topatch--> `if (false) { 	this.selector.restrictSelector(this); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	selector.restrictSelector(this); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 136, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `selector.restrictSelector(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 159, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `p.text = text ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 166, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `or.list.add(parseAnd()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 167, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((parseIndex) < (text.length())) { 	if (text.substring(parseIndex).startsWith("OR ")) { 		pars[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 180, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `and.list.add(parseTerm()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 181, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((parseIndex) < (text.length())) { 	if (text.substring(parseIndex).startsWith("OR ")) { 		brea[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((parseIndex) >= (text.length())) { 	throw getSyntaxError("term"); } ` -topatch--> `if (true) { 	throw getSyntaxError("term"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((parseIndex) >= (text.length())) { 	throw getSyntaxError("term"); } ` -topatch--> `if (false) { 	throw getSyntaxError("term"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 191, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((parseIndex) >= (text.length())) { 	throw getSyntaxError("term"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '-') { 	if ((++(parseIndex)) >= (text.length())) { 		throw getSyntaxError("term"); 	} 	not [...] ` -topatch--> `if (true) { 	if ((++(this.parseIndex)) >= (this.text.length())) { 		throw getSyntaxError("term"); 	}[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '-') { 	if ((++(parseIndex)) >= (text.length())) { 		throw getSyntaxError("term"); 	} 	not [...] ` -topatch--> `if (false) { 	if ((++(this.parseIndex)) >= (this.text.length())) { 		throw getSyntaxError("term"); 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '-') { 	if ((++(parseIndex)) >= (text.length())) { 		throw getSyntaxError("term"); 	} 	not [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '\"') { 	(parseIndex)++; 	while (true) { 		if ((parseIndex) >= (text.length())) { 			throw [...] ` -topatch--> `if (true) { 	(this.parseIndex)++; 	while (true) { 		if ((this.parseIndex) >= (this.text.length())) {[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '\"') { 	(parseIndex)++; 	while (true) { 		if ((parseIndex) >= (text.length())) { 			throw [...] ` -topatch--> `if (false) { 	(this.parseIndex)++; 	while (true) { 		if ((this.parseIndex) >= (this.text.length())) [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '\"') { 	(parseIndex)++; 	while (true) { 		if ((parseIndex) >= (text.length())) { 			throw [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 230, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = text.charAt(((parseIndex)++)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 29408
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '\\') { 	escaped = true; 	if ((parseIndex) >= (text.length())) { 		throw getSyntaxError("es[...] ` -topatch--> `if (true) { 	escaped = true; 	if ((this.parseIndex) >= (this.text.length())) { 		throw getSyntaxErro[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '\\') { 	escaped = true; 	if ((parseIndex) >= (text.length())) { 		throw getSyntaxError("es[...] ` -topatch--> `if (false) { 	escaped = true; 	if ((this.parseIndex) >= (this.text.length())) { 		throw getSyntaxErr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '\\') { 	escaped = true; 	if ((parseIndex) >= (text.length())) { 		throw getSyntaxError("es[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == ' ') { 	break; }else { 	buff.append(c); } ` -topatch--> `if (true) { 	break; }else { 	buff.append(c); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == ' ') { 	break; }else { 	buff.append(c); } ` -topatch--> `if (false) { 	break; }else { 	buff.append(c); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (c == ' ') { 	break; }else { 	buff.append(c); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 241, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buff.append(c) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((buff.length()) == 0) { 	throw getSyntaxError("term"); } ` -topatch--> `if (true) { 	throw getSyntaxError("term"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((buff.length()) == 0) { 	throw getSyntaxError("term"); } ` -topatch--> `if (false) { 	throw getSyntaxError("term"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 245, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((buff.length()) == 0) { 	throw getSyntaxError("term"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.FullTextSearchImpl line: 248, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.String text = buff.toString() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 362, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.not(c) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 252, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `patternLength = 0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 253, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	patternTypes = null; 	patternChars = null; 	return; } ` -topatch--> `if (true) { 	this.patternTypes = null; 	this.patternChars = null; 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 253, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	patternTypes = null; 	patternChars = null; 	return; } ` -topatch--> `if (false) { 	this.patternTypes = null; 	this.patternChars = null; 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 253, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (p == null) { 	patternTypes = null; 	patternChars = null; 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 259, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `patternChars = new char[len] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 260, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `patternTypes = new int[len] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 262, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < len; i++) { 	char c = p.charAt(i); 	int type; 	if (c == '\\') { 		if (i >= (len [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 265, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '\\') { 	if (i >= (len - 1)) { 		invalidPattern = true; 		return; 	} 	c = p.charAt((++i)); [...] ` -topatch--> `if (true) { 	if (i >= (len - 1)) { 		this.invalidPattern = true; 		return; 	} 	c = p.charAt((++i)); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 265, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '\\') { 	if (i >= (len - 1)) { 		invalidPattern = true; 		return; 	} 	c = p.charAt((++i)); [...] ` -topatch--> `if (false) { 	if (i >= (len - 1)) { 		this.invalidPattern = true; 		return; 	} 	c = p.charAt((++i));[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 265, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '\\') { 	if (i >= (len - 1)) { 		invalidPattern = true; 		return; 	} 	c = p.charAt((++i)); [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 273, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '%') { 	if (lastAny) { 		continue; 	} 	type = org.apache.jackrabbit.oak.query.ast.Compariso[...] ` -topatch--> `if (true) { 	if (lastAny) { 		continue; 	} 	type = org.apache.jackrabbit.oak.query.ast.ComparisonImp[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 273, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '%') { 	if (lastAny) { 		continue; 	} 	type = org.apache.jackrabbit.oak.query.ast.Compariso[...] ` -topatch--> `if (false) { 	if (lastAny) { 		continue; 	} 	type = org.apache.jackrabbit.oak.query.ast.ComparisonIm[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 273, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '%') { 	if (lastAny) { 		continue; 	} 	type = org.apache.jackrabbit.oak.query.ast.Compariso[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 274, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastAny) { 	continue; } ` -topatch--> `if (true) { 	continue; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 274, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastAny) { 	continue; } ` -topatch--> `if (false) { 	continue; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 274, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lastAny) { 	continue; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 277, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `type = org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.ANY ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 278, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastAny = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 279, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '_') { 	type = org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.ONE; }else { [...] ` -topatch--> `if (true) { 	type = org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.ONE; }else { 	typ[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 279, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '_') { 	type = org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.ONE; }else { [...] ` -topatch--> `if (false) { 	type = org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.ONE; }else { 	ty[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 279, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (c == '_') { 	type = org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.ONE; }else { [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 282, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `type = org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.MATCH ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 283, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastAny = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 285, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `patternTypes[patternLength] = type ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 286, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `patternChars[((patternLength)++)] = c ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 288, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < ((patternLength) - 1); i++) { 	if (((patternTypes[i]) == (org.apache.jackrabbit.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 289, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((patternTypes[i]) == (org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.ANY)) && ([...] ` -topatch--> `if (true) { 	this.patternTypes[i] = org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.O[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 289, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((patternTypes[i]) == (org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.ANY)) && ([...] ` -topatch--> `if (false) { 	this.patternTypes[i] = org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 289, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((patternTypes[i]) == (org.apache.jackrabbit.oak.query.ast.ComparisonImpl.LikePattern.ANY)) && ([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 294, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `patternString = new java.lang.String(patternChars, 0, patternLength) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 321, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (invalidPattern) { 	return; } ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 321, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (invalidPattern) { 	return; } ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 321, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (invalidPattern) { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 324, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((patternLength) <= 0) || ((patternTypes[0]) != (org.apache.jackrabbit.oak.query.ast.ComparisonI[...] ` -topatch--> `if (true) {  	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 324, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((patternLength) <= 0) || ((patternTypes[0]) != (org.apache.jackrabbit.oak.query.ast.ComparisonI[...] ` -topatch--> `if (false) {  	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 324, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((patternLength) <= 0) || ((patternTypes[0]) != (org.apache.jackrabbit.oak.query.ast.ComparisonI[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 330, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((maxMatch < (patternLength)) && ((patternTypes[maxMatch]) == (org.apache.jackrabbit.oak.query[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 331, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buff.append(patternChars[(maxMatch++)]) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:171) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:173) - Killed the Process that runs JUnit test cases 30170
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 334, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lower.isEmpty()) { 	return; } ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 334, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lower.isEmpty()) { 	return; } ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 334, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lower.isEmpty()) { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (maxMatch == (patternLength)) { 	lowerBounds = upperBound = lower; 	return; } ` -topatch--> `if (true) { 	this.lowerBounds = this.upperBound = lower; 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (maxMatch == (patternLength)) { 	lowerBounds = upperBound = lower; 	return; } ` -topatch--> `if (false) { 	this.lowerBounds = this.upperBound = lower; 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (maxMatch == (patternLength)) { 	lowerBounds = upperBound = lower; 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 341, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lowerBounds = lower ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 345, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i < 2000; i++) { 	java.lang.String upper = (lower.substring(0, ((lower.length()) - 1[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 347, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((upper.compareTo(lower)) > 0) { 	upperBound = upper; 	return; } ` -topatch--> `if (true) { 	this.upperBound = upper; 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 347, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((upper.compareTo(lower)) > 0) { 	upperBound = upper; 	return; } ` -topatch--> `if (false) { 	this.upperBound = upper; 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 347, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((upper.compareTo(lower)) > 0) { 	upperBound = upper; 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 348, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `upperBound = upper ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.ComparisonImpl line: 349, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SelectorImpl line: 102, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `c.restrictPushDown(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SelectorImpl line: 129, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `joinCondition.restrict(f) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SourceImpl line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (forThisSelector) { 	this.joinCondition = joinCondition; } ` -topatch--> `if (true) { 	this.joinCondition = joinCondition; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SourceImpl line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (forThisSelector) { 	this.joinCondition = joinCondition; } ` -topatch--> `if (false) { 	this.joinCondition = joinCondition; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SourceImpl line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (forThisSelector) { 	this.joinCondition = joinCondition; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SourceImpl line: 83, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.joinCondition = joinCondition ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SourceImpl line: 85, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `allJoinConditions.add(joinCondition) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AstVisitorBase line: 60, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.getRight().accept(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AstVisitorBase line: 61, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.getLeft().accept(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AstVisitorBase line: 62, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.getJoinCondition().accept(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AstVisitorBase line: 127, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.apache.jackrabbit.oak.query.ast.OrderingImpl ordering : orderings) { 	ordering.accept(this)[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AstVisitorBase line: 128, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ordering.accept(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 64, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selector = source.getExistingSelector(selectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector)) { 	java.lang.String path = validateAndNormalizePath(ancestorPat[...] ` -topatch--> `if (true) { 	java.lang.String path = validateAndNormalizePath(this.ancestorPath); 	f.restrictPath(pa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector)) { 	java.lang.String path = validateAndNormalizePath(ancestorPat[...] ` -topatch--> `if (false) { 	java.lang.String path = validateAndNormalizePath(this.ancestorPath); 	f.restrictPath(p[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector)) { 	java.lang.String path = validateAndNormalizePath(ancestorPat[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 71, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `f.restrictPath(path, org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction.ALL_CHILDREN) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	s.restrictSelector(this); } ` -topatch--> `if (true) { 	s.restrictSelector(this); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	s.restrictSelector(this); } ` -topatch--> `if (false) { 	s.restrictSelector(this); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	s.restrictSelector(this); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.DescendantNodeImpl line: 78, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.restrictSelector(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 135, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read("BY") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 136, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `orderings = parseOrder() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 194, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `s = currentValue.getValue(org.apache.jackrabbit.oak.api.Type.STRING) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 215, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `joinType = org.apache.jackrabbit.oak.query.ast.JoinType.INNER ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 219, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read("JOIN") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 220, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selector = parseSelector() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 221, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `selectors.add(selector) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 222, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read("ON") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 224, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `source = factory.join(source, selector, joinType, on) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (identifier && (readIf("("))) { 	if ("ISSAMENODE".equalsIgnoreCase(name)) { 		java.lang.String se[...] ` -topatch--> `if (true) { 	if ("ISSAMENODE".equalsIgnoreCase(name)) { 		java.lang.String selector1 = readName(); 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (identifier && (readIf("("))) { 	if ("ISSAMENODE".equalsIgnoreCase(name)) { 		java.lang.String se[...] ` -topatch--> `if (false) { 	if ("ISSAMENODE".equalsIgnoreCase(name)) { 		java.lang.String selector1 = readName(); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (identifier && (readIf("("))) { 	if ("ISSAMENODE".equalsIgnoreCase(name)) { 		java.lang.String se[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 299, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `a = parseCondition(factory.propertyValue(identifier, readName())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 334, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.GREATER_THAN, parseStaticO[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 446, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(",")) { 	c = factory.descendantNode(name, readAbsolutePath()); }else { 	c = factory.desce[...] ` -topatch--> `if (true) { 	c = this.factory.descendantNode(name, readAbsolutePath()); }else { 	c = this.factory.de[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 446, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(",")) { 	c = factory.descendantNode(name, readAbsolutePath()); }else { 	c = factory.desce[...] ` -topatch--> `if (false) { 	c = this.factory.descendantNode(name, readAbsolutePath()); }else { 	c = this.factory.d[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 446, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(",")) { 	c = factory.descendantNode(name, readAbsolutePath()); }else { 	c = factory.desce[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 447, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = factory.descendantNode(name, readAbsolutePath()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 460, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) { 	throw getSyntaxError("absolu[...] ` -topatch--> `if (true) { 	throw getSyntaxError("absolute path"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 460, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) { 	throw getSyntaxError("absolu[...] ` -topatch--> `if (false) { 	throw getSyntaxError("absolute path"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 460, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.apache.jackrabbit.oak.commons.PathUtils.isAbsolute(path))) { 	throw getSyntaxError("absolu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 473, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (identifier && (readIf("("))) { 	return parseExpressionFunction(name); }else { 	return parsePrope[...] ` -topatch--> `if (true) { 	return parseExpressionFunction(name); }else { 	return parsePropertyValue(name); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 473, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (identifier && (readIf("("))) { 	return parseExpressionFunction(name); }else { 	return parsePrope[...] ` -topatch--> `if (false) { 	return parseExpressionFunction(name); }else { 	return parsePropertyValue(name); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 473, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (identifier && (readIf("("))) { 	return parseExpressionFunction(name); }else { 	return parsePrope[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 476, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return parsePropertyValue(name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 553, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 554, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return literal ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 675, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("DESC")) { 	ordering = factory.descending(op); }else { 	readIf("ASC"); 	ordering = factor[...] ` -topatch--> `if (true) { 	ordering = this.factory.descending(op); }else { 	readIf("ASC"); 	ordering = this.factor[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 675, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("DESC")) { 	ordering = factory.descending(op); }else { 	readIf("ASC"); 	ordering = factor[...] ` -topatch--> `if (false) { 	ordering = this.factory.descending(op); }else { 	readIf("ASC"); 	ordering = this.facto[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 675, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("DESC")) { 	ordering = factory.descending(op); }else { 	readIf("ASC"); 	ordering = factor[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 678, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `readIf("ASC") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 679, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ordering = factory.ascending(op) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 681, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `orderList.add(ordering) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 684, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `orderList.toArray(orderings) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 864, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `type = org.apache.jackrabbit.oak.query.SQL2Parser.CHAR_VALUE ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 142, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 143, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.bindSelector(source) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 177, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NotImpl line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f.getSelector().outerJoin) {             	return; } ` -topatch--> `if (true) {             	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NotImpl line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f.getSelector().outerJoin) {             	return; } ` -topatch--> `if (false) {             	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.NotImpl line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (f.getSelector().outerJoin) {             	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AstElement line: 59, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `query.validatePath(path) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 74, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (joinType) { 	case INNER : 		left.addJoinCondition(joinCondition, false); 		right.addJoinCond[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 97, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `left.setQueryConstraint(queryConstraint) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 98, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `right.setQueryConstraint(queryConstraint) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 99, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `right.init(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 100, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `left.init(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 105, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `left.prepare() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 106, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `right.prepare() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == null) { 	s = right.getSelector(selectorName); } ` -topatch--> `if (true) { 	s = this.right.getSelector(selectorName); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == null) { 	s = right.getSelector(selectorName); } ` -topatch--> `if (false) { 	s = this.right.getSelector(selectorName); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s == null) { 	s = right.getSelector(selectorName); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.JoinImpl line: 113, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `s = right.getSelector(selectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 182, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return factory.selector(nodeTypeName, selectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 695, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `column.propertyName = readName() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 696, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(".")) { 	column.selectorName = column.propertyName; 	if (readIf("*")) { 		column.property[...] ` -topatch--> `if (true) { 	column.selectorName = column.propertyName; 	if (readIf("*")) { 		column.propertyName = [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 696, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(".")) { 	column.selectorName = column.propertyName; 	if (readIf("*")) { 		column.property[...] ` -topatch--> `if (false) { 	column.selectorName = column.propertyName; 	if (readIf("*")) { 		column.propertyName =[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 696, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(".")) { 	column.selectorName = column.propertyName; 	if (readIf("*")) { 		column.property[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 707, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("AS")) { 	column.columnName = readName(); } ` -topatch--> `if (true) { 	column.columnName = readName(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 707, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("AS")) { 	column.columnName = readName(); } ` -topatch--> `if (false) { 	column.columnName = readName(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 707, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("AS")) { 	column.columnName = readName(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 711, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `list.add(column) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 732, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c.selectorName) != null) { 	column = factory.column(c.selectorName, c.propertyName, c.columnNam[...] ` -topatch--> `if (true) { 	column = this.factory.column(c.selectorName, c.propertyName, c.columnName); }else 	if ([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 732, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c.selectorName) != null) { 	column = factory.column(c.selectorName, c.propertyName, c.columnNam[...] ` -topatch--> `if (false) { 	column = this.factory.column(c.selectorName, c.propertyName, c.columnName); }else 	if [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 732, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((c.selectorName) != null) { 	column = factory.column(c.selectorName, c.propertyName, c.columnNam[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 734, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c.columnName) != null) { 	column = factory.column(getOnlySelectorName(), c.propertyName, c.colu[...] ` -topatch--> `if (true) { 	column = this.factory.column(getOnlySelectorName(), c.propertyName, c.columnName); }els[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 734, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c.columnName) != null) { 	column = factory.column(getOnlySelectorName(), c.propertyName, c.colu[...] ` -topatch--> `if (false) { 	column = this.factory.column(getOnlySelectorName(), c.propertyName, c.columnName); }el[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 734, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((c.columnName) != null) { 	column = factory.column(getOnlySelectorName(), c.propertyName, c.colu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 737, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `column = factory.column(getOnlySelectorName(), c.propertyName, c.propertyName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 739, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `columns.add(column) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (addedPath == null) {  	addedPath = "/"; } ` -topatch--> `if (true) {  	addedPath = "/"; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (addedPath == null) {  	addedPath = "/"; } ` -topatch--> `if (false) {  	addedPath = "/"; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (addedPath == null) {  	addedPath = "/"; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 281, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (addedPathRestriction) { 	case PARENT : 		switch (pathRestriction) { 			case PARENT :   				b[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.index.FilterImpl line: 335, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `path = addedPath ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.SelectorImpl line: 283, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selectorCondition = new org.apache.jackrabbit.oak.query.ast.AndImpl(selectorCondition, constraint) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AstVisitorBase line: 31, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.getConstraint1().accept(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AstVisitorBase line: 32, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.getConstraint2().accept(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 278, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `a = factory.and(a, parseCondition()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 329, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("<>")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.NOT_E[...] ` -topatch--> `if (true) { 	c = this.factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.NOT_EQUA[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 329, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("<>")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.NOT_E[...] ` -topatch--> `if (false) { 	c = this.factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.NOT_EQU[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 329, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("<>")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.NOT_E[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 331, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("<")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LESS_T[...] ` -topatch--> `if (true) { 	c = this.factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LESS_THA[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 331, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("<")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LESS_T[...] ` -topatch--> `if (false) { 	c = this.factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LESS_TH[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 331, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("<")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LESS_T[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 333, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(">")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.GREATE[...] ` -topatch--> `if (true) { 	c = this.factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.GREATER_[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 333, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(">")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.GREATE[...] ` -topatch--> `if (false) { 	c = this.factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.GREATER[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 333, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(">")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.GREATE[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 335, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("<=")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LESS_[...] ` -topatch--> `if (true) { 	c = this.factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LESS_OR_[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 335, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("<=")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LESS_[...] ` -topatch--> `if (false) { 	c = this.factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LESS_OR[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 335, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("<=")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LESS_[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(">=")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.GREAT[...] ` -topatch--> `if (true) { 	c = this.factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.GREATER_[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(">=")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.GREAT[...] ` -topatch--> `if (false) { 	c = this.factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.GREATER[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf(">=")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.GREAT[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 339, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("LIKE")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LIK[...] ` -topatch--> `if (true) { 	c = this.factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LIKE, pa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 339, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("LIKE")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LIK[...] ` -topatch--> `if (false) { 	c = this.factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LIKE, p[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 339, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("LIKE")) { 	c = factory.comparison(left, org.apache.jackrabbit.oak.query.ast.Operator.LIK[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 353, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("IS")) { 	boolean not = readIf("NOT"); 	read("NULL"); 	if (!(left instanceof org.apache.j[...] ` -topatch--> `if (true) { 	boolean not = readIf("NOT"); 	read("NULL"); 	if (!(left instanceof org.apache.jackrabbi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 353, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("IS")) { 	boolean not = readIf("NOT"); 	read("NULL"); 	if (!(left instanceof org.apache.j[...] ` -topatch--> `if (false) { 	boolean not = readIf("NOT"); 	read("NULL"); 	if (!(left instanceof org.apache.jackrabb[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 353, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("IS")) { 	boolean not = readIf("NOT"); 	read("NULL"); 	if (!(left instanceof org.apache.j[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 355, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read("NULL") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 356, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(left instanceof org.apache.jackrabbit.oak.query.ast.PropertyValueImpl)) { 	throw getSyntaxErro[...] ` -topatch--> `if (true) { 	throw getSyntaxError("propertyName (NOT NULL is only supported for properties)"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 356, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(left instanceof org.apache.jackrabbit.oak.query.ast.PropertyValueImpl)) { 	throw getSyntaxErro[...] ` -topatch--> `if (false) { 	throw getSyntaxError("propertyName (NOT NULL is only supported for properties)"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 356, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(left instanceof org.apache.jackrabbit.oak.query.ast.PropertyValueImpl)) { 	throw getSyntaxErro[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 360, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = getPropertyExistence(p) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 361, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!not) { 	c = factory.not(c); } ` -topatch--> `if (true) { 	c = this.factory.not(c); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 361, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!not) { 	c = factory.not(c); } ` -topatch--> `if (false) { 	c = this.factory.not(c); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 361, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!not) { 	c = factory.not(c); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 364, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("NOT")) { 	if (readIf("IS")) { 		read("NULL"); 		if (!(left instanceof org.apache.jackrab[...] ` -topatch--> `if (true) { 	if (readIf("IS")) { 		read("NULL"); 		if (!(left instanceof org.apache.jackrabbit.oak.q[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 364, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("NOT")) { 	if (readIf("IS")) { 		read("NULL"); 		if (!(left instanceof org.apache.jackrab[...] ` -topatch--> `if (false) { 	if (readIf("IS")) { 		read("NULL"); 		if (!(left instanceof org.apache.jackrabbit.oak.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 364, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readIf("NOT")) { 	if (readIf("IS")) { 		read("NULL"); 		if (!(left instanceof org.apache.jackrab[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 454, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `read(")") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 980, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentTokenType = org.apache.jackrabbit.oak.query.SQL2Parser.KEYWORD ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 981, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `currentToken = "." ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 982, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `parseIndex = i ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.SQL2Parser line: 983, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AndImpl line: 60, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `constraint1.restrict(f) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AndImpl line: 61, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `constraint2.restrict(f) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AndImpl line: 66, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `constraint1.restrictPushDown(s) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.AndImpl line: 67, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `constraint2.restrictPushDown(s) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl line: 53, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selector = source.getExistingSelector(selectorName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl line: 58, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector)) { 	f.restrictProperty(propertyName, org.apache.jackrabbit.oak.q[...] ` -topatch--> `if (true) { 	f.restrictProperty(this.propertyName, org.apache.jackrabbit.oak.query.ast.Operator.NOT_[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl line: 58, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector)) { 	f.restrictProperty(propertyName, org.apache.jackrabbit.oak.q[...] ` -topatch--> `if (false) { 	f.restrictProperty(this.propertyName, org.apache.jackrabbit.oak.query.ast.Operator.NOT[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl line: 58, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((f.getSelector()) == (selector)) { 	f.restrictProperty(propertyName, org.apache.jackrabbit.oak.q[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl line: 59, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `f.restrictProperty(propertyName, org.apache.jackrabbit.oak.query.ast.Operator.NOT_EQUAL, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	s.restrictSelector(this); } ` -topatch--> `if (true) { 	s.restrictSelector(this); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	s.restrictSelector(this); } ` -topatch--> `if (false) { 	s.restrictSelector(this); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s == (selector)) { 	s.restrictSelector(this); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.ast.PropertyExistenceImpl line: 66, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.restrictSelector(this) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 197, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.setQuery(query) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.query.Query line: 198, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `node.bindSelector(source) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 268, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (hasRoot) { 	return false; }else  { 	hasRoot = true; 	return true; } ` -topatch--> `if (true) { 	return false; }else  { 	this.hasRoot = true; 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 268, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (hasRoot) { 	return false; }else  { 	hasRoot = true; 	return true; } ` -topatch--> `if (false) { 	return false; }else  { 	this.hasRoot = true; 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 268, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (hasRoot) { 	return false; }else  { 	hasRoot = true; 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 272, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `hasRoot = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 273, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(listener.root())) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(listener.root())) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(listener.root())) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.namepath.JcrPathParser line: 65, pointed element: CtUnaryOperatorImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `pos++ ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState line: 175, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return base.getProperties() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.jackrabbit.oak.spi.query.Cursors line: 214, pointed element: CtContinueImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtContinueImpl) `continue ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:168) - Time Repair Loop (s): 4325.05
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:234) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:184) - 
 --SOLUTIONS DESCRIPTION--


Astor Output:

General stats:
EXECUTION_IDENTIFIER=Jackrabbit-Oak-61381ea2
TOTAL_TIME=4325.05
NR_GENERATIONS=null
NR_RIGHT_COMPILATIONS=689
NR_FAILLING_COMPILATIONS=97
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=EXHAUSTIVE_NAVIGATED

Patch stats:

[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:103) - Storing ing JSON at /tmp/jKali_Bug_dot_jar_Jackrabbit-Oak_61381ea2/./output_astor/AstorMain-Jackrabbit-Oak-61381ea2//astor_output.json
[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:104) - astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":689,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"Jackrabbit-Oak-61381ea2","OUTPUT_STATUS":"EXHAUSTIVE_NAVIGATED","NR_FAILLING_COMPILATIONS":97,"NR_GENERATIONS":null,"TOTAL_TIME":4325.05,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[]}
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:200) - Time Total(s): 4486.0
9049.06user 188.90system 1:14:47elapsed 205%CPU (0avgtext+0avgdata 1880904maxresident)k
98368inputs+1211240outputs (37major+43903689minor)pagefaults 0swaps


Node: graphene-104.nancy.grid5000.fr



Date: Tue Jan  1 05:00:04 EST 2019

