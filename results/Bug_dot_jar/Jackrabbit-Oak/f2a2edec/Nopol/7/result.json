{
  "repair_end": "2018-12-29 16:37:34.597700", 
  "repair_begin": "2018-12-29 16:35:37.163420", 
  "patches": [
    {
      "nb_test_that_execute_statement": 7, 
      "patchLocation": {
        "line": 121, 
        "class": "org.apache.jackrabbit.oak.namepath.JcrPathParser"
      }, 
      "patchType": "CONDITIONAL", 
      "patch": "--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/namepath/JcrPathParser.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/namepath/JcrPathParser.java\n@@ -120,3 +120,3 @@\n                         state = STATE_PREFIX_START;\n-                    } else if (state == STATE_DOTDOT) {\n+                    } else if (((org.apache.jackrabbit.oak.namepath.JcrPathParser.STATE_INDEX_END < lastPos) || (3 == pos)) && (state == (org.apache.jackrabbit.oak.namepath.JcrPathParser.STATE_DOTDOT))) {\n                         if (!listener.parent()) {\n@@ -127,5 +127,5 @@\n                     } else if (state != STATE_URI\n-                            && !(state == STATE_PREFIX_START && c == EOF)) { // ignore trailing slash\n+                    && !(state == STATE_PREFIX_START && c == EOF)) { // ignore trailing slash\n                         listener.error('\\'' + jcrPath + \"' is not a valid path. '\" + c +\n-                                \"' not a valid name character.\");\n+                        \"' not a valid name character.\");\n                         return false;\n"
    }
  ]
}