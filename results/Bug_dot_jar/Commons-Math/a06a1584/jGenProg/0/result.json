{
  "repair_end": "2019-01-01 17:52:12.543501", 
  "repair_begin": "2019-01-01 16:51:54.119232", 
  "patches": [
    {
      "PATCH_DIFF_ORIG": "\\/var\\/lib\\/oar\\/.batch_job_bashrc: line 5: \\/home\\/tdurieux\\/.bashrc: No such file or directory\\n--- org\\/apache\\/commons\\/math4\\/geometry\\/euclidean\\/threed\\/PolyhedronsSet.java\\n+++ org\\/apache\\/commons\\/math4\\/geometry\\/euclidean\\/threed\\/PolyhedronsSet.java\\n@@ -323,14 +323,14 @@\\n \\t\\t@java.lang.SuppressWarnings(\\\"unchecked\\\")\\n \\t\\tfinal org.apache.commons.math4.geometry.partitioning.BoundaryAttribute<org.apache.commons.math4.geometry.euclidean.threed.Euclidean3D> attribute = \\n \\t\\t((org.apache.commons.math4.geometry.partitioning.BoundaryAttribute<org.apache.commons.math4.geometry.euclidean.threed.Euclidean3D>) (node.getAttribute()));\\n-\\t\\tif (((attribute.getPlusOutside()) != null) && \\n-\\t\\t((((org.apache.commons.math4.geometry.euclidean.threed.SubPlane) (attribute.getPlusOutside())).getRemainingRegion().checkPoint(point2D)) == (org.apache.commons.math4.geometry.partitioning.Region.Location.INSIDE))) {\\n-\\t\\t\\treturn attribute.getPlusOutside();\\n-\\t\\t}\\n+\\n+\\n+\\n+\\n \\t\\tif (((attribute.getPlusInside()) != null) && \\n \\t\\t((((org.apache.commons.math4.geometry.euclidean.threed.SubPlane) (attribute.getPlusInside())).getRemainingRegion().checkPoint(point2D)) == (org.apache.commons.math4.geometry.partitioning.Region.Location.INSIDE))) {\\n \\t\\t\\treturn attribute.getPlusInside();\\n-\\t\\t}\\n+\\t\\t} \\t\\tif (((attribute.getPlusInside()) != null) && ((((org.apache.commons.math4.geometry.euclidean.threed.SubPlane) (attribute.getPlusInside())).getRemainingRegion().checkPoint(point2D)) == (org.apache.commons.math4.geometry.partitioning.Region.Location.INSIDE))) { \\t\\t\\treturn attribute.getPlusInside();}\\n \\t\\treturn null;\\n \\t}\\n \\n\\n", 
      "patchhunks": [
        {
          "MODIFIED_FILE_PATH": "\\/tmp\\/jGenProg_Bug_dot_jar_Commons-Math_a06a1584\\/.\\/output_astor\\/AstorMain-Commons-Math-a06a1584\\/\\/src\\/\\/variant-300_f\\/org\\/apache\\/commons\\/math4\\/geometry\\/euclidean\\/threed\\/PolyhedronsSet.java", 
          "ORIGINAL_CODE": "if (((attribute.getPlusOutside()) != null) && \\n((((org.apache.commons.math4.geometry.euclidean.threed.SubPlane) (attribute.getPlusOutside())).getRemainingRegion().checkPoint(point2D)) == (org.apache.commons.math4.geometry.partitioning.Region.Location.INSIDE))) {\\n\\treturn attribute.getPlusOutside();\\n}", 
          "INGREDIENT_SCOPE": "LOCAL", 
          "PATCH_HUNK_CODE": "if (((attribute.getPlusInside()) != null) && \\n((((org.apache.commons.math4.geometry.euclidean.threed.SubPlane) (attribute.getPlusInside())).getRemainingRegion().checkPoint(point2D)) == (org.apache.commons.math4.geometry.partitioning.Region.Location.INSIDE))) {\\n\\treturn attribute.getPlusInside();\\n}", 
          "INGREDIENT_PARENT": "if (((attribute.getPlusInside()) != null) && \\n((((org.apache.commons.math4.geometry.euclidean.threed.SubPlane) (attribute.getPlusInside())).getRemainingRegion().checkPoint(point2D)) == (org.apache.commons.math4.geometry.partitioning.Region.Location.INSIDE))) {\\n\\treturn attribute.getPlusInside();\\n}", 
          "LOCATION": "org.apache.commons.math4.geometry.euclidean.threed.PolyhedronsSet", 
          "BUGGY_CODE_TYPE": "CtIfImpl|CtBlockImpl", 
          "OPERATOR": "ReplaceOp", 
          "PATH": "\\/tmp\\/jGenProg_Bug_dot_jar_Commons-Math_a06a1584\\/output_astor\\/AstorMain-Commons-Math-a06a1584\\/src\\/default\\/org\\/apache\\/commons\\/math4\\/geometry\\/euclidean\\/threed\\/PolyhedronsSet.java", 
          "LINE": "326", 
          "MP_RANKING": "25", 
          "SUSPICIOUNESS": "1", 
          "PATCH_HUNK_TYPE": "CtIfImpl|CtBlockImpl"
        }
      ], 
      "GENERATION": "150", 
      "VARIANT_ID": "300", 
      "TIME": "1291", 
      "VALIDATION": "|true|0|5859|[]|", 
      "FOLDER_SOLUTION_CODE": "\\/tmp\\/jGenProg_Bug_dot_jar_Commons-Math_a06a1584\\/.\\/output_astor\\/AstorMain-Commons-Math-a06a1584\\/\\/bin\\/\\/variant-300"
    }
  ]
}