cd /tmp/NPEFix_Bug_dot_jar_Commons-Math_cc4ab51e;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/npefix.jar fr.inria.spirals.npefix.main.run.Main \
    --test org.apache.commons.math3.distribution.BinomialDistributionTest \
    --iteration 100 \
	--complianceLevel 7 \
	--workingdirectory . \
	--source src/main/java \
	--classpath target/classes:target/test-classes:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
TernarySplitter  in 507ms
return (r) != null
throw new ModelSpecificationException(LocalizedFormats.INVALID_REGRESSION_OBSERVATION, (x != null ? x.length : 0), 1)
throw new ModelSpecificationException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, (x == null ? 0 : x.length), (y == null ? 0 : y.length))
throw new ModelSpecificationException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, (x == null ? 0 : x.length), (y == null ? 0 : y.length))
this(prototypeStatistics, (prototypeStatistics == null ? null : new SummaryStatistics(prototypeStatistics)))
final boolean usePivotsHeap = (pivotsHeap) != null
return (pending) != null
super((copyArray ? point == null ? null : point.clone() : point), (copyArray ? value == null ? null : value.clone() : value))
super((copyArray ? point == null ? null : point.clone() : point), (copyArray ? value == null ? null : value.clone() : value))
super((copyArray ? point == null ? null : point.clone() : point), (copyArray ? value == null ? null : value.clone() : value))
super((copyArray ? point == null ? null : point.clone() : point), (copyArray ? value == null ? null : value.clone() : value))
return new SubHyperplane.SplitSubHyperplane<Sphere2D>((plus == null ? null : new SubCircle(thisCircle.copySelf(), plus)), (minus == null ? null : new SubCircle(thisCircle.copySelf(), minus)))
return new SubHyperplane.SplitSubHyperplane<Sphere2D>((plus == null ? null : new SubCircle(thisCircle.copySelf(), plus)), (minus == null ? null : new SubCircle(thisCircle.copySelf(), minus)))
throw new DimensionMismatchException((rm == null ? 0 : rm.getRowDimension()), (b == null ? 0 : b.getDimension()))
throw new DimensionMismatchException((rm == null ? 0 : rm.getRowDimension()), (b == null ? 0 : b.getDimension()))
throw new DimensionMismatchException((rm == null ? 0 : rm.getRowDimension()), (b == null ? 0 : b.getDimension()))
throw new DimensionMismatchException((rm == null ? 0 : rm.getRowDimension()), (b == null ? 0 : b.getDimension()))
final boolean closed = (loop[0]) != null
boolean isCollectionLess = (collection != null) && (((collection.size()) + (size())) <= (capacity))
boolean isNotNull = ((markers) != null) && ((that.markers) != null)
boolean isNotNull = ((markers) != null) && ((that.markers) != null)
boolean isNull = ((markers) == null) && ((that.markers) == null)
boolean isNull = ((markers) == null) && ((that.markers) == null)
super((copyArray ? point == null ? null : point.clone() : point), value)
super((copyArray ? point == null ? null : point.clone() : point), value)
return (pending) != null
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return ((key) == null ? (oP.key) == null : key.equals(oP.key)) && ((value) == null ? (oP.value) == null : value.equals(oP.value))
return ((key) == null ? (oP.key) == null : key.equals(oP.key)) && ((value) == null ? (oP.value) == null : value.equals(oP.value))
return ((key) == null ? (oP.key) == null : key.equals(oP.key)) && ((value) == null ? (oP.value) == null : value.equals(oP.value))
return ((key) == null ? (oP.key) == null : key.equals(oP.key)) && ((value) == null ? (oP.value) == null : value.equals(oP.value))
final boolean open = (segment.getStart()) == null
return (1 + ((left) == null ? 0 : left.size())) + ((right) == null ? 0 : right.size())
return (1 + ((left) == null ? 0 : left.size())) + ((right) == null ? 0 : right.size())
return (top) == null
throw new ModelSpecificationException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, (x == null ? 0 : x.length), (y == null ? 0 : y.length))
throw new ModelSpecificationException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, (x == null ? 0 : x.length), (y == null ? 0 : y.length))
final int maxParameters = FastMath.max(parameters, (cache == null ? 0 : cache.length))
final int maxOrder = FastMath.max(order, (cache == null ? 0 : cache[0].length))
CheckNotNull  in 1651ms
ForceNullInit in 585ms
AddImplicitCastChecker --> 45 in 629ms
BeforeDeref --> 19052 (failed:0) in 3710ms
target--> 24574 (failed:0) in 7953ms
TryRegister # Try: 115 in 785ms
Assign --> 11445 (failed: 0) in 6380ms
VarInit --> 8518 in 3006ms
MethodEncapsulation # Method: 6622 in 6333ms
ConstructorEncapsulation # Constructor: 1454 in 3135ms
VariableFor in 1361ms
spoon.compiler.ModelBuildingException: The method intersection(org.apache.commons.math3.geometry.euclidean.threed.Line) in the type Plane is not applicable for the arguments (org.apache.commons.math3.geometry.euclidean.twod.Line) at /tmp/NPEFix_Bug_dot_jar_Commons-Math_cc4ab51e/PolyhedronsSet.java:534
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.report(JDTBasedSpoonCompiler.java:581)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.reportProblems(JDTBasedSpoonCompiler.java:562)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.compile(JDTBasedSpoonCompiler.java:157)
	at fr.inria.spirals.npefix.main.all.Launcher.instrument(Launcher.java:109)
	at fr.inria.spirals.npefix.main.run.Main.run(Main.java:61)
	at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)
Exception in thread "main" spoon.compiler.ModelBuildingException: The method intersection(org.apache.commons.math3.geometry.euclidean.threed.Line) in the type Plane is not applicable for the arguments (org.apache.commons.math3.geometry.euclidean.twod.Line) at /tmp/NPEFix_Bug_dot_jar_Commons-Math_cc4ab51e/PolyhedronsSet.java:534
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.report(JDTBasedSpoonCompiler.java:581)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.reportProblems(JDTBasedSpoonCompiler.java:562)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.compile(JDTBasedSpoonCompiler.java:157)
	at fr.inria.spirals.npefix.main.all.Launcher.instrument(Launcher.java:109)
	at fr.inria.spirals.npefix.main.run.Main.run(Main.java:61)
	at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)
Command exited with non-zero status 1
315.11user 3.05system 2:46.28elapsed 191%CPU (0avgtext+0avgdata 2277952maxresident)k
18912inputs+64576outputs (1major+636834minor)pagefaults 0swaps


Node: petitprince-4.luxembourg.grid5000.fr



Date: Sat Dec 29 17:36:31 EST 2018

