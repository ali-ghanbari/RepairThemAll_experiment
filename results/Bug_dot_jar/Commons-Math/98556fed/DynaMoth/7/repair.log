cd /tmp/DynaMoth_Bug_dot_jar_Commons-Math_98556fed;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 7 \
	--source src/main/java \
	--classpath "target/classes:target/test-classes:/home/tdurieux/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
16:19:50.042 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
16:19:50.053 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Bug_dot_jar_Commons-Math_98556fed/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Commons-Math_98556fed/target/test-classes/, file:/home/tdurieux/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
16:19:50.054 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
16:19:50.054 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.RetryRunnerTest, org.apache.commons.math.analysis.FunctionUtilsTest, org.apache.commons.math.analysis.function.GaussianTest, org.apache.commons.math.analysis.function.HarmonicOscillatorTest, org.apache.commons.math.analysis.function.LogisticTest, org.apache.commons.math.analysis.function.LogitTest, org.apache.commons.math.analysis.function.SigmoidTest, org.apache.commons.math.analysis.function.StepFunctionTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.IllinoisSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.MullerSolver2Test, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.PegasusSolverTest, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.SecantSolverTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math.dfp.DfpDecTest, org.apache.commons.math.dfp.DfpMathTest, org.apache.commons.math.dfp.DfpTest, org.apache.commons.math.distribution.AbtractIntegerDistributionTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.exception.DimensionMismatchExceptionTest, org.apache.commons.math.exception.MaxCountExceededExceptionTest, org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest, org.apache.commons.math.exception.NotPositiveExceptionTest, org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math.exception.OutOfRangeExceptionTest, org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math.exception.util.ArgUtilsTest, org.apache.commons.math.exception.util.ExceptionContextTest, org.apache.commons.math.filter.KalmanFilterTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math.geometry.euclidean.threed.LineTest, org.apache.commons.math.geometry.euclidean.threed.PlaneTest, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math.geometry.euclidean.threed.RotationTest, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math.geometry.euclidean.twod.LineTest, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math.geometry.euclidean.twod.SubLineTest, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math.linear.AbstractRealVectorTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.CholeskyDecompositionImplTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.EigenDecompositionImplTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.FieldLUDecompositionImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.SingularValueDecompositionImplTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.events.OverlappingEventsTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.direct.CMAESOptimizerTest, org.apache.commons.math.optimization.direct.PowellOptimizerTest, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.GaussianFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.univariate.BracketFinderTest, org.apache.commons.math.optimization.univariate.BrentOptimizerTest, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.BitsStreamGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.RandomGeneratorAbstractTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.Well1024aTest, org.apache.commons.math.random.Well19937aTest, org.apache.commons.math.random.Well19937cTest, org.apache.commons.math.random.Well44497aTest, org.apache.commons.math.random.Well44497bTest, org.apache.commons.math.random.Well512aTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.MannWhitneyUTestTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.FastMathStrictComparisonTest, org.apache.commons.math.util.FastMathTest, org.apache.commons.math.util.FastMathTestPerformance, org.apache.commons.math.util.IncrementorTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MultidimensionalCounterTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.PairTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.TransformerMapTest]
16:19:50.057 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@2ff4f00f', projectTests=[org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.RetryRunnerTest, org.apache.commons.math.analysis.FunctionUtilsTest, org.apache.commons.math.analysis.function.GaussianTest, org.apache.commons.math.analysis.function.HarmonicOscillatorTest, org.apache.commons.math.analysis.function.LogisticTest, org.apache.commons.math.analysis.function.LogitTest, org.apache.commons.math.analysis.function.SigmoidTest, org.apache.commons.math.analysis.function.StepFunctionTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.IllinoisSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.MullerSolver2Test, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.PegasusSolverTest, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.SecantSolverTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math.dfp.DfpDecTest, org.apache.commons.math.dfp.DfpMathTest, org.apache.commons.math.dfp.DfpTest, org.apache.commons.math.distribution.AbtractIntegerDistributionTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.exception.DimensionMismatchExceptionTest, org.apache.commons.math.exception.MaxCountExceededExceptionTest, org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest, org.apache.commons.math.exception.NotPositiveExceptionTest, org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math.exception.OutOfRangeExceptionTest, org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math.exception.util.ArgUtilsTest, org.apache.commons.math.exception.util.ExceptionContextTest, org.apache.commons.math.filter.KalmanFilterTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math.geometry.euclidean.threed.LineTest, org.apache.commons.math.geometry.euclidean.threed.PlaneTest, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math.geometry.euclidean.threed.RotationTest, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math.geometry.euclidean.twod.LineTest, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math.geometry.euclidean.twod.SubLineTest, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math.linear.AbstractRealVectorTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.CholeskyDecompositionImplTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.EigenDecompositionImplTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.FieldLUDecompositionImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.SingularValueDecompositionImplTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.events.OverlappingEventsTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.direct.CMAESOptimizerTest, org.apache.commons.math.optimization.direct.PowellOptimizerTest, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.GaussianFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.univariate.BracketFinderTest, org.apache.commons.math.optimization.univariate.BrentOptimizerTest, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.BitsStreamGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.RandomGeneratorAbstractTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.Well1024aTest, org.apache.commons.math.random.Well19937aTest, org.apache.commons.math.random.Well19937cTest, org.apache.commons.math.random.Well44497aTest, org.apache.commons.math.random.Well44497bTest, org.apache.commons.math.random.Well512aTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.MannWhitneyUTestTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.FastMathStrictComparisonTest, org.apache.commons.math.util.FastMathTest, org.apache.commons.math.util.FastMathTestPerformance, org.apache.commons.math.util.IncrementorTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MultidimensionalCounterTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.PairTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.TransformerMapTest], complianceLevel=7, outputFolder=., json=true}
16:19:50.058 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 24
16:19:50.066 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 419 MB
16:19:50.066 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
16:19:50.066 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 483 MB
16:19:50.066 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
16:19:50.067 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
16:19:50.067 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
16:22:36.073 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
16:22:36.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.AbstractRandomGenerator:179 which is executed by 2 tests
1656920239
16:22:36.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
16:22:36.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.AbstractRandomGenerator:137 which is executed by 3 tests
1656920239
16:22:36.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
16:22:36.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.TestRandomGenerator:39 which is executed by 36 tests
16:22:36.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.random.TestRandomGenerator:39
16:22:36.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
16:22:36.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.TestRandomGenerator:35 which is executed by 40 tests
16:22:36.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.random.TestRandomGenerator:35
16:22:36.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
16:22:36.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.TestRandomGenerator:34 which is executed by 40 tests
16:22:36.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.random.TestRandomGenerator:34
16:22:36.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
16:22:36.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.TestRandomGenerator:33 which is executed by 40 tests
16:22:36.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.random.TestRandomGenerator:33
16:22:36.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
16:22:36.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.AbstractRandomGenerator:68 which is executed by 40 tests
1656920239
16:22:36.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
16:22:36.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.AbstractRandomGenerator:67 which is executed by 40 tests
1656920239
16:22:36.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:22:40.493 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (3690 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 4
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

16:22:41.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
16:22:41.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.AbstractRandomGenerator:63 which is executed by 40 tests
1656920239
16:22:41.201 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
16:22:41.201 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.AbstractRandomGenerator:62 which is executed by 40 tests
1656920239
16:22:41.288 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:22:44.969 [pool-10-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (3667 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 4
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

16:22:45.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
16:22:45.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3383 which is executed by 266 tests
1033054629
16:22:45.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
16:22:45.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:593 which is executed by 69 tests
1857420685
16:22:45.529 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
16:22:45.529 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:570 which is executed by 69 tests
1857420685
16:22:45.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:22:55.670 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10008 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:22:56.219 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:23:05.814 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9588 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:23:06.238 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
16:23:06.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:562 which is executed by 69 tests
1857420685
16:23:06.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
16:23:06.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:560 which is executed by 69 tests
1857420685
16:23:06.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:23:15.877 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9443 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:23:16.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
16:23:16.283 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:556 which is executed by 69 tests
1857420685
16:23:16.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:23:25.839 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9457 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:23:26.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
16:23:26.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:555 which is executed by 69 tests
1857420685
16:23:26.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:23:35.826 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9481 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:23:36.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:23:45.729 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9486 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:23:46.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
16:23:46.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:554 which is executed by 69 tests
1857420685
16:23:46.202 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:23:55.662 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9453 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:23:56.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
16:23:56.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:553 which is executed by 69 tests
1857420685
16:23:56.120 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:24:05.652 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9525 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:24:06.023 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
16:24:06.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:551 which is executed by 69 tests
1857420685
16:24:06.115 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:24:15.597 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9476 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:24:15.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
16:24:15.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:547 which is executed by 69 tests
1857420685
16:24:16.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:24:25.504 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9443 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:24:25.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
16:24:25.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:546 which is executed by 69 tests
1857420685
16:24:25.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:24:35.398 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9418 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:24:35.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:24:45.207 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9458 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:24:45.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
16:24:45.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:543 which is executed by 69 tests
1857420685
16:24:45.652 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:24:55.073 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9414 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:24:55.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
16:24:55.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:542 which is executed by 69 tests
1857420685
16:24:55.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:25:05.165 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9650 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:25:05.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
16:25:05.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:541 which is executed by 69 tests
1857420685
16:25:05.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:25:15.166 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9565 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:25:15.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:25:25.063 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9545 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

16:25:25.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
16:25:25.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:538 which is executed by 69 tests
1857420685
16:25:25.479 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:25:34.927 [pool-80-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9442 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:25:35.283 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
16:25:35.284 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:537 which is executed by 69 tests
1857420685
16:25:35.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:25:44.805 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9422 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:25:45.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
16:25:45.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:536 which is executed by 69 tests
1857420685
16:25:45.274 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:25:54.727 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9445 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:25:55.062 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:26:04.555 [pool-92-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9486 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:26:04.889 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
16:26:04.889 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:533 which is executed by 69 tests
1857420685
16:26:04.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:26:14.477 [pool-96-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9491 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:26:14.813 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
16:26:14.813 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:532 which is executed by 69 tests
1857420685
16:26:14.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:26:24.377 [pool-100-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9467 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:26:24.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:26:34.249 [pool-104-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9523 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:26:34.602 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
16:26:34.603 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:530 which is executed by 69 tests
1857420685
16:26:34.693 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:26:44.152 [pool-108-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9453 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:26:44.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
16:26:44.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:529 which is executed by 69 tests
1857420685
16:26:44.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:26:53.997 [pool-112-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9413 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:26:54.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
16:26:54.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:527 which is executed by 69 tests
1857420685
16:26:54.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
16:26:54.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:525 which is executed by 69 tests
1857420685
16:26:54.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
16:26:54.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:524 which is executed by 69 tests
1857420685
16:26:54.613 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
16:26:54.613 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:523 which is executed by 69 tests
1857420685
16:26:54.702 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
16:26:54.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:522 which is executed by 69 tests
1857420685
16:26:54.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
16:26:54.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:329 which is executed by 69 tests
1857420685
16:26:54.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
16:26:54.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:328 which is executed by 69 tests
1857420685
16:26:54.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:27:04.498 [pool-116-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9517 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:27:04.847 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
16:27:04.848 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:266 which is executed by 69 tests
1857420685
16:27:04.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
16:27:04.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:248 which is executed by 69 tests
1857420685
16:27:05.026 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
16:27:05.027 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1488 which is executed by 69 tests
68623
16:27:05.170 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
16:27:05.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1485 which is executed by 69 tests
68623
16:27:05.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:27:14.873 [pool-120-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9559 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:27:15.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
16:27:15.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1484 which is executed by 69 tests
68623
16:27:15.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:27:25.052 [pool-124-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9436 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:27:25.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
16:27:25.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1482 which is executed by 69 tests
68623
16:27:25.676 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:27:35.139 [pool-128-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9457 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:27:35.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:27:45.224 [pool-132-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9575 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:27:45.718 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
16:27:45.718 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1476 which is executed by 69 tests
68623
16:27:45.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:27:55.413 [pool-136-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9564 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:27:55.897 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:28:05.338 [pool-140-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9434 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:28:05.826 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
16:28:05.826 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1470 which is executed by 69 tests
68623
16:28:05.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:28:15.358 [pool-144-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9402 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:28:15.839 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:28:25.341 [pool-148-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9495 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:28:25.800 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
16:28:25.800 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1463 which is executed by 69 tests
68623
16:28:25.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:28:35.453 [pool-152-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9490 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:28:35.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:28:45.411 [pool-156-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9453 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:28:45.882 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
16:28:45.882 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1460 which is executed by 69 tests
68623
16:28:46.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:28:55.531 [pool-160-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9506 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:28:56.000 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
16:28:56.000 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1459 which is executed by 69 tests
68623
16:28:56.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:29:06.403 [pool-164-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (10273 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

16:32:26.673 [pool-163-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
16:32:26.673 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
16:32:26.673 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
16:32:26.673 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1458 which is executed by 69 tests
68623
16:32:26.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
16:32:26.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1457 which is executed by 69 tests
68623
16:32:26.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:32:36.392 [pool-167-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9460 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:33:22.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
16:33:22.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1456 which is executed by 69 tests
68623
16:33:22.228 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
16:33:22.228 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1454 which is executed by 69 tests
68623
16:33:22.349 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:33:31.906 [pool-171-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9549 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:33:32.348 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:33:41.819 [pool-175-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9465 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:33:42.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
16:33:42.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1438 which is executed by 69 tests
68623
16:33:42.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:33:51.818 [pool-179-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9407 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:33:52.252 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
16:33:52.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1437 which is executed by 69 tests
68623
16:33:52.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:34:01.853 [pool-183-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9471 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:34:02.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
16:34:02.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1419 which is executed by 69 tests
68623
16:34:02.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:34:11.891 [pool-187-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9471 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:34:12.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
16:34:12.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1418 which is executed by 69 tests
68623
16:34:12.454 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
16:34:12.454 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:642 which is executed by 69 tests
68623
16:34:12.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
16:34:12.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:211 which is executed by 72 tests
1648821820
16:34:12.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
16:34:12.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:210 which is executed by 72 tests
1648821820
16:34:12.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:34:22.299 [pool-191-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9548 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:34:22.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
16:34:22.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:201 which is executed by 73 tests
1648821820
16:34:22.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
16:34:22.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:199 which is executed by 73 tests
1648821820
16:34:22.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:34:32.353 [pool-195-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9553 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:34:32.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
16:34:32.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:195 which is executed by 73 tests
1648821820
16:34:32.750 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:34:42.264 [pool-199-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9508 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:34:42.598 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
16:34:42.598 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:194 which is executed by 73 tests
1648821820
16:34:42.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:34:52.352 [pool-203-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9665 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:34:52.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
16:34:52.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:193 which is executed by 73 tests
1648821820
16:34:52.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:35:02.399 [pool-207-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9630 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:35:02.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:35:12.319 [pool-211-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9603 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:35:12.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
16:35:12.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:192 which is executed by 73 tests
1648821820
16:35:12.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:35:22.252 [pool-215-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9526 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:35:22.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
16:35:22.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:191 which is executed by 73 tests
1648821820
16:35:22.652 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:35:32.181 [pool-219-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9523 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:35:32.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
16:35:32.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:190 which is executed by 73 tests
1648821820
16:35:32.589 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
16:35:32.589 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:189 which is executed by 73 tests
1648821820
16:35:32.673 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
16:35:32.673 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:188 which is executed by 73 tests
1648821820
16:35:32.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
16:35:32.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:187 which is executed by 73 tests
1648821820
16:35:32.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:35:42.417 [pool-223-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9570 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:35:42.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
16:35:42.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:183 which is executed by 73 tests
1648821820
16:35:42.822 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:35:52.400 [pool-227-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9571 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:35:52.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
16:35:52.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:182 which is executed by 73 tests
1648821820
16:35:52.800 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:36:02.335 [pool-231-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9529 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:36:02.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:36:12.153 [pool-235-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9496 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:36:12.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
16:36:12.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:180 which is executed by 73 tests
1648821820
16:36:12.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:36:22.039 [pool-239-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9484 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:36:22.360 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
16:36:22.361 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:179 which is executed by 73 tests
1648821820
16:36:22.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:36:31.973 [pool-243-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9522 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:36:32.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
16:36:32.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:178 which is executed by 73 tests
1648821820
16:36:32.378 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:36:41.814 [pool-247-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9429 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:36:42.135 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:36:51.665 [pool-251-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9524 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:36:51.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
16:36:51.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:177 which is executed by 73 tests
1648821820
16:36:52.063 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:37:01.494 [pool-255-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9424 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:37:01.826 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
16:37:01.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:176 which is executed by 73 tests
1648821820
16:37:01.910 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:37:11.403 [pool-259-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9484 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:37:11.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
16:37:11.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:175 which is executed by 73 tests
1648821820
16:37:11.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
16:37:11.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:174 which is executed by 73 tests
1648821820
16:37:11.889 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
16:37:11.889 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:173 which is executed by 73 tests
1648821820
16:37:11.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
16:37:11.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:172 which is executed by 73 tests
1648821820
16:37:12.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:37:21.477 [pool-263-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9414 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:37:21.785 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
16:37:21.785 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:170 which is executed by 73 tests
1648821820
16:37:21.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
16:37:21.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:169 which is executed by 73 tests
1648821820
16:37:21.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
16:37:21.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:168 which is executed by 73 tests
1648821820
16:37:22.038 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:37:31.618 [pool-267-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9573 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:37:31.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
16:37:31.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:163 which is executed by 73 tests
1648821820
16:37:32.013 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:37:41.603 [pool-271-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9584 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:37:41.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:37:51.468 [pool-275-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9535 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:37:51.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
16:37:51.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:152 which is executed by 99 tests
1648821820
16:37:51.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
16:37:51.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:150 which is executed by 99 tests
1648821820
16:37:51.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:38:01.535 [pool-279-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9581 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:38:01.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
16:38:01.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:149 which is executed by 99 tests
1648821820
16:38:01.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:38:11.456 [pool-283-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9514 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:38:11.773 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
16:38:11.773 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:146 which is executed by 99 tests
1648821820
16:38:11.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:38:21.367 [pool-287-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9503 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:38:21.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
16:38:21.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:145 which is executed by 99 tests
1648821820
16:38:21.764 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:38:31.324 [pool-291-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9554 ms)
<> Total tests run: 35
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
16:38:31.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
16:38:31.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:144 which is executed by 99 tests
1648821820
16:38:31.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
16:38:31.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.RetryRunner$1:59 which is executed by 413 tests
16:38:31.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.RetryRunner$1:59
16:38:31.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
16:38:31.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.RandomDataImpl:886 which is executed by 413 tests
-1412529426
16:38:31.822 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
16:38:31.822 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.RandomDataImpl:885 which is executed by 413 tests
-1412529426
16:38:31.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:38:35.588 [pool-295-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (3656 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 4
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

16:38:35.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
16:38:35.817 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.RandomDataImpl:883 which is executed by 413 tests
-1412529426
16:38:35.914 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:38:39.576 [pool-301-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (3653 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 4
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

16:38:39.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
16:38:39.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.RandomDataImpl:882 which is executed by 413 tests
-1412529426
16:38:39.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:38:43.560 [pool-307-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (3659 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 4
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

16:38:43.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:38:47.432 [pool-313-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (3670 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 4
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

16:38:47.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
16:38:47.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.inference.ChiSquareTestImpl:414 which is executed by 418 tests
326856628
16:38:47.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
16:38:47.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.stat.inference.ChiSquareTestImpl:413 which is executed by 418 tests
326856628
16:38:47.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 1000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: Walked too far astray: 10000
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:38:51.473 [pool-319-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (3653 ms)
<> Total tests run: 80
<> Ignored tests: 0
<> Failed tests: 4
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 1000]
java.lang.AssertionError: Walked too far astray: 1000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextLong2(RandomGeneratorAbstractTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~ testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
[Walked too far astray: 10000]
java.lang.AssertionError: Walked too far astray: 10000    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.random.RandomGeneratorAbstractTest.testNextInt2(RandomGeneratorAbstractTest.java:229)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

16:38:51.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
16:38:51.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.RetryRunner:46 which is executed by 427 tests
16:38:51.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.RetryRunner:46
16:38:51.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
16:38:51.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.RetryRunner:45 which is executed by 427 tests
16:38:51.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.RetryRunner:45
16:38:51.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
16:38:51.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.RetryRunner$1:57 which is executed by 427 tests
16:38:51.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.RetryRunner$1:57
16:38:51.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
16:38:51.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.RetryRunner$1:56 which is executed by 427 tests
16:38:51.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.RetryRunner$1:56
16:38:51.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
16:38:51.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.RetryRunner$1:54 which is executed by 427 tests
16:38:51.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math.RetryRunner$1:54
16:38:51.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
16:38:51.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3882 which is executed by 246 tests
1033054629
16:38:51.803 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:38:52.027 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 567
16:38:52.027 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 3608
16:38:52.027 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 77
16:38:52.028 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
16:38:52.028 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 1141763ms
16:38:52.028 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_ANGELIC_VALUE
Command exited with non-zero status 255
2007.04user 11.47system 19:03.60elapsed 176%CPU (0avgtext+0avgdata 1916708maxresident)k
40976inputs+8960outputs (3major+880823minor)pagefaults 0swaps


Node: petitprince-7.luxembourg.grid5000.fr



Date: Sun Dec 30 16:38:52 EST 2018

