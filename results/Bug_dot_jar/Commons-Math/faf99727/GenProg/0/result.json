{
  "repair_end": "2018-12-30 17:28:42.800734", 
  "repair_begin": "2018-12-30 16:52:25.951428", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_715/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:27:35.335636286 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,11 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_715/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:27:35.339636333 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_493/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:20.509327513 -0500\n@@ -101,19 +101,29 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -132,7 +142,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +155,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +181,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_493/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:20.513327561 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "if (!ball.contains(pi,tolerance)) {\n  support.add(pi);\n  ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n  for (int j=i; j > 1; --j) {\n    extreme.set(j,extreme.get(j - 1));\n  }\n  extreme.set(0,pi);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "this.tolerance=tolerance;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_577/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:32.122181790 -0500\n@@ -104,16 +104,10 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,13 +135,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +159,11 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_556/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:18.794023384 -0500\n@@ -101,14 +101,51 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +169,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +179,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +203,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_556/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:25:18.794023384 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        getContext().addMessage(LocalizedFormats.ITERATIONS);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.ITERATIONS);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_448/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:23:23.752644042 -0500\n@@ -101,19 +101,30 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -144,9 +155,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +181,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_448/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:23:23.752644042 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_147/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:41.045089467 -0500\n@@ -72,7 +72,8 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        double dMax = -1.0;\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -103,17 +104,30 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_567/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:22.786070856 -0500\n@@ -101,14 +101,65 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,8 +183,10 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n-                final P pi = extreme.get(i);\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tfinal P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n                     // we have found an outside point,\n@@ -141,13 +194,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +218,10 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_567/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:25:22.786070856 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        getContext().addMessage(LocalizedFormats.ITERATIONS);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.ITERATIONS);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 136, 
          "faulty": "final P pi=extreme.get(i);", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_757/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:28:32.816310062 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,11 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n@@ -166,7 +166,7 @@\n \n         final P center = ball.getCenter();\n         P farthest   = null;\n-        double dMax  = -1.0;\n+        double dMax = -1.0;\n \n         for (final P point : points) {\n             final double d = point.distance(center);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_757/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:28:32.816310062 -0500\n@@ -134,7 +134,9 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final List<Object> list = new ArrayList<Object>();\n+\t\tfinal StringBuilder sb = new StringBuilder();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 169, 
          "faulty": "double dMax=-1.0;", 
          "type": "Replace", 
          "seed": "double dMax=-1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_354/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:59.079610461 -0500\n@@ -88,7 +88,8 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        double dMax = -1.0;\n+\t\tEnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n@@ -101,19 +102,43 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,12 +166,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n@@ -172,7 +192,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tEnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_354/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:21:59.083610510 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_725/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:27:50.883818785 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,8 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_725/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:27:50.887818832 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 172, 
          "faulty": "final double d=point.distance(center);", 
          "type": "Replace", 
          "seed": "final double d=point.distance(center);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_183/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:16.389553902 -0500\n@@ -104,16 +104,12 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_502/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:23.433362557 -0500\n@@ -86,8 +86,7 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n+        support.clear();\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -101,14 +100,37 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +154,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +167,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +193,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tList<P> extreme = new ArrayList<P>(max);\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "List<P> extreme=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_604/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:52.574424404 -0500\n@@ -102,13 +102,7 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +135,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n@@ -172,7 +161,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "Delete", 
          "seed": "this.tolerance=tolerance;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_370/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:15.579813409 -0500\n@@ -101,12 +101,25 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             ball = moveToFrontBall(extreme, support);\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -146,7 +159,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +184,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_370/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:22:15.583813458 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_579/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:32.586187300 -0500\n@@ -99,16 +99,26 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            final P center = ball.getCenter();\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +142,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +152,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_594/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:49.786391362 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -144,7 +139,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n@@ -172,7 +166,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_458/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:23:33.224758566 -0500\n@@ -103,17 +103,14 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -132,7 +129,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +142,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +168,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_458/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:23:33.228758614 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_130/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:24.432868335 -0500\n@@ -72,7 +72,8 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        double dMax = -1.0;\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -103,17 +104,32 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                extreme.add(0, farthest);\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\tfinal P center = ball.getCenter();\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -131,6 +147,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "extreme.add(0,farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_302/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:12.135028232 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -144,7 +143,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n@@ -172,7 +170,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_302/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:21:12.135028232 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_381/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:25.223931659 -0500\n@@ -101,21 +101,27 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n-\n \n         }\n     }\n@@ -144,9 +150,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +176,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_381/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:22:25.223931659 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n@@ -178,7 +179,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Delete", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_377/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:24.183918920 -0500\n@@ -101,19 +101,71 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,12 +193,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n@@ -172,7 +219,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_377/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:22:24.187918969 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_533/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:46.865642859 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,13 +150,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +174,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_279/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:47.718722246 -0500\n@@ -101,19 +101,29 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,12 +151,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_298/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:05.234941994 -0500\n@@ -105,15 +105,16 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\textreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -144,7 +145,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n@@ -172,7 +172,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_298/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:21:05.238942045 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_272/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:33.918548233 -0500\n@@ -105,15 +105,16 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\textreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,11 +142,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    ball = moveToFrontBall(extreme, support);\n                     extreme.set(0, pi);\n \n                 }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_526/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:44.373613093 -0500\n@@ -86,9 +86,9 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        support.clear();\n+        support.clear();\n+\t\tEnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n@@ -101,19 +101,29 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -132,7 +142,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +155,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +181,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tList<P> extreme = new ArrayList<P>(max);\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_526/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:44.377613140 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "List<P> extreme=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_552/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:05.941870396 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,13 +150,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +174,10 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_552/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:25:05.945870444 -0500\n@@ -178,7 +178,9 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\tmsgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_530/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:45.841630628 -0500\n@@ -86,8 +86,7 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n+        support.clear();\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -101,14 +100,37 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +154,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +167,8 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n+                        extreme.set(0, pi);\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +194,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tList<P> extreme = new ArrayList<P>(max);\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_530/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:24:45.845630677 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_530/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:45.845630677 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "List<P> extreme=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(0,pi);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_323/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:30.535257341 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -144,9 +153,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +179,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_323/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:21:30.539257390 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_561/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:20.642045363 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +136,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n@@ -172,7 +162,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_550/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:05.461864677 -0500\n@@ -101,14 +101,51 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +169,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +179,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +203,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_550/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:25:05.465864725 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        getContext().addMessage(LocalizedFormats.ITERATIONS);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.ITERATIONS);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_519/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:35.597508182 -0500\n@@ -101,19 +101,29 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -132,7 +142,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +152,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +176,10 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_519/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:35.597508182 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_282/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:54.302804989 -0500\n@@ -101,19 +101,29 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,12 +151,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_602/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:52.058418290 -0500\n@@ -104,16 +104,10 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,11 +135,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n@@ -172,7 +161,11 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_632/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:07.574602010 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,7 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_154/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:43.513122157 -0500\n@@ -72,7 +72,8 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        double dMax = -1.0;\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -103,17 +104,31 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\textreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_169/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:54.189263108 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -144,7 +143,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_618/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:57.906487568 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +136,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n@@ -172,7 +162,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_321/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:29.983250486 -0500\n@@ -103,17 +103,14 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_199/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:33.433775180 -0500\n@@ -105,8 +105,8 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.add(farthest);\n+\t\t\t\tsupport.clear();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "support.add(farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_344/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:54.899558915 -0500\n@@ -101,14 +101,37 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,12 +164,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n@@ -172,7 +190,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_241/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:00.626124944 -0500\n@@ -101,19 +101,29 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -146,7 +156,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_625/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:05.506577540 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,7 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_496/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:21.297336958 -0500\n@@ -101,14 +101,37 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +155,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +165,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +189,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_209/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:36.657816853 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_209/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:19:36.661816905 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgArguments.add(args);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgArguments.add(args);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_581/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:33.062192953 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +141,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +151,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +175,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_581/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:25:33.066193000 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        context = new HashMap<String, Object>();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_132/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:25.076876944 -0500\n@@ -105,15 +105,15 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,11 +141,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    extreme.set(0, pi);\n                     extreme.set(0, pi);\n \n                 }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "extreme.set(0,pi);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_116/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:13.472721360 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -131,6 +130,34 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_116/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:18:13.472721360 -0500\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_224/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:42.325889982 -0500\n@@ -101,15 +101,28 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n-            // it was an interesting point, move it to the front\n+            ball = moveToFrontBall(extreme, support);\n+\t\t\t// it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n@@ -146,7 +159,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 114, 
          "faulty": "extreme.add(0,farthest);", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_482/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:05.045141920 -0500\n@@ -101,19 +101,29 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -132,7 +142,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +155,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +181,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_482/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:05.045141920 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_713/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:27:34.859630696 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,10 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_713/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:27:34.859630696 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final StringBuilder sb = new StringBuilder();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_392/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:28.947977252 -0500\n@@ -102,8 +102,8 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n             if (ball.getRadius() < savedBall.getRadius()) {\n                 // TODO: fix this, it should never happen but it does!\n                 throw new MathInternalError();\n@@ -146,7 +146,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +171,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_392/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:22:28.951977300 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "this.tolerance=tolerance;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_289/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:56.490832448 -0500\n@@ -101,19 +101,29 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,12 +151,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "final P farthest=selectFarthest(points,ball);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_358/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:00.111623178 -0500\n@@ -101,14 +101,51 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -144,9 +181,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +207,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_358/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:22:00.111623178 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n@@ -178,7 +179,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_653/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:14.518684139 -0500\n@@ -104,16 +104,11 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n-            // it was an interesting point, move it to the front\n+            extreme.add(points.get(0));\n+\t\t\t// it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,13 +136,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +160,7 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "Delete", 
          "seed": "List<P> support=new ArrayList<P>(max);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_316/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:28.451231452 -0500\n@@ -101,12 +101,24 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +153,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    ball = moveToFrontBall(extreme, support);\n                     extreme.set(0, pi);\n \n                 }\n@@ -172,7 +180,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_103/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:08.676656764 -0500\n@@ -102,7 +102,8 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n+            ball = moveToFrontBall(extreme, support);\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n                 // TODO: fix this, it should never happen but it does!\n@@ -131,6 +132,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n@@ -165,7 +180,7 @@\n     public P selectFarthest(final List<P> points, final EnclosingBall<S, P> ball) {\n \n         final P center = ball.getCenter();\n-        P farthest   = null;\n+        P farthest = null;\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 168, 
          "faulty": "P farthest=null;", 
          "type": "Replace", 
          "seed": "P farthest=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_745/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:28:21.732180322 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,9 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_745/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:28:21.736180369 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_706/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:27:27.071539204 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,13 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_706/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:27:27.075539251 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_722/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:27:49.787805927 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,10 +136,22 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n+                    if (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t\t// it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "InsertBefore", 
          "seed": "if (!ball.contains(pi,tolerance)) {\n  support.add(pi);\n  ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n  for (int j=i; j > 1; --j) {\n    extreme.set(j,extreme.get(j - 1));\n  }\n  extreme.set(0,pi);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_334/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:45.479442547 -0500\n@@ -101,12 +101,24 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +153,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    ball = moveToFrontBall(extreme, support);\n                     extreme.set(0, pi);\n \n                 }\n@@ -172,7 +180,7 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "Delete", 
          "seed": "return center;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_253/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:21.938396502 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +139,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    ball = moveToFrontBall(extreme, support);\n                     extreme.set(0, pi);\n \n                 }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_305/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:13.175041214 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -144,9 +153,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +179,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_305/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:21:13.179041264 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_180/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:15.489542170 -0500\n@@ -94,7 +94,8 @@\n \n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n-            if (ball.contains(farthest, tolerance)) {\n+            extreme.add(points.get(0));\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n@@ -105,8 +106,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +141,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    EnclosingBall<S, P> savedBall = ball;\n                     extreme.set(0, pi);\n \n                 }\n@@ -164,7 +160,8 @@\n      */\n     public P selectFarthest(final List<P> points, final EnclosingBall<S, P> ball) {\n \n-        final P center = ball.getCenter();\n+        List<P> support = new ArrayList<P>(max);\n+\t\tfinal P center = ball.getCenter();\n         P farthest   = null;\n         double dMax  = -1.0;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 167, 
          "faulty": "final P center=ball.getCenter();", 
          "type": "InsertBefore", 
          "seed": "List<P> support=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_152/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:42.957114796 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_284/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:54.806811316 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -144,7 +143,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_284/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:20:54.806811316 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_688/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:27:02.995256026 -0500\n@@ -104,12 +104,8 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n-            // it was an interesting point, move it to the front\n+            support.add(farthest);\n+\t\t\t// it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n@@ -141,11 +137,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 114, 
          "faulty": "extreme.add(0,farthest);", 
          "type": "InsertBefore", 
          "seed": "support.add(farthest);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_135/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:31.732965746 -0500\n@@ -105,15 +105,15 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_328/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:37.711346370 -0500\n@@ -94,21 +94,43 @@\n \n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n-            if (ball.contains(farthest, tolerance)) {\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -144,9 +166,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_328/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:21:37.711346370 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_507/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:26.089394377 -0500\n@@ -86,8 +86,7 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n+        support.clear();\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -101,14 +100,37 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +154,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +167,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +193,10 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tList<P> extreme = new ArrayList<P>(max);\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_507/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:26.089394377 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "List<P> extreme=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_217/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:39.105848459 -0500\n@@ -103,12 +103,21 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +150,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    EnclosingBall<S, P> savedBall = ball;\n                     extreme.set(0, pi);\n \n                 }\n@@ -164,7 +169,8 @@\n      */\n     public P selectFarthest(final List<P> points, final EnclosingBall<S, P> ball) {\n \n-        final P center = ball.getCenter();\n+        List<P> support = new ArrayList<P>(max);\n+\t\tfinal P center = ball.getCenter();\n         P farthest   = null;\n         double dMax  = -1.0;\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_217/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:19:39.109848510 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_217/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:19:39.109848510 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgArguments.add(args);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 167, 
          "faulty": "final P center=ball.getCenter();", 
          "type": "InsertBefore", 
          "seed": "List<P> support=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgArguments.add(args);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_274/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:34.438554804 -0500\n@@ -103,10 +103,9 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_597/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:50.710402314 -0500\n@@ -86,8 +86,6 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -104,16 +102,10 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,13 +133,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +157,11 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_659/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:27.990843321 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_607/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:53.610436679 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +136,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_677/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:46.731064424 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,7 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_740/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:28:19.700156529 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -145,6 +143,7 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_740/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:28:19.704156576 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_260/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:29.970498300 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -144,7 +143,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_522/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:36.829522918 -0500\n@@ -101,14 +101,51 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +169,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +179,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +203,10 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_522/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:24:36.833522966 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        getContext().addMessage(LocalizedFormats.ITERATIONS);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_522/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:36.833522966 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.ITERATIONS);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_307/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:13.755048453 -0500\n@@ -101,19 +101,30 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\textreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -139,14 +150,10 @@\n                     // we have found an outside point,\n                     // enlarge the ball by adding it to the support\n                     support.add(pi);\n-                    ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n-\n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n+\t\t\t\t\tball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n+\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 142, 
          "faulty": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);", 
          "type": "InsertBefore", 
          "seed": "extreme.set(0,pi);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_424/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:23:08.408458095 -0500\n@@ -101,21 +101,55 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n-\n \n         }\n     }\n@@ -141,12 +175,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n@@ -172,7 +201,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_166/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:53.197250043 -0500\n@@ -103,10 +103,22 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_166/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:18:53.201250095 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgArguments.add(args);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgArguments.add(args);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_394/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:29.615985425 -0500\n@@ -101,20 +101,84 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+            extreme.add(points.get(0));\n \n \n         }\n@@ -141,12 +205,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n@@ -172,7 +231,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_394/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:22:29.619985473 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_194/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:32.173758878 -0500\n@@ -94,7 +94,8 @@\n \n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n-            if (ball.contains(farthest, tolerance)) {\n+            extreme.add(points.get(0));\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n@@ -105,15 +106,15 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_119/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:20.040809544 -0500\n@@ -72,7 +72,8 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        double dMax = -1.0;\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -103,17 +104,30 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -131,6 +145,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_651/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:13.958677517 -0500\n@@ -104,16 +104,10 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,13 +135,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +159,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_230/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:44.953923832 -0500\n@@ -104,16 +104,13 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\textreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -133,6 +130,18 @@\n         if (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,12 +150,8 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    EnclosingBall<S, P> savedBall = ball;\n+                    P farthest = null;\n \n                 }\n             }\n@@ -164,7 +169,8 @@\n      */\n     public P selectFarthest(final List<P> points, final EnclosingBall<S, P> ball) {\n \n-        final P center = ball.getCenter();\n+        List<P> support = new ArrayList<P>(max);\n+\t\tfinal P center = ball.getCenter();\n         P farthest   = null;\n         double dMax  = -1.0;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 167, 
          "faulty": "final P center=ball.getCenter();", 
          "type": "InsertBefore", 
          "seed": "List<P> support=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Replace", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_72/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:17:39.996266687 -0500\n@@ -102,7 +102,8 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n+            ball = moveToFrontBall(extreme, support);\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n                 // TODO: fix this, it should never happen but it does!\n@@ -131,6 +132,34 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_221/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:41.353877453 -0500\n@@ -105,15 +105,15 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,11 +141,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    ball = moveToFrontBall(extreme, support);\n                     extreme.set(0, pi);\n \n                 }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_325/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:31.047263700 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -146,7 +155,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "Delete", 
          "seed": "extreme.add(0,farthest);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_158/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:44.477134915 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +140,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    extreme.set(0, pi);\n                     extreme.set(0, pi);\n \n                 }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "extreme.set(0,pi);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_385/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:26.775950664 -0500\n@@ -101,14 +101,37 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,12 +164,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n@@ -172,7 +190,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "final P center=ball.getCenter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_512/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:27.861415598 -0500\n@@ -101,19 +101,29 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -132,7 +142,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +152,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +176,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_512/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:27.861415598 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_367/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:14.759803342 -0500\n@@ -88,7 +88,8 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        double dMax = -1.0;\n+\t\tEnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -104,17 +105,15 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+            extreme.add(points.get(0));\n+\t\t\textreme.add(points.get(0));\n+\t\t\tif (points == null || points.isEmpty()) {\n+\t\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t\t}\n \n \n         }\n@@ -144,9 +143,8 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n+                        return ball;\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +170,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_367/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:22:14.759803342 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_390/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:28.479971523 -0500\n@@ -102,18 +102,14 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -146,7 +142,7 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n+                    EnclosingBall<S, P> savedBall = ball;\n \n                 }\n             }\n@@ -172,7 +168,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_390/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:22:28.483971573 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_701/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:27:19.871454573 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,15 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_701/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:27:19.871454573 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                final int aLen = args.length;\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "final int aLen=args.length;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_709/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:27:33.599615897 -0500\n@@ -99,16 +99,12 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +141,8 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_428/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:23:09.908476297 -0500\n@@ -101,19 +101,58 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,12 +180,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n@@ -172,7 +206,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_428/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:23:09.912476346 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_352/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:58.543603854 -0500\n@@ -88,7 +88,8 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        double dMax = -1.0;\n+\t\tEnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -104,16 +105,12 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -144,9 +141,8 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n+                        return ball;\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +168,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_352/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:21:58.547603903 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_640/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:10.310634376 -0500\n@@ -99,16 +99,23 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +152,7 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_336/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:46.063449770 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -144,9 +153,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "Delete", 
          "seed": "extreme.add(0,farthest);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_203/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:34.805792922 -0500\n@@ -94,7 +94,8 @@\n \n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n-            if (ball.contains(farthest, tolerance)) {\n+            extreme.add(points.get(0));\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n@@ -105,8 +106,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +141,8 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    double dMax = -1.0;\n+\t\t\t\t\tEnclosingBall<S, P> savedBall = ball;\n                     extreme.set(0, pi);\n \n                 }\n@@ -164,7 +161,8 @@\n      */\n     public P selectFarthest(final List<P> points, final EnclosingBall<S, P> ball) {\n \n-        final P center = ball.getCenter();\n+        List<P> support = new ArrayList<P>(max);\n+\t\tfinal P center = ball.getCenter();\n         P farthest   = null;\n         double dMax  = -1.0;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 167, 
          "faulty": "final P center=ball.getCenter();", 
          "type": "InsertBefore", 
          "seed": "List<P> support=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_486/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:12.257228530 -0500\n@@ -88,7 +88,8 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        extreme.add(points.get(0));\n+\t\tEnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n@@ -101,14 +102,24 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +143,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +156,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_486/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:12.257228530 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_314/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:27.979225587 -0500\n@@ -88,7 +88,8 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        double dMax = -1.0;\n+\t\tEnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n@@ -104,16 +105,12 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -144,9 +141,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +167,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_314/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:21:27.979225587 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_268/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:32.518530534 -0500\n@@ -103,17 +103,19 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\textreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_379/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:24.747925829 -0500\n@@ -88,7 +88,8 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        double dMax = -1.0;\n+\t\tEnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -101,19 +102,43 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -144,9 +169,8 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n+                        return ball;\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +196,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_379/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:22:24.747925829 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_196/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:32.637764882 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +150,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    EnclosingBall<S, P> savedBall = ball;\n                     extreme.set(0, pi);\n \n                 }\n@@ -164,7 +169,8 @@\n      */\n     public P selectFarthest(final List<P> points, final EnclosingBall<S, P> ball) {\n \n-        final P center = ball.getCenter();\n+        List<P> support = new ArrayList<P>(max);\n+\t\tfinal P center = ball.getCenter();\n         P farthest   = null;\n         double dMax  = -1.0;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 167, 
          "faulty": "final P center=ball.getCenter();", 
          "type": "InsertBefore", 
          "seed": "List<P> support=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_413/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:59.008343908 -0500\n@@ -94,21 +94,59 @@\n \n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n-            if (ball.contains(farthest, tolerance)) {\n+            support.clear();\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,12 +179,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n@@ -172,7 +205,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_108/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:10.544681944 -0500\n@@ -84,7 +84,8 @@\n     private EnclosingBall<S, P> pivotingBall(final List<P> points) {\n \n         List<P> extreme = new ArrayList<P>(max);\n-        List<P> support = new ArrayList<P>(max);\n+        double dMax = -1.0;\n+\t\tList<P> support = new ArrayList<P>(max);\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n@@ -102,7 +103,8 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n+            ball = moveToFrontBall(extreme, support);\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n                 // TODO: fix this, it should never happen but it does!\n@@ -131,6 +133,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n@@ -165,7 +181,7 @@\n     public P selectFarthest(final List<P> points, final EnclosingBall<S, P> ball) {\n \n         final P center = ball.getCenter();\n-        P farthest   = null;\n+        P farthest = null;\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 168, 
          "faulty": "P farthest=null;", 
          "type": "Replace", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 87, 
          "faulty": "List<P> support=new ArrayList<P>(max);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_417/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:23:06.280432263 -0500\n@@ -101,19 +101,30 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -130,7 +141,8 @@\n         // create a new ball on the prescribed support\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n-        if (ball.getSupportSize() < max) {\n+        final P center = ball.getCenter();\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n@@ -146,7 +158,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_342/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:54.379552498 -0500\n@@ -88,7 +88,8 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        double dMax = -1.0;\n+\t\tEnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n@@ -101,14 +102,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -144,9 +154,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +180,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_342/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:21:54.383552548 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_583/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:33.542198652 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +141,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +151,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +175,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_583/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:25:33.542198652 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        context = new HashMap<String, Object>();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "this.generator=generator;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_621/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:04.526565942 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -132,7 +130,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +140,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_213/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:37.805831679 -0500\n@@ -104,16 +104,12 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,11 +137,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    EnclosingBall<S, P> savedBall = ball;\n                     extreme.set(0, pi);\n \n                 }\n@@ -164,7 +156,8 @@\n      */\n     public P selectFarthest(final List<P> points, final EnclosingBall<S, P> ball) {\n \n-        final P center = ball.getCenter();\n+        List<P> support = new ArrayList<P>(max);\n+\t\tfinal P center = ball.getCenter();\n         P farthest   = null;\n         double dMax  = -1.0;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 167, 
          "faulty": "final P center=ball.getCenter();", 
          "type": "InsertBefore", 
          "seed": "List<P> support=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_398/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:30.571997120 -0500\n@@ -101,14 +101,51 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -134,19 +171,15 @@\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n-                if (!ball.contains(pi, tolerance)) {\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n \n                     // we have found an outside point,\n                     // enlarge the ball by adding it to the support\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n@@ -172,7 +205,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 137, 
          "faulty": "if (!ball.contains(pi,tolerance)) {\n  support.add(pi);\n  ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n  for (int j=i; j > 1; --j) {\n    extreme.set(j,extreme.get(j - 1));\n  }\n  extreme.set(0,pi);\n}", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_694/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:27:16.747417838 -0500\n@@ -99,16 +99,12 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +141,11 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_666/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:36.478943512 -0500\n@@ -104,18 +104,10 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n-\n \n         }\n     }\n@@ -145,6 +137,8 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Delete", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_362/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:01.551640919 -0500\n@@ -101,14 +101,37 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -139,14 +162,7 @@\n                     // we have found an outside point,\n                     // enlarge the ball by adding it to the support\n                     support.add(pi);\n-                    ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n-\n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n@@ -172,7 +188,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_362/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:22:01.555640968 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 142, 
          "faulty": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_627/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:06.030583740 -0500\n@@ -99,14 +99,15 @@\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            if (points == null || points.isEmpty()) {\n+\t\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t\t}\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -141,11 +142,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_763/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:28:35.124337066 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,7 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n@@ -153,7 +149,8 @@\n \n         }\n \n-        return ball;\n+        support.clear();\n+\t\treturn ball;\n \n     }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_763/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:28:35.124337066 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final StringBuilder sb = new StringBuilder();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 156, 
          "faulty": "return ball;", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_731/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:28:04.959983843 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,7 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_731/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:28:04.959983843 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final StringBuilder sb = new StringBuilder();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final StringBuilder sb=new StringBuilder();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_265/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:31.570518545 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -139,13 +138,7 @@\n                     // we have found an outside point,\n                     // enlarge the ball by adding it to the support\n                     support.add(pi);\n-                    ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n-\n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    ball = moveToFrontBall(extreme, support);\n                     extreme.set(0, pi);\n \n                 }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 142, 
          "faulty": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);", 
          "type": "Delete", 
          "seed": "double dMax=-1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_245/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:01.870140855 -0500\n@@ -86,13 +86,14 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n-            // select the point farthest to current ball\n+            if (points == null || points.isEmpty()) {\n+\t\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t\t}\n+\t\t\t// select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n             if (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n@@ -105,15 +106,27 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\textreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -133,7 +146,8 @@\n         if (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n-                final P pi = extreme.get(i);\n+                double dMax = -1.0;\n+\t\t\t\tfinal P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n                     // we have found an outside point,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 136, 
          "faulty": "final P pi=extreme.get(i);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 96, 
          "faulty": "final P farthest=selectFarthest(points,ball);", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_95/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:17:54.236461198 -0500\n@@ -102,11 +102,11 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n+            ball = moveToFrontBall(extreme, support);\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -131,6 +131,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_419/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:23:06.792438480 -0500\n@@ -103,12 +103,8 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_754/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:28:31.732297376 -0500\n@@ -102,13 +102,7 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +135,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    P farthest = null;\n                     extreme.set(0, pi);\n \n                 }\n@@ -165,7 +155,7 @@\n     public P selectFarthest(final List<P> points, final EnclosingBall<S, P> ball) {\n \n         final P center = ball.getCenter();\n-        P farthest   = null;\n+        P farthest = null;\n         double dMax  = -1.0;\n \n         for (final P point : points) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_754/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:28:31.732297376 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 168, 
          "faulty": "P farthest=null;", 
          "type": "Replace", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "Delete", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_477/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:23:57.393049916 -0500\n@@ -101,14 +101,37 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +155,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +168,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +194,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_396/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:30.091991249 -0500\n@@ -101,12 +101,24 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -139,14 +151,7 @@\n                     // we have found an outside point,\n                     // enlarge the ball by adding it to the support\n                     support.add(pi);\n-                    ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n-\n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n@@ -172,7 +177,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_396/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:22:30.095991297 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 142, 
          "faulty": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_564/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:21.602056778 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +141,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +151,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +175,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_564/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:25:21.606056825 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        context = new HashMap<String, Object>();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_509/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:26.625400796 -0500\n@@ -86,8 +86,7 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n+        support.clear();\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -101,14 +100,37 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +154,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +167,8 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n+                        extreme.set(0, pi);\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +194,10 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tList<P> extreme = new ArrayList<P>(max);\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_509/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:24:26.629400844 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "List<P> extreme=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(0,pi);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_156/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:44.017128829 -0500\n@@ -105,15 +105,15 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_356/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:59.599616869 -0500\n@@ -101,12 +101,25 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             ball = moveToFrontBall(extreme, support);\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -144,9 +157,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +183,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_356/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:21:59.603616918 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_356/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:21:59.603616918 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_517/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:35.061501771 -0500\n@@ -101,14 +101,37 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +155,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +165,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +189,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_517/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:35.061501771 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_541/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:56.205754337 -0500\n@@ -101,14 +101,51 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +169,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +179,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +203,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_541/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:56.205754337 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_83/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:17:44.204324343 -0500\n@@ -86,8 +86,7 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n+        double dMax = -1.0;\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -131,6 +130,34 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Replace", 
          "seed": "double dMax=-1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_499/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:22.529351724 -0500\n@@ -88,7 +88,8 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        extreme.add(points.get(0));\n+\t\tEnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n@@ -101,19 +102,30 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -132,7 +144,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +157,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +183,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_499/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:22.533351772 -0500\n@@ -178,7 +178,9 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\tmsgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_647/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:12.546660821 -0500\n@@ -105,8 +105,6 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -131,27 +129,19 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n-\n-            for (int i = 0; i < extreme.size(); ++i) {\n-                final P pi = extreme.get(i);\n-                if (!ball.contains(pi, tolerance)) {\n-\n-                    // we have found an outside point,\n-                    // enlarge the ball by adding it to the support\n-                    support.add(pi);\n-                    ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n-\n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n-                }\n-            }\n-\n-        }\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n \n         return ball;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_403/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:43.752158117 -0500\n@@ -88,7 +88,7 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         while (true) {\n \n@@ -101,19 +101,43 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -144,9 +168,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_287/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:56.022826577 -0500\n@@ -103,10 +103,10 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_672/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:44.451037543 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,7 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_236/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:58.538098221 -0500\n@@ -103,12 +103,21 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,12 +150,9 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    EnclosingBall<S, P> savedBall = ball;\n+                    support.clear();\n+\t\t\t\t\textreme.set(0, pi);\n \n                 }\n             }\n@@ -164,7 +170,8 @@\n      */\n     public P selectFarthest(final List<P> points, final EnclosingBall<S, P> ball) {\n \n-        final P center = ball.getCenter();\n+        List<P> support = new ArrayList<P>(max);\n+\t\tfinal P center = ball.getCenter();\n         P farthest   = null;\n         double dMax  = -1.0;\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_236/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:19:58.542098273 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgArguments.add(args);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 167, 
          "faulty": "final P center=ball.getCenter();", 
          "type": "InsertBefore", 
          "seed": "List<P> support=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgArguments.add(args);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_571/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:24.554091873 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,11 +136,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n@@ -172,7 +162,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_294/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:04.174928731 -0500\n@@ -104,16 +104,12 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,11 +137,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n+                    ball = moveToFrontBall(extreme, support);\n                     extreme.set(0, pi);\n \n                 }\n@@ -172,7 +164,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_128/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:23.932861650 -0500\n@@ -105,8 +105,7 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_137/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:32.196971925 -0500\n@@ -103,10 +103,22 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_599/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:51.178407861 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -172,7 +167,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_742/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:28:20.308163649 -0500\n@@ -72,7 +72,8 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        P farthest = null;\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -104,11 +105,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +141,10 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_742/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:28:20.308163649 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final StringBuilder sb = new StringBuilder();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "P farthest=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_475/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:23:56.761042312 -0500\n@@ -88,7 +88,8 @@\n \n         // start with only first point selected as a candidate support\n         extreme.add(points.get(0));\n-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n+        extreme.add(points.get(0));\n+\t\tEnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n \n@@ -101,14 +102,24 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +143,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +156,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +182,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_475/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:23:56.761042312 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 91, 
          "faulty": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_111/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:11.628696544 -0500\n@@ -72,7 +72,8 @@\n             return generator.ballOnSupport(new ArrayList<P>());\n         }\n \n-        // Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n+        double dMax = -1.0;\n+\t\t// Emo Welzl algorithm with Bernd G\u00e4rtner and Linus K\u00e4llberg improvements\n         return pivotingBall(points);\n \n     }\n@@ -102,11 +103,11 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n+            ball = moveToFrontBall(extreme, support);\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -131,6 +132,34 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 76, 
          "faulty": "return pivotingBall(points);", 
          "type": "InsertBefore", 
          "seed": "double dMax=-1.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_121/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:20.648817690 -0500\n@@ -103,17 +103,30 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_318/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:28.987238113 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -144,7 +139,6 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n@@ -172,7 +166,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_318/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:21:28.991238163 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_629/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:06.498589278 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +141,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +154,12 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n+                        ball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +185,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_575/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:31.630175947 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +141,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +151,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +175,9 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_211/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:19:37.265824706 -0500\n@@ -86,8 +86,6 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -105,15 +103,27 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                for (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\textreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "return generator.ballOnSupport(new ArrayList<P>());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_388/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:27.959965159 -0500\n@@ -102,18 +102,14 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -146,7 +142,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +167,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_388/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:22:27.963965208 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "Delete", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_74/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:17:40.528273985 -0500\n@@ -86,8 +86,6 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -131,6 +129,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> ball=moveToFrontBall(extreme,support);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_171/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:54.657269270 -0500\n@@ -102,11 +102,24 @@\n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n             support.add(farthest);\n-            EnclosingBall<S, P> savedBall = ball;\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tEnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 105, 
          "faulty": "EnclosingBall<S,P> savedBall=ball;", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_145/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:18:40.565083104 -0500\n@@ -103,17 +103,30 @@\n             support.clear();\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -131,6 +144,20 @@\n         EnclosingBall<S, P> ball = generator.ballOnSupport(support);\n \n         if (ball.getSupportSize() < max) {\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t}\n+\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (ball.getSupportSize() < max) {\n \n             for (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 133, 
          "faulty": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_738/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:28:19.080149268 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,10 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n@@ -153,7 +152,8 @@\n \n         }\n \n-        return ball;\n+        support.clear();\n+\t\treturn ball;\n \n     }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_738/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:28:19.084149315 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final StringBuilder sb = new StringBuilder();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 156, 
          "faulty": "return ball;", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_332/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:44.983436412 -0500\n@@ -101,12 +101,25 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n+                support.clear();\n             }\n \n             // it was an interesting point, move it to the front\n@@ -144,9 +157,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +183,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                EnclosingBall<S, P> savedBall = ball;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 10:51:38.833758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_332/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 11:21:44.987436462 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_332/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:21:44.987436462 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_635/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:08.526613272 -0500\n@@ -105,17 +105,12 @@\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n             if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n             }\n \n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n-\n \n         }\n     }\n@@ -141,11 +136,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n                     extreme.set(0, pi);\n \n                 }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Delete", 
          "seed": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_515/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:24:34.577495982 -0500\n@@ -86,8 +86,7 @@\n         List<P> extreme = new ArrayList<P>(max);\n         List<P> support = new ArrayList<P>(max);\n \n-        // start with only first point selected as a candidate support\n-        extreme.add(points.get(0));\n+        support.clear();\n         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);\n \n         while (true) {\n@@ -101,19 +100,29 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -132,7 +141,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -144,9 +154,7 @@\n                     // it was an interesting point, move it to the front\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n@@ -172,7 +180,10 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tList<P> extreme = new ArrayList<P>(max);\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_515/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:24:34.581496029 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "List<P> extreme=new ArrayList<P>(max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 90, 
          "faulty": "extreme.add(points.get(0));", 
          "type": "Replace", 
          "seed": "support.clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_623/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:04.990571434 -0500\n@@ -101,19 +101,27 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -141,13 +149,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +173,12 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "Replace", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_405/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:22:44.268164411 -0500\n@@ -101,19 +101,30 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n-            // prune the least interesting points\n+            extreme.add(points.get(0));\n+\t\t\t// prune the least interesting points\n             extreme.subList(ball.getSupportSize(), extreme.size()).clear();\n \n \n@@ -146,7 +157,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 117, 
          "faulty": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_256/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:20:28.582480728 -0500\n@@ -101,14 +101,24 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n-            ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n+            extreme.add(points.get(0));\n+\t\t\tball = moveToFrontBall(extreme, support);\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -146,7 +156,6 @@\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n                     }\n-                    extreme.set(0, pi);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 106, 
          "faulty": "ball=moveToFrontBall(extreme,support);", 
          "type": "InsertBefore", 
          "seed": "extreme.add(points.get(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_615/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:25:57.082477809 -0500\n@@ -101,14 +101,23 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -132,7 +141,8 @@\n \n         if (ball.getSupportSize() < max) {\n \n-            for (int i = 0; i < extreme.size(); ++i) {\n+            final P center = ball.getCenter();\n+\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n                 final P pi = extreme.get(i);\n                 if (!ball.contains(pi, tolerance)) {\n \n@@ -141,13 +151,6 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n-\n                 }\n             }\n \n@@ -172,7 +175,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "EnclosingBall<S,P> savedBall=ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 135, 
          "faulty": "for (int i=0; i < extreme.size(); ++i) {\n  final P pi=extreme.get(i);\n  if (!ball.contains(pi,tolerance)) {\n    support.add(pi);\n    ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n    for (int j=i; j > 1; --j) {\n      extreme.set(j,extreme.get(j - 1));\n    }\n    extreme.set(0,pi);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "P farthest=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return farthest;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Delete", 
          "seed": "extreme.subList(ball.getSupportSize(),extreme.size()).clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.add(farthest);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_444/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:23:16.720558892 -0500\n@@ -94,21 +94,48 @@\n \n             // select the point farthest to current ball\n             final P farthest = selectFarthest(points, ball);\n-            if (ball.contains(farthest, tolerance)) {\n+            support.clear();\n+\t\t\tif (ball.contains(farthest, tolerance)) {\n                 // we have found a ball containing all points\n                 return ball;\n             }\n \n-            // recurse search, restricted to the small subset containing support and farthest point\n+            if (points == null || points.isEmpty()) {\n+\t\t\t\treturn generator.ballOnSupport(new ArrayList<P>());\n+\t\t\t}\n+\t\t\t// recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -141,12 +168,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n@@ -172,7 +194,8 @@\n             final double d = point.distance(center);\n             if (d > dMax) {\n                 farthest = point;\n-                dMax     = d;\n+                dMax = d;\n+\t\t\t\tdMax     = d;\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Delete", 
          "seed": "ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "Replace", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 175, 
          "faulty": "dMax=d;", 
          "type": "InsertBefore", 
          "seed": "dMax=d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "EnclosingBall<S,P> ball=generator.ballOnSupport(support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 97, 
          "faulty": "if (ball.contains(farthest,tolerance)) {\n  return ball;\n}", 
          "type": "InsertBefore", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 103, 
          "faulty": "support.clear();", 
          "type": "InsertBefore", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_643/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:26:11.274645778 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_296/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:21:04.698935288 -0500\n@@ -101,15 +101,25 @@\n \n             // recurse search, restricted to the small subset containing support and farthest point\n             support.clear();\n-            support.add(farthest);\n+            if (ball.getSupportSize() < max) {\n+\t\t\t\tfor (int i = 0; i < extreme.size(); ++i) {\n+\t\t\t\t\tfinal P pi = extreme.get(i);\n+\t\t\t\t\tif (!ball.contains(pi, tolerance)) {\n+\t\t\t\t\t\tsupport.add(pi);\n+\t\t\t\t\t\tball = moveToFrontBall(\n+\t\t\t\t\t\t\t\textreme.subList(i + 1, extreme.size()), support);\n+\t\t\t\t\t\tfor (int j = i; j > 1; --j) {\n+\t\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\textreme.set(0, pi);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tsupport.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n-            // it was an interesting point, move it to the front\n+            final P center = ball.getCenter();\n+\t\t\t// it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n \n@@ -141,12 +151,7 @@\n                     support.add(pi);\n                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);\n \n-                    // it was an interesting point, move it to the front\n-                    // according to Welzl's heuristic\n-                    for (int j = i; j > 1; --j) {\n-                        extreme.set(j, extreme.get(j - 1));\n-                    }\n-                    extreme.set(0, pi);\n+                    ball = moveToFrontBall(extreme, support);\n \n                 }\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 104, 
          "faulty": "support.add(farthest);", 
          "type": "InsertBefore", 
          "seed": "if (ball.getSupportSize() < max) {\n  for (int i=0; i < extreme.size(); ++i) {\n    final P pi=extreme.get(i);\n    if (!ball.contains(pi,tolerance)) {\n      support.add(pi);\n      ball=moveToFrontBall(extreme.subList(i + 1,extreme.size()),support);\n      for (int j=i; j > 1; --j) {\n        extreme.set(j,extreme.get(j - 1));\n      }\n      extreme.set(0,pi);\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 149, 
          "faulty": "extreme.set(0,pi);", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "this.generator=generator;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "support.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 146, 
          "faulty": "for (int j=i; j > 1; --j) {\n  extreme.set(j,extreme.get(j - 1));\n}", 
          "type": "Replace", 
          "seed": "ball=moveToFrontBall(extreme,support);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 114, 
          "faulty": "extreme.add(0,farthest);", 
          "type": "InsertBefore", 
          "seed": "final P center=ball.getCenter();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 10:51:38.925758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_748/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java\t2018-12-30 11:28:22.708191750 -0500\n@@ -104,11 +104,6 @@\n             support.add(farthest);\n             EnclosingBall<S, P> savedBall = ball;\n             ball = moveToFrontBall(extreme, support);\n-            if (ball.getRadius() < savedBall.getRadius()) {\n-                // TODO: fix this, it should never happen but it does!\n-                throw new MathInternalError();\n-            }\n-\n             // it was an interesting point, move it to the front\n             // according to G\u00e4rtner's heuristic\n             extreme.add(0, farthest);\n@@ -145,6 +140,8 @@\n                     // according to Welzl's heuristic\n                     for (int j = i; j > 1; --j) {\n                         extreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n+\t\t\t\t\t\textreme.set(j, extreme.get(j - 1));\n                     }\n                     extreme.set(0, pi);\n \n@@ -166,7 +163,7 @@\n \n         final P center = ball.getCenter();\n         P farthest   = null;\n-        double dMax  = -1.0;\n+        double dMax = -1.0;\n \n         for (final P point : points) {\n             final double d = point.distance(center);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 10:51:38.849758000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_748/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 11:28:22.708191750 -0500\n@@ -134,7 +134,9 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final List<Object> list = new ArrayList<Object>();\n+\t\tfinal StringBuilder sb = new StringBuilder();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "return ball;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 147, 
          "faulty": "extreme.set(j,extreme.get(j - 1));", 
          "type": "InsertBefore", 
          "seed": "extreme.set(j,extreme.get(j - 1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return pivotingBall(points);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 107, 
          "faulty": "if (ball.getRadius() < savedBall.getRadius()) {\n  throw new MathInternalError();\n}", 
          "type": "Delete", 
          "seed": "throw new MathInternalError();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 109, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "if (points == null || points.isEmpty()) {\n  return generator.ballOnSupport(new ArrayList<P>());\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final StringBuilder sb=new StringBuilder();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java", 
          "line": 169, 
          "faulty": "double dMax=-1.0;", 
          "type": "Replace", 
          "seed": "double dMax=-1.0;"
        }
      ]
    }
  ]
}